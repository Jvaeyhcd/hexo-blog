<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jvaeyhcd&#39;s Note</title>
  <subtitle>My Coding Note</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.jvaeyhcd.cc/"/>
  <updated>2016-10-27T03:03:06.000Z</updated>
  <id>http://www.jvaeyhcd.cc/</id>
  
  <author>
    <name>Jvaeyhcd</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS打包上传常见错误以及解决办法</title>
    <link href="http://www.jvaeyhcd.cc/2016/10/18/iOS%E6%89%93%E5%8C%85%E4%B8%8A%E4%BC%A0%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.jvaeyhcd.cc/2016/10/18/iOS打包上传常见错误以及解决办法/</id>
    <published>2016-10-18T08:02:20.000Z</published>
    <updated>2016-10-27T03:03:06.000Z</updated>
    
    <content type="html">&lt;p&gt;关于打包上传至AppStore，大家都认为是最后一步了，其实到了这里往往会遇到很多的坑。对于踩过的坑我不想再踩第二篇，所以在此将我遇到的所有奇葩问题在此做一个记录，当作对自己的一个提醒，同时也分享给给位。&lt;/p&gt;
&lt;h2 id=&quot;ERROR-ITMS-90535&quot;&gt;&lt;a href=&quot;#ERROR-ITMS-90535&quot; class=&quot;headerlink&quot; title=&quot;ERROR ITMS-90535&quot;&gt;&lt;/a&gt;ERROR ITMS-90535&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先这个原因导入了其他第三方导致的问题，首先找到友盟库里面的腾讯API,找到其中的info.plist文件：&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2016/10/18/iOS打包上传常见错误以及解决办法/QQ201610180.png&quot; alt=&quot;QQ201610180.png&quot; title=&quot;&quot;&gt;
&lt;ul&gt;
&lt;li&gt;找到箭头所指向的一行,随后删掉 这一行 就可以了：&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2016/10/18/iOS打包上传常见错误以及解决办法/QQ201610181.png&quot; alt=&quot;QQ201610181.png&quot; title=&quot;&quot;&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;ERROR-ITMS-90635&quot;&gt;&lt;a href=&quot;#ERROR-ITMS-90635&quot; class=&quot;headerlink&quot; title=&quot;ERROR ITMS-90635&quot;&gt;&lt;/a&gt;ERROR ITMS-90635&lt;/h2&gt;&lt;p&gt;这个是由于项目中有使用到Cocoapods导入第三方的库使用bitcode造成的，此种错误我在网上找到了三种解决办法：&lt;/p&gt;
&lt;h3 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h3&gt;&lt;p&gt;项目-&amp;gt;targets-&amp;gt;enable bitcode-&amp;gt;no&lt;/p&gt;
&lt;p&gt;pods-&amp;gt;project-&amp;gt;enable bitcode-&amp;gt;no&lt;/p&gt;
&lt;p&gt;如果以前设置过，现在不行了，pods的enable bitcode改成yes，然后再改成no，专治抽风&lt;/p&gt;
&lt;h3 id=&quot;方法二&quot;&gt;&lt;a href=&quot;#方法二&quot; class=&quot;headerlink&quot; title=&quot;方法二&quot;&gt;&lt;/a&gt;方法二&lt;/h3&gt;&lt;p&gt;podfile文件加入以下代码：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;post_install &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |installer|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    installer.pods_project.targets.each &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |target|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        target.build_configurations.each &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |config|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            config.build_settings[&lt;span class=&quot;string&quot;&gt;&#39;ENABLE_BITCODE&#39;&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;NO&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    end&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;方法三&quot;&gt;&lt;a href=&quot;#方法三&quot; class=&quot;headerlink&quot; title=&quot;方法三&quot;&gt;&lt;/a&gt;方法三&lt;/h3&gt;&lt;p&gt;打包上传的时候，注意界面是否有复选框“include bitcode”，改成不勾选&lt;/p&gt;
&lt;h2 id=&quot;ERROR-ITMS-90168&quot;&gt;&lt;a href=&quot;#ERROR-ITMS-90168&quot; class=&quot;headerlink&quot; title=&quot;ERROR ITMS-90168&quot;&gt;&lt;/a&gt;ERROR ITMS-90168&lt;/h2&gt;&lt;p&gt;关于这个错误网上给的所有解决办法都是如下的办法：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/.itmstransporter  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ rm update_check*  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ mv softwaresupport softwaresupport.bak  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; UploadTokens  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ rm *.token&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;ERROR-ITMS-4238&quot;&gt;&lt;a href=&quot;#ERROR-ITMS-4238&quot; class=&quot;headerlink&quot; title=&quot;ERROR ITMS-4238&quot;&gt;&lt;/a&gt;ERROR ITMS-4238&lt;/h2&gt;&lt;p&gt;出现这个错误的原因是iTunes Connect已经上传了一个相应版本号的包，然后现在上传的版本号没有修改，所以就出现了这个错误，解决办法十分简单，修改版本号，重新打包再上传就可以了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;关于打包上传至AppStore，大家都认为是最后一步了，其实到了这里往往会遇到很多的坑。对于踩过的坑我不想再踩第二篇，所以在此将我遇到的所有奇葩问题在此做一个记录，当作对自己的一个提醒，同时也分享给给位。&lt;/p&gt;
&lt;h2 id=&quot;ERROR-ITMS-90535&quot;&gt;&lt;a href=&quot;#ERROR-ITMS-90535&quot; class=&quot;headerlink&quot; title=&quot;ERROR ITMS-90535&quot;&gt;&lt;/a&gt;ERROR ITMS-90535&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;首先这个原因导入了其他第三方导致的问题，首先找到友盟库里面的腾讯API,找到其中的info.plist文件：&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2016/10/18/iOS打包上传常见错误以及解决办法/QQ201610180.png&quot; alt=&quot;QQ201610180.png&quot; title=&quot;&quot;&gt;
&lt;ul&gt;
&lt;li&gt;找到箭头所指向的一行,随后删掉 这一行 就可以了：&lt;/li&gt;
&lt;/ul&gt;
&lt;img src=&quot;/2016/10/18/iOS打包上传常见错误以及解决办法/QQ201610181.png&quot; alt=&quot;QQ201610181.png&quot; title=&quot;&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Cocoapods无法search到库的解决办法</title>
    <link href="http://www.jvaeyhcd.cc/2016/10/09/Cocoapods%E6%97%A0%E6%B3%95search%E5%88%B0%E5%BA%93%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.jvaeyhcd.cc/2016/10/09/Cocoapods无法search到库的解决办法/</id>
    <published>2016-10-09T09:05:43.000Z</published>
    <updated>2016-10-20T02:06:33.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;缘由&quot;&gt;&lt;a href=&quot;#缘由&quot; class=&quot;headerlink&quot; title=&quot;缘由&quot;&gt;&lt;/a&gt;缘由&lt;/h2&gt;&lt;p&gt;按照往常的方法一样安装Cocoapods，在安装的过程中遇到了一切问题，按照传统的命令&lt;code&gt;sudo gem install cocoapods&lt;/code&gt;出现了如下的错误：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ERROR:  While executing gem ... (Errno::EPERM)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Operation not permitted - /usr/bin/pod&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后再&lt;a href=&quot;http://stackoverflow.com/questions/30812777/cannot-install-cocoa-pods-after-uninstalling-results-in-error/30851030#30851030&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt;上找到了如下的解决办法:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install -n /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin cocoapods -v &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;-v可以跟版本号，来按照您想安装的版本。&lt;br&gt;这就这样Cocopods安装成功了，当然如果您没有翻墙的话安装Cocoapods需要切换ruby源到&lt;a href=&quot;https://gems.ruby-china.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gems.ruby-china.org&lt;/a&gt;，具体按照可以参考我的这篇文章&lt;a href=&quot;http://www.jvaeyhcd.cc/2016/02/20/CocoaPods%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/&quot;&gt;《CocoaPods安装和使用教程》&lt;/a&gt;。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;当我以为一切就绪的时候，我&lt;code&gt;pod search RxSwift&lt;/code&gt;却提示我如下的错误：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[!] Unable to find a pod with name, author, summary, or descriptionmatching &lt;span class=&quot;string&quot;&gt;&#39;······&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;对于有些类库确实是在Cocoapods中所不存在的，为了确定我们搜索的库是不是真的在Cocoapods的Repos中存在，我们可以到&lt;a href=&quot;https://cocoapods.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://cocoapods.org/&lt;/a&gt;中进行搜索。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h2&gt;&lt;p&gt;在记录一下自己的解决办法，同时分享一下自己的经验，希望能够帮助到大家。&lt;/p&gt;
&lt;h3 id=&quot;执行pod-setup&quot;&gt;&lt;a href=&quot;#执行pod-setup&quot; class=&quot;headerlink&quot; title=&quot;执行pod setup&quot;&gt;&lt;/a&gt;执行pod setup&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在终端输入&lt;code&gt;pod setup&lt;/code&gt;,会出现&lt;code&gt;Setting up CocoaPods master repo&lt;/code&gt;，等几分钟，会输入&lt;code&gt;Setup completed&lt;/code&gt;，说明&lt;code&gt;pod setup&lt;/code&gt;执行成功。&lt;/li&gt;
&lt;li&gt;结果pod search还是失败&lt;/li&gt;
&lt;li&gt;在终端输入&lt;code&gt;pod search RxSwift&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;依然还是提示&lt;code&gt;Unable to find a pod with name, author, summary, or descriptionmatching &amp;#39;RxSwift&amp;#39;&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;但是我输入&lt;code&gt;pod search pop&lt;/code&gt;，却有相应的结果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;删除-Library-Caches-CocoaPods目录下的search-index-json文件&quot;&gt;&lt;a href=&quot;#删除-Library-Caches-CocoaPods目录下的search-index-json文件&quot; class=&quot;headerlink&quot; title=&quot;删除~/Library/Caches/CocoaPods目录下的search_index.json文件&quot;&gt;&lt;/a&gt;删除~/Library/Caches/CocoaPods目录下的search_index.json文件&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pod setup&lt;/code&gt;成功后会生成&lt;code&gt;~/Library/Caches/CocoaPods/search_index.json&lt;/code&gt;文件。&lt;/li&gt;
&lt;li&gt;终端输入&lt;code&gt;rm ~/Library/Caches/CocoaPods/search_index.json&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;删除成功后再执行&lt;code&gt;pod search&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;执行pod-search&quot;&gt;&lt;a href=&quot;#执行pod-search&quot; class=&quot;headerlink&quot; title=&quot;执行pod search&quot;&gt;&lt;/a&gt;执行pod search&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;终端输入：&lt;code&gt;pod search RxSwift&lt;/code&gt;(不区分大小写)&lt;/li&gt;
&lt;li&gt;输出：&lt;code&gt;Creating search index for spec repo &amp;#39;master&amp;#39;.. Done!&lt;/code&gt;，稍等片刻就会出现所有带RxSwift字段的类库出现。&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;缘由&quot;&gt;&lt;a href=&quot;#缘由&quot; class=&quot;headerlink&quot; title=&quot;缘由&quot;&gt;&lt;/a&gt;缘由&lt;/h2&gt;&lt;p&gt;按照往常的方法一样安装Cocoapods，在安装的过程中遇到了一切问题，按照传统的命令&lt;code&gt;sudo gem install cocoapods&lt;/code&gt;出现了如下的错误：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ERROR:  While executing gem ... (Errno::EPERM)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Operation not permitted - /usr/bin/pod&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后再&lt;a href=&quot;http://stackoverflow.com/questions/30812777/cannot-install-cocoa-pods-after-uninstalling-results-in-error/30851030#30851030&quot;&gt;stackoverflow&lt;/a&gt;上找到了如下的解决办法:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo gem install -n /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin cocoapods -v &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;-v可以跟版本号，来按照您想安装的版本。&lt;br&gt;这就这样Cocopods安装成功了，当然如果您没有翻墙的话安装Cocoapods需要切换ruby源到&lt;a href=&quot;https://gems.ruby-china.org&quot;&gt;https://gems.ruby-china.org&lt;/a&gt;，具体按照可以参考我的这篇文章&lt;a href=&quot;http://www.jvaeyhcd.cc/2016/02/20/CocoaPods%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/&quot;&gt;《CocoaPods安装和使用教程》&lt;/a&gt;。&lt;br&gt;
    
    </summary>
    
    
      <category term="Cocoapods" scheme="http://www.jvaeyhcd.cc/tags/Cocoapods/"/>
    
  </entry>
  
  <entry>
    <title>使用 Xcode 8 构建版本 iTunes Connect 获取不到应用程序的状态的解决办法</title>
    <link href="http://www.jvaeyhcd.cc/2016/09/20/%E4%BD%BF%E7%94%A8-xcode-8-%E6%9E%84%E5%BB%BA%E7%89%88%E6%9C%AC-iTunes-Connect-%E8%8E%B7%E5%8F%96%E4%B8%8D%E5%88%B0%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%8A%B6%E6%80%81%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.jvaeyhcd.cc/2016/09/20/使用-xcode-8-构建版本-iTunes-Connect-获取不到应用程序的状态的解决办法/</id>
    <published>2016-09-20T05:19:33.000Z</published>
    <updated>2016-10-20T02:07:15.000Z</updated>
    
    <content type="html">&lt;p&gt;iOS10正式版本已发布，Xcode8也跟着就发布了，于是我就在第一时间将Xcode8和iOS10都更新了。但是一波需要适配的问题就来，有Xib的问题，还有很多界面上的问题，在iOS10上根本不能看。&lt;br&gt;通过半天的修改终于把界面适配好了，这时我以为iOS10的适配应该就到此为止了，于是我就Archive生成Release版本的ipa并将其提交到iTunesConnect，一切都是那么的顺利。然而事实并不是这样的，上传成功后我打开iTunesConnect网站登录我的开发账号，准备提交版本更新，然而我却找不到我之前提交的ipa。在app下的“活动”栏中的“所有构建版本”也没有我之前提交的版本。（这时我心想，我明明在Xcode中显示提交成功，为什么iTunesConnect中却不显示了，苹果也没有给出任何提示）&lt;/p&gt;
&lt;p&gt;我发现构建版本左边的“+”号可点，点开“+”号后发现：&lt;/p&gt;
&lt;img src=&quot;/2016/09/20/使用-xcode-8-构建版本-iTunes-Connect-获取不到应用程序的状态的解决办法/905614-c52750828b24f91e.png&quot; alt=&quot;905614-c52750828b24f91e.png&quot; title=&quot;&quot;&gt;
&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-c52750828b24f91e.png) --&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;上面显示我之前提交的几个版本都是无效的，但是在Xcode提交时成功的啊，如果失败也应该给个提示啊。这次却没有任何提示，这肯定不应该啊，每次iTunesConnect中app的状态发生变化，苹果都会发送邮件的，于是我去查阅了一下苹果的邮件，还真有。邮件中有明确的写明：&lt;br&gt;&lt;img src=&quot;/2016/09/20/使用-xcode-8-构建版本-iTunes-Connect-获取不到应用程序的状态的解决办法/905614-7e346e4ec6a37fa2.png&quot; alt=&quot;905614-7e346e4ec6a37fa2.png&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-7e346e4ec6a37fa2.png) --&gt;&lt;/p&gt;
&lt;p&gt;于是我重新打开项目在Info.plist中添加了如下配置：&lt;/p&gt;
&lt;img src=&quot;/2016/09/20/使用-xcode-8-构建版本-iTunes-Connect-获取不到应用程序的状态的解决办法/905614-9df0785347c9212e.png&quot; alt=&quot;905614-9df0785347c9212e.png&quot; title=&quot;&quot;&gt;
&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-9df0785347c9212e.png) --&gt;
&lt;blockquote&gt;
&lt;p&gt;在iOS10上如果没有上述配置就使用相机、相册、麦克风程序会闪退的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不知道还有没有其他原因，反正我就是这样解决的，再次做个笔记，同样也希望可以帮助到遇到相同问题的各位同行们。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;iOS10正式版本已发布，Xcode8也跟着就发布了，于是我就在第一时间将Xcode8和iOS10都更新了。但是一波需要适配的问题就来，有Xib的问题，还有很多界面上的问题，在iOS10上根本不能看。&lt;br&gt;通过半天的修改终于把界面适配好了，这时我以为iOS10的适配应该就到此为止了，于是我就Archive生成Release版本的ipa并将其提交到iTunesConnect，一切都是那么的顺利。然而事实并不是这样的，上传成功后我打开iTunesConnect网站登录我的开发账号，准备提交版本更新，然而我却找不到我之前提交的ipa。在app下的“活动”栏中的“所有构建版本”也没有我之前提交的版本。（这时我心想，我明明在Xcode中显示提交成功，为什么iTunesConnect中却不显示了，苹果也没有给出任何提示）&lt;/p&gt;
&lt;p&gt;我发现构建版本左边的“+”号可点，点开“+”号后发现：&lt;/p&gt;
&lt;img src=&quot;/2016/09/20/使用-xcode-8-构建版本-iTunes-Connect-获取不到应用程序的状态的解决办法/905614-c52750828b24f91e.png&quot; alt=&quot;905614-c52750828b24f91e.png&quot; title=&quot;&quot;&gt;
&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-c52750828b24f91e.png) --&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CGContextRef绘图－iOS球形波浪加载进度控件－HcdProcessView详解</title>
    <link href="http://www.jvaeyhcd.cc/2016/09/20/CGContextRef%E7%BB%98%E5%9B%BE%EF%BC%8DiOS%E7%90%83%E5%BD%A2%E6%B3%A2%E6%B5%AA%E5%8A%A0%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%8E%A7%E4%BB%B6%EF%BC%8DHcdProcessView%E8%AF%A6%E8%A7%A3/"/>
    <id>http://www.jvaeyhcd.cc/2016/09/20/CGContextRef绘图－iOS球形波浪加载进度控件－HcdProcessView详解/</id>
    <published>2016-09-20T05:18:12.000Z</published>
    <updated>2016-10-20T02:11:01.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/239a650bf73a&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《iOS球形波浪加载进度控件－HcdProcessView》&lt;/a&gt;这篇文章已经展示了我在项目中编写的一个球形进度加载控件HcdProcessView，这篇文章我要简单介绍一下我的制作过程。&lt;/p&gt;
&lt;img src=&quot;/2016/09/20/CGContextRef绘图－iOS球形波浪加载进度控件－HcdProcessView详解/905614-aad2c9e81a2873c7.gif&quot; alt=&quot;905614-aad2c9e81a2873c7.gif&quot; title=&quot;&quot;&gt;
&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-aad2c9e81a2873c7.gif) --&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;首先我放弃了使用通过改变图片的位置来实现上面的动画效果，虽然这样也可以实现如上的效果，但是从性能和资源消耗上来说都不是最好的选择。这里我采用了通过上下文（也就是CGContextRef）来绘制这样的效果，大家对它应该并不陌生，它既可以绘制直线、曲线、多边形圆形以及各种各样的几何图形。&lt;/p&gt;
&lt;h2 id=&quot;具体步骤&quot;&gt;&lt;a href=&quot;#具体步骤&quot; class=&quot;headerlink&quot; title=&quot;具体步骤&quot;&gt;&lt;/a&gt;具体步骤&lt;/h2&gt;&lt;p&gt;我们可以将上面的复杂图形拆分成如下几步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;绘制最外面的一圈刻度尺&lt;/li&gt;
&lt;li&gt;绘制表示进度的刻度尺&lt;/li&gt;
&lt;li&gt;绘制中间的球形加载界面&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;绘制刻度尺&quot;&gt;&lt;a href=&quot;#绘制刻度尺&quot; class=&quot;headerlink&quot; title=&quot;绘制刻度尺&quot;&gt;&lt;/a&gt;绘制刻度尺&lt;/h3&gt;&lt;p&gt;如果你先要在控件中绘制自己想要的图形，你需要重写UIView的&lt;code&gt;drawRect&lt;/code&gt;方法：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)drawRect:(&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)rect&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt; context = &lt;span class=&quot;built_in&quot;&gt;UIGraphicsGetCurrentContext&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; drawScale:context];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;drawRect&lt;/code&gt;方法中，我们先画出了刻度尺的图形，刻度尺是由一圈短线在一个圆内围成的一个圆。&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  画比例尺&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @param context 全局context&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)drawScale:(&lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt;)context &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSetLineWidth&lt;/span&gt;(context, _scaleDivisionsWidth);&lt;span class=&quot;comment&quot;&gt;//线的宽度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//先将参照点移到控件中心&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextTranslateCTM&lt;/span&gt;(context, fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//设置线的颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSetStrokeColorWithColor&lt;/span&gt;(context, [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; colorWithRed:&lt;span class=&quot;number&quot;&gt;0.655&lt;/span&gt; green:&lt;span class=&quot;number&quot;&gt;0.710&lt;/span&gt; blue:&lt;span class=&quot;number&quot;&gt;0.859&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;1.00&lt;/span&gt;]&lt;span class=&quot;variable&quot;&gt;.CGColor&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//线框颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制一些图形&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; _scaleCount; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextMoveToPoint&lt;/span&gt;(context, scaleRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; - _scaleDivisionsLength, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextAddLineToPoint&lt;/span&gt;(context, scaleRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//    CGContextScaleCTM(ctx, 0.5, 0.5);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//渲染&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextStrokePath&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextRotateCTM&lt;/span&gt;(context, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * M_PI / _scaleCount);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制刻度尺外的一个圈&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSetStrokeColorWithColor&lt;/span&gt;(context, [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; colorWithRed:&lt;span class=&quot;number&quot;&gt;0.694&lt;/span&gt; green:&lt;span class=&quot;number&quot;&gt;0.745&lt;/span&gt; blue:&lt;span class=&quot;number&quot;&gt;0.867&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;1.00&lt;/span&gt;]&lt;span class=&quot;variable&quot;&gt;.CGColor&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//线框颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSetLineWidth&lt;/span&gt;(context, &lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextAddArc&lt;/span&gt; (context, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, scaleRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; - _scaleDivisionsLength - &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, M_PI* &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; , &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextStrokePath&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//复原参照点&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextTranslateCTM&lt;/span&gt;(context, -fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, -fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这里需要用到两个东西一个是&lt;code&gt;CGContextAddArc&lt;/code&gt;，一个是&lt;code&gt;CGContextAddLineToPoint&lt;/code&gt;。创建圆弧的方法有两种一种是&lt;code&gt;CGContextAddArc&lt;/code&gt;，一种是&lt;code&gt;CGContextAddArcToPoint&lt;/code&gt;，这里画的圆比较简单所以用的是&lt;code&gt;CGContextAddArc&lt;/code&gt;,&lt;code&gt;CGContextAddArcToPoint&lt;/code&gt;在后面也会用到（我会在用到的地方详解）。&lt;/p&gt;
&lt;h4 id=&quot;CGContextAddArc&quot;&gt;&lt;a href=&quot;#CGContextAddArc&quot; class=&quot;headerlink&quot; title=&quot;CGContextAddArc&quot;&gt;&lt;/a&gt;CGContextAddArc&lt;/h4&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CGContextAddArc&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt; c,    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; x,             &lt;span class=&quot;comment&quot;&gt;//圆心的x坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; y,   &lt;span class=&quot;comment&quot;&gt;//圆心的x坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; radius,   &lt;span class=&quot;comment&quot;&gt;//圆的半径&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; startAngle,    &lt;span class=&quot;comment&quot;&gt;//开始弧度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; endAngle,   &lt;span class=&quot;comment&quot;&gt;//结束弧度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; clockwise          &lt;span class=&quot;comment&quot;&gt;//0表示顺时针，1表示逆时针&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; );&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` objc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;这里需要创建一个完整的圆，那么 开始弧度就是&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; 结束弧度是 &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;PI， 因为圆周长是 &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;*PI*radius。函数执行完后，current point就被重置为(x,y)。`&lt;span class=&quot;built_in&quot;&gt;CGContextTranslateCTM&lt;/span&gt;(context, fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);`已经将current point移动到了`(fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)`。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#### CGContextAddLineToPoint&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` objc&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;CGContextAddLineToPoint&lt;/span&gt; (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt; c,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; x,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; y&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; );&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; 创建一条直线，从current point到 (x,y)&lt;br&gt; 然后current point会变成(x,y)。&lt;br&gt;由于短线不连续，所以通过for循环来不断画短线，&lt;code&gt;_scaleCount&lt;/code&gt;代表的是刻度尺的个数，每次循环先将current point移动到&lt;code&gt;(scaleRect.size.width/2 - _scaleDivisionsLength, 0)&lt;/code&gt;点，&lt;code&gt;_scaleDivisionsLength&lt;/code&gt;代表短线的长度。绘制完短线后将前面绘制完成的图形旋转一个刻度尺的角度&lt;code&gt;CGContextRotateCTM(context, 2 * M_PI / _scaleCount);&lt;/code&gt;，将最终的绘制渲染后就得到了如下的刻度尺：&lt;/p&gt;
&lt;img src=&quot;/2016/09/20/CGContextRef绘图－iOS球形波浪加载进度控件－HcdProcessView详解/905614-282356612ba9f28c.png&quot; alt=&quot;905614-282356612ba9f28c.png&quot; title=&quot;&quot;&gt;
&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-282356612ba9f28c.png) --&gt;
&lt;h3 id=&quot;刻度尺上的进度绘制&quot;&gt;&lt;a href=&quot;#刻度尺上的进度绘制&quot; class=&quot;headerlink&quot; title=&quot;刻度尺上的进度绘制&quot;&gt;&lt;/a&gt;刻度尺上的进度绘制&lt;/h3&gt;&lt;p&gt;首先在&lt;code&gt;drawRect&lt;/code&gt;中添加&lt;code&gt;drawProcessScale&lt;/code&gt;方法。&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)drawRect:(&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)rect&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt; context = &lt;span class=&quot;built_in&quot;&gt;UIGraphicsGetCurrentContext&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; drawScale:context];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; drawProcessScale:context];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后在&lt;code&gt;drawProcessScale&lt;/code&gt;方法中实现左右两部分的刻度尺进度绘制。&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  比例尺进度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @param context 全局context&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)drawProcessScale:(&lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt;)context &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSetLineWidth&lt;/span&gt;(context, _scaleDivisionsWidth);&lt;span class=&quot;comment&quot;&gt;//线的宽度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextTranslateCTM&lt;/span&gt;(context, fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSetStrokeColorWithColor&lt;/span&gt;(context, [&lt;span class=&quot;built_in&quot;&gt;UIColor&lt;/span&gt; colorWithRed:&lt;span class=&quot;number&quot;&gt;0.969&lt;/span&gt; green:&lt;span class=&quot;number&quot;&gt;0.937&lt;/span&gt; blue:&lt;span class=&quot;number&quot;&gt;0.227&lt;/span&gt; alpha:&lt;span class=&quot;number&quot;&gt;1.00&lt;/span&gt;]&lt;span class=&quot;variable&quot;&gt;.CGColor&lt;/span&gt;);&lt;span class=&quot;comment&quot;&gt;//线框颜色&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; count = (_scaleCount / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) * currentPercent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; scaleAngle = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * M_PI / _scaleCount;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制左边刻度进度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextMoveToPoint&lt;/span&gt;(context, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, scaleRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; - _scaleDivisionsLength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextAddLineToPoint&lt;/span&gt;(context, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, scaleRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//    CGContextScaleCTM(ctx, 0.5, 0.5);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 渲染&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextStrokePath&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextRotateCTM&lt;/span&gt;(context, scaleAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制右边刻度进度&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextRotateCTM&lt;/span&gt;(context, -count * scaleAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; count; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextMoveToPoint&lt;/span&gt;(context, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, scaleRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; - _scaleDivisionsLength);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextAddLineToPoint&lt;/span&gt;(context, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, scaleRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt;/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//    CGContextScaleCTM(ctx, 0.5, 0.5);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// 渲染&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextStrokePath&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGContextRotateCTM&lt;/span&gt;(context, -scaleAngle);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextTranslateCTM&lt;/span&gt;(context, -fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, -fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;绘制完后效果如下：&lt;/p&gt;
&lt;img src=&quot;/2016/09/20/CGContextRef绘图－iOS球形波浪加载进度控件－HcdProcessView详解/905614-e85a60e792a0c99d.png&quot; alt=&quot;905614-e85a60e792a0c99d.png&quot; title=&quot;&quot;&gt;
&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-e85a60e792a0c99d.png) --&gt;
&lt;h3 id=&quot;水的波浪效果绘制&quot;&gt;&lt;a href=&quot;#水的波浪效果绘制&quot; class=&quot;headerlink&quot; title=&quot;水的波浪效果绘制&quot;&gt;&lt;/a&gt;水的波浪效果绘制&lt;/h3&gt;&lt;p&gt;终于到了最主要也是最难的效果绘制了，对于带有波浪不断滚动的效果是采用NSTimer来不断绘制每一帧图形实现的，现在简单介绍下每一帧的绘制方法。&lt;br&gt;首先在&lt;code&gt;drawRect&lt;/code&gt;中添加&lt;code&gt;drawWave&lt;/code&gt;方法，&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)drawRect:(&lt;span class=&quot;built_in&quot;&gt;CGRect&lt;/span&gt;)rect&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt; context = &lt;span class=&quot;built_in&quot;&gt;UIGraphicsGetCurrentContext&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; drawScale:context];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; drawProcessScale:context];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; drawWave:context];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;drawWave&lt;/code&gt;中实现如下方法：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  画波浪&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @param context 全局context&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;)drawWave:(&lt;span class=&quot;built_in&quot;&gt;CGContextRef&lt;/span&gt;)context &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGMutablePathRef&lt;/span&gt; frontPath = &lt;span class=&quot;built_in&quot;&gt;CGPathCreateMutable&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGMutablePathRef&lt;/span&gt; backPath = &lt;span class=&quot;built_in&quot;&gt;CGPathCreateMutable&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//画水&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSetLineWidth&lt;/span&gt;(context, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSetFillColorWithColor&lt;/span&gt;(context, [_frontWaterColor &lt;span class=&quot;built_in&quot;&gt;CGColor&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; offset = _scaleMargin + _waveMargin + _scaleDivisionsWidth;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; frontY = currentLinePointY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; backY = currentLinePointY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; radius = waveRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; frontStartPoint = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(offset, currentLinePointY + offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; frontEndPoint = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(offset, currentLinePointY + offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; backStartPoint = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(offset, currentLinePointY + offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; backEndPoint = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(offset, currentLinePointY + offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; x &amp;lt;= waveRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt;; x++)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//前浪绘制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frontY = a * sin( x / &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt; * M_PI + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; * b / M_PI ) * amplitude + currentLinePointY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; frontCircleY = frontY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentLinePointY &amp;lt; radius) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            frontCircleY = radius - sqrt(pow(radius, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) - pow((radius - x), &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (frontY &amp;lt; frontCircleY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                frontY = frontCircleY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentLinePointY &amp;gt; radius) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            frontCircleY = radius + sqrt(pow(radius, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) - pow((radius - x), &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (frontY &amp;gt; frontCircleY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                frontY = frontCircleY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fabs(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; - x) &amp;lt; &lt;span class=&quot;number&quot;&gt;0.001&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            frontStartPoint = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(x + offset, frontY + offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;CGPathMoveToPoint&lt;/span&gt;(frontPath, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, frontStartPoint&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;, frontStartPoint&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frontEndPoint = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(x + offset, frontY + offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGPathAddLineToPoint&lt;/span&gt;(frontPath, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, frontEndPoint&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;, frontEndPoint&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//后波浪绘制&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        backY = a * cos( x / &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt; * M_PI + &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; * b / M_PI ) * amplitude + currentLinePointY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; backCircleY = backY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentLinePointY &amp;lt; radius) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            backCircleY = radius - sqrt(pow(radius, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) - pow((radius - x), &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (backY &amp;lt; backCircleY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                backY = backCircleY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentLinePointY &amp;gt; radius) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            backCircleY = radius + sqrt(pow(radius, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) - pow((radius - x), &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (backY &amp;gt; backCircleY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                backY = backCircleY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (fabs(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; - x) &amp;lt; &lt;span class=&quot;number&quot;&gt;0.001&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            backStartPoint = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(x + offset, backY + offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;CGPathMoveToPoint&lt;/span&gt;(backPath, &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;, backStartPoint&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;, backStartPoint&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        backEndPoint = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(x + offset, backY + offset);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;CGPathAddLineToPoint&lt;/span&gt;(backPath, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, backEndPoint&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;, backEndPoint&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt; centerPoint = &lt;span class=&quot;built_in&quot;&gt;CGPointMake&lt;/span&gt;(fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, fullRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.height&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制前浪圆弧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; frontStart = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; calculateRotateDegree:centerPoint point:frontStartPoint];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; frontEnd = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; calculateRotateDegree:centerPoint point:frontEndPoint];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPathAddArc&lt;/span&gt;(frontPath, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, centerPoint&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;, centerPoint&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;, waveRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, frontEnd, frontStart, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextAddPath&lt;/span&gt;(context, frontPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextFillPath&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//推入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSaveGState&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextDrawPath&lt;/span&gt;(context, k&lt;span class=&quot;built_in&quot;&gt;CGPathStroke&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPathRelease&lt;/span&gt;(frontPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//绘制后浪圆弧&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; backStart = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; calculateRotateDegree:centerPoint point:backStartPoint];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; backEnd = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; calculateRotateDegree:centerPoint point:backEndPoint];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPathAddArc&lt;/span&gt;(backPath, &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;, centerPoint&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;, centerPoint&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;, waveRect&lt;span class=&quot;variable&quot;&gt;.size&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.width&lt;/span&gt; / &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, backEnd, backStart, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSetFillColorWithColor&lt;/span&gt;(context, [_backWaterColor &lt;span class=&quot;built_in&quot;&gt;CGColor&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextAddPath&lt;/span&gt;(context, backPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextFillPath&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//推入&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextSaveGState&lt;/span&gt;(context);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGContextDrawPath&lt;/span&gt;(context, k&lt;span class=&quot;built_in&quot;&gt;CGPathStroke&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGPathRelease&lt;/span&gt;(backPath);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的代码较长，可能也比较难以理解。下面我将会对上述代码简单解读一下，已前浪为例（前浪和后浪的实现方式基本一样，只是两个浪正余弦函数不一样而已）。两个浪都是由一条曲线和和一个圆弧构成的封闭区间，曲线的x区间为&lt;code&gt;[0, waveRect.size.width]&lt;/code&gt;，y值坐标为&lt;code&gt;frontY = a * sin( x / 180 * M_PI + 4 * b / M_PI ) * amplitude + currentLinePointY;&lt;/code&gt;(currentLinePointY为偏移量)，通过for循环自增x，计算出y的位置来不断&lt;code&gt;CGPathAddLineToPoint&lt;/code&gt;绘制出一条曲线，这就构成了波浪的曲线。然后我们需要根据波浪曲线的起始点和结束点以及圆心点(fullRect.size.width / 2, fullRect.size.height / 2)，来绘制一段封闭的圆弧。&lt;br&gt;这里就需要用到&lt;code&gt;CGPathAddArc&lt;/code&gt;方法；&lt;code&gt;CGPathAddArc&lt;/code&gt;方法和&lt;code&gt;CGContextAddArc&lt;/code&gt;类似。需要先计算出点波浪的起始点和结束点分别与圆心之间的夹角。知道两点计算夹角的方式如下：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  根据圆心点和圆上一个点计算角度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @param centerPoint 圆心点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @param point       圆上的一个点&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; *  @return 角度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt;)calculateRotateDegree:(&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)centerPoint point:(&lt;span class=&quot;built_in&quot;&gt;CGPoint&lt;/span&gt;)point &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; rotateDegree = asin(fabs(point&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt; - centerPoint&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;) / (sqrt(pow(point&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; - centerPoint&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) + pow(point&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt; - centerPoint&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;))));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//如果point纵坐标大于原点centerPoint纵坐标(在第一和第二象限)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (point&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt; &amp;gt; centerPoint&lt;span class=&quot;variable&quot;&gt;.y&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//第一象限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (point&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; &amp;gt;= centerPoint&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rotateDegree = rotateDegree;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//第二象限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rotateDegree = M_PI - rotateDegree;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//第三和第四象限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (point&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt; &amp;lt;= centerPoint&lt;span class=&quot;variable&quot;&gt;.x&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//第三象限，不做任何处理&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rotateDegree = M_PI + rotateDegree;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;//第四象限&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rotateDegree = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; * M_PI - rotateDegree;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; rotateDegree;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;波浪绘制的相关判断&quot;&gt;&lt;a href=&quot;#波浪绘制的相关判断&quot; class=&quot;headerlink&quot; title=&quot;波浪绘制的相关判断&quot;&gt;&lt;/a&gt;波浪绘制的相关判断&lt;/h4&gt;&lt;p&gt;由于曲线x区间是&lt;code&gt;[0, waveRect.size.width]&lt;/code&gt;，y值是根据公式&lt;code&gt;frontY = a * sin( x / 180 * M_PI + 4 * b / M_PI ) * amplitude + currentLinePointY;&lt;/code&gt;计算出来的，但是最终构成的波浪是一个球形的，所以对于计算出来的y值坐标，我们需要判断它是否在圆上，如果不在圆上，我们应该将它移到圆上。&lt;/p&gt;
&lt;p&gt;判断分为两种情况：&lt;/p&gt;
&lt;h5 id=&quot;currentLinePointY-lt-fullRect-size-height-2&quot;&gt;&lt;a href=&quot;#currentLinePointY-lt-fullRect-size-height-2&quot; class=&quot;headerlink&quot; title=&quot;currentLinePointY&amp;lt;fullRect.size.height / 2&quot;&gt;&lt;/a&gt;currentLinePointY&amp;lt;fullRect.size.height / 2&lt;/h5&gt;&lt;p&gt;当currentLinePointY&amp;lt;fullRect.size.height / 2时，已知点的坐标x，根据公式&lt;code&gt;y1 = a * sin( x / 180 * M_PI + 4 * b / M_PI ) * amplitude + currentLinePointY;&lt;/code&gt;算出来的点位置为(x, y1)，而在圆上点坐标为x的点的位置在(x,y2)，如果y1&amp;lt;y2 则最终应该放到波浪上的点为 &lt;code&gt;(x,y2)&lt;/code&gt;。&lt;/p&gt;
&lt;img src=&quot;/2016/09/20/CGContextRef绘图－iOS球形波浪加载进度控件－HcdProcessView详解/905614-6d980e01c0a78df8.png&quot; alt=&quot;905614-6d980e01c0a78df8.png&quot; title=&quot;&quot;&gt;
&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-6d980e01c0a78df8.png) --&gt;
&lt;h5 id=&quot;currentLinePointY-gt-fullRect-size-height-2&quot;&gt;&lt;a href=&quot;#currentLinePointY-gt-fullRect-size-height-2&quot; class=&quot;headerlink&quot; title=&quot;currentLinePointY&amp;gt;fullRect.size.height / 2&quot;&gt;&lt;/a&gt;currentLinePointY&amp;gt;fullRect.size.height / 2&lt;/h5&gt;&lt;p&gt;同理当currentLinePointY&amp;gt;fullRect.size.height / 2时，已知点的坐标x，根据公式&lt;code&gt;y1 = a * sin( x / 180 * M_PI + 4 * b / M_PI ) * amplitude + currentLinePointY;&lt;/code&gt;算出来的点位置为(x, y1)，而在圆上点坐标为x的点的位置在(x,y2)，如果y1&amp;gt;y2 则最终应该放到波浪上的点为 &lt;code&gt;(x,y2)&lt;/code&gt;。&lt;/p&gt;
&lt;img src=&quot;/2016/09/20/CGContextRef绘图－iOS球形波浪加载进度控件－HcdProcessView详解/905614-11de31e505d895a1.png&quot; alt=&quot;905614-11de31e505d895a1.png&quot; title=&quot;&quot;&gt;
&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-11de31e505d895a1.png) --&gt;
&lt;p&gt;其中判断的代码如下：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;frontY = a * sin( x / &lt;span class=&quot;number&quot;&gt;180&lt;/span&gt; * M_PI + &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; * b / M_PI ) * amplitude + currentLinePointY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;CGFloat&lt;/span&gt; frontCircleY = frontY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentLinePointY &amp;lt; radius) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    frontCircleY = radius - sqrt(pow(radius, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) - pow((radius - x), &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (frontY &amp;lt; frontCircleY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frontY = frontCircleY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (currentLinePointY &amp;gt; radius) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    frontCircleY = radius + sqrt(pow(radius, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) - pow((radius - x), &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (frontY &amp;gt; frontCircleY) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        frontY = frontCircleY;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中当&lt;code&gt;currentLinePointY &amp;lt; radius&lt;/code&gt;时，&lt;code&gt;y2=radius - sqrt(pow(radius, 2) - pow((radius - x), 2))&lt;/code&gt;;&lt;br&gt;当&lt;code&gt;currentLinePointY &amp;gt; radius&lt;/code&gt;时，&lt;code&gt;y2=radius + sqrt(pow(radius, 2) - pow((radius - x), 2))&lt;/code&gt;；&lt;/p&gt;
&lt;p&gt;这样就构成了一个如下的效果：&lt;br&gt;&lt;img src=&quot;/2016/09/20/CGContextRef绘图－iOS球形波浪加载进度控件－HcdProcessView详解/905614-cb9896a7ba570a22.png&quot; alt=&quot;905614-cb9896a7ba570a22.png&quot; title=&quot;&quot;&gt;&lt;br&gt;&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-cb9896a7ba570a22.png) --&gt;&lt;/p&gt;
&lt;p&gt;然后通过Timer不断的改变&lt;code&gt;a&lt;/code&gt;、&lt;code&gt;b&lt;/code&gt;的值就得到了我想要的动画效果。&lt;/p&gt;
&lt;p&gt;Github地址：&lt;a href=&quot;https://github.com/Jvaeyhcd/HcdProcessView&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/Jvaeyhcd/HcdProcessView&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.jianshu.com/p/239a650bf73a&quot;&gt;《iOS球形波浪加载进度控件－HcdProcessView》&lt;/a&gt;这篇文章已经展示了我在项目中编写的一个球形进度加载控件HcdProcessView，这篇文章我要简单介绍一下我的制作过程。&lt;/p&gt;
&lt;img src=&quot;/2016/09/20/CGContextRef绘图－iOS球形波浪加载进度控件－HcdProcessView详解/905614-aad2c9e81a2873c7.gif&quot; alt=&quot;905614-aad2c9e81a2873c7.gif&quot; title=&quot;&quot;&gt;
&lt;!-- ![](http://upload-images.jianshu.io/upload_images/905614-aad2c9e81a2873c7.gif) --&gt;
&lt;h2 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h2&gt;&lt;p&gt;首先我放弃了使用通过改变图片的位置来实现上面的动画效果，虽然这样也可以实现如上的效果，但是从性能和资源消耗上来说都不是最好的选择。这里我采用了通过上下文（也就是CGContextRef）来绘制这样的效果，大家对它应该并不陌生，它既可以绘制直线、曲线、多边形圆形以及各种各样的几何图形。&lt;/p&gt;
&lt;h2 id=&quot;具体步骤&quot;&gt;&lt;a href=&quot;#具体步骤&quot; class=&quot;headerlink&quot; title=&quot;具体步骤&quot;&gt;&lt;/a&gt;具体步骤&lt;/h2&gt;&lt;p&gt;我们可以将上面的复杂图形拆分成如下几步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;绘制最外面的一圈刻度尺&lt;/li&gt;
&lt;li&gt;绘制表示进度的刻度尺&lt;/li&gt;
&lt;li&gt;绘制中间的球形加载界面
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jenkins+gradle+coding Android持续集成</title>
    <link href="http://www.jvaeyhcd.cc/2016/08/08/Jenkins-gradle-coding-Android%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90/"/>
    <id>http://www.jvaeyhcd.cc/2016/08/08/Jenkins-gradle-coding-Android持续集成/</id>
    <published>2016-08-08T09:27:36.000Z</published>
    <updated>2016-09-06T09:18:04.000Z</updated>
    
    <content type="html">&lt;p&gt;等待更新,基本步骤与iOS配置相似。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;等待更新,基本步骤与iOS配置相似。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Android" scheme="http://www.jvaeyhcd.cc/tags/Android/"/>
    
      <category term="Jenkins" scheme="http://www.jvaeyhcd.cc/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins+iOS集成常见错误及解决办法</title>
    <link href="http://www.jvaeyhcd.cc/2016/08/04/Jenkins-iOS%E9%9B%86%E6%88%90%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.jvaeyhcd.cc/2016/08/04/Jenkins-iOS集成常见错误及解决办法/</id>
    <published>2016-08-04T01:36:07.000Z</published>
    <updated>2016-09-06T09:19:14.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;问题一-failed-to-import-bridging-header&quot;&gt;&lt;a href=&quot;#问题一-failed-to-import-bridging-header&quot; class=&quot;headerlink&quot; title=&quot;问题一: failed to import bridging header&quot;&gt;&lt;/a&gt;问题一: failed to import bridging header&lt;/h3&gt;&lt;h4 id=&quot;问题详情&quot;&gt;&lt;a href=&quot;#问题详情&quot; class=&quot;headerlink&quot; title=&quot;问题详情&quot;&gt;&lt;/a&gt;问题详情&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Header.h:&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;: error: &lt;span class=&quot;string&quot;&gt;&#39;HcdGuideView/HcdGuideView.h&#39;&lt;/span&gt; file not found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import &amp;lt;HcdGuideView/HcdGuideView.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;: error: failed to import bridging header &lt;span class=&quot;string&quot;&gt;&#39;/Users/polesapp/.jenkins/workspace/qiangtoubao/qiangtoubao/OCFile/qiangtoubao-Bridging-Header.h&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;** BUILD FAILED **&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;集成项目是Swift项目，使用了Cocoapods导入一个自己写的一个Objective-C第三方库，所以需要用到桥接文件。在Xcode中运行没有任何问题，但是用Jenkins集成的时候却报错了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h4&gt;&lt;p&gt;上述所报的错误已经写得十分明显了，错误的原因出在&lt;code&gt;#import &amp;lt;HcdGuideView/HcdGuideView.h&amp;gt;&lt;/code&gt;这一句，桥接文件中找不到&lt;code&gt;HcdGuideView.h&lt;/code&gt;这个文件。&lt;/p&gt;
&lt;p&gt;所以最后的解决办法如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择target-BuildSettings-Search Paths下的User Header Search Paths，点击空白处，并且点击“＋”号添加一项，然后输入&lt;code&gt;$(PODS_ROOT)&lt;/code&gt;,选择：recursive（会在相应的目录递归搜索文件）,如下图所示：&lt;/li&gt;
&lt;/ol&gt;
&lt;img src=&quot;/2016/08/04/Jenkins-iOS集成常见错误及解决办法/error_example_1.png&quot; alt=&quot;failed to import bridging header&quot; title=&quot;failed to import bridging header&quot;&gt;
&lt;p&gt;这样就需要将&lt;code&gt;#import &amp;lt;HcdGuideView/HcdGuideView.h&amp;gt;&lt;/code&gt;替换成&lt;code&gt;#import &amp;quot;HcdGuideView.h&amp;quot;&lt;/code&gt;就可以了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;问题一-failed-to-import-bridging-header&quot;&gt;&lt;a href=&quot;#问题一-failed-to-import-bridging-header&quot; class=&quot;headerlink&quot; title=&quot;问题一: failed to import bridging header&quot;&gt;&lt;/a&gt;问题一: failed to import bridging header&lt;/h3&gt;&lt;h4 id=&quot;问题详情&quot;&gt;&lt;a href=&quot;#问题详情&quot; class=&quot;headerlink&quot; title=&quot;问题详情&quot;&gt;&lt;/a&gt;问题详情&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Header.h:&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;: error: &lt;span class=&quot;string&quot;&gt;&#39;HcdGuideView/HcdGuideView.h&#39;&lt;/span&gt; file not found&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import &amp;lt;HcdGuideView/HcdGuideView.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;unknown&amp;gt;:&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;: error: failed to import bridging header &lt;span class=&quot;string&quot;&gt;&#39;/Users/polesapp/.jenkins/workspace/qiangtoubao/qiangtoubao/OCFile/qiangtoubao-Bridging-Header.h&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;** BUILD FAILED **&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;集成项目是Swift项目，使用了Cocoapods导入一个自己写的一个Objective-C第三方库，所以需要用到桥接文件。在Xcode中运行没有任何问题，但是用Jenkins集成的时候却报错了。&lt;br&gt;
    
    </summary>
    
    
      <category term="Jenkins" scheme="http://www.jvaeyhcd.cc/tags/Jenkins/"/>
    
      <category term="iOS" scheme="http://www.jvaeyhcd.cc/tags/iOS/"/>
    
      <category term="常见错误" scheme="http://www.jvaeyhcd.cc/tags/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>Swift学习笔记之高级运算符</title>
    <link href="http://www.jvaeyhcd.cc/2016/08/02/Swift%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E9%AB%98%E7%BA%A7%E8%BF%90%E7%AE%97%E7%AC%A6/"/>
    <id>http://www.jvaeyhcd.cc/2016/08/02/Swift学习笔记之高级运算符/</id>
    <published>2016-08-02T07:01:30.000Z</published>
    <updated>2016-08-02T07:04:10.000Z</updated>
    
    <content type="html">&lt;p&gt;除了基本运算符外，Swift还提供了许多可以对数值进行复杂运算的高级运算符。这些高级运算符包含了在C和objc中已经被大家熟知的位运算符和位移运算符。&lt;/p&gt;
&lt;p&gt;与C语言和objc的算数运算符不同，Swift中的算数运算符默认是不会溢出的。所有溢出行为都会被捕获并报告位错误。如果想让系统允许溢出行为，可以选择使用Swift中另一套默认支持溢出的运算符，比如溢出运算符（&lt;code&gt;&amp;amp;+&lt;/code&gt;）,所有的溢出运算符都是以&lt;code&gt;&amp;amp;&lt;/code&gt;开头的。&lt;/p&gt;
&lt;h2 id=&quot;位运算符&quot;&gt;&lt;a href=&quot;#位运算符&quot; class=&quot;headerlink&quot; title=&quot;位运算符&quot;&gt;&lt;/a&gt;位运算符&lt;/h2&gt;&lt;p&gt;位运算符可以操作数据结构中每个独立的比特位，它通常被用在底层开发中，比如图形编程和创建设备驱动。位运算符在处理外部资源和原始数据也十分有用，比如自定义通信协议传输的数据进行编码和解码。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;按位取反运算符&quot;&gt;&lt;a href=&quot;#按位取反运算符&quot; class=&quot;headerlink&quot; title=&quot;按位取反运算符&quot;&gt;&lt;/a&gt;按位取反运算符&lt;/h3&gt;&lt;p&gt;按位取反运算符（&lt;code&gt;~&lt;/code&gt;）可以对一个数值的全部比特位进行取反：&lt;/p&gt;

&lt;p&gt;按位取反运算符是一个前缀运算符，需要直接放在运算的数之前，并且它们之间不能加空格。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; initialBits: &lt;span class=&quot;type&quot;&gt;UInt8&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0b00001111&lt;/span&gt;   &lt;span class=&quot;comment&quot;&gt;//十进制等于15&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; invertedBits = ~initialBits       &lt;span class=&quot;comment&quot;&gt;//等于 0b11110000，十进制为240&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;按位与运算符&quot;&gt;&lt;a href=&quot;#按位与运算符&quot; class=&quot;headerlink&quot; title=&quot;按位与运算符&quot;&gt;&lt;/a&gt;按位与运算符&lt;/h3&gt;&lt;p&gt;按位与运算符（&lt;code&gt;&amp;amp;&lt;/code&gt;）可以对两个数的比特位进行合并。它返回一个新的数，只有当两个数对应位都为&lt;code&gt;1&lt;/code&gt;的时候，新数的对应位才为&lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在下面的示例当中，&lt;code&gt;firstBits&lt;/code&gt; 和 &lt;code&gt;lastBits&lt;/code&gt; 中间 4 个位的值都为 1。按位与运算符对它们进行了运算，得到二进制数值 &lt;code&gt;00111100&lt;/code&gt;，等价于无符号十进制数的 60：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; firstBits: &lt;span class=&quot;type&quot;&gt;UInt8&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0b11111100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; lastBits: &lt;span class=&quot;type&quot;&gt;UInt8&lt;/span&gt;  = &lt;span class=&quot;number&quot;&gt;0b00111111&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; middleBits = firstBits &amp;amp; lastBits &lt;span class=&quot;comment&quot;&gt;// 等于 00111100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;按位或运算符&quot;&gt;&lt;a href=&quot;#按位或运算符&quot; class=&quot;headerlink&quot; title=&quot;按位或运算符&quot;&gt;&lt;/a&gt;按位或运算符&lt;/h3&gt;&lt;p&gt;按位或运算符(&lt;code&gt;|&lt;/code&gt;)可以对两个数的比特位进行比较，它返回一个新的数，如果两个对应的比特位中有任意一个为&lt;code&gt;1&lt;/code&gt;时，新数对应位就为&lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;在下面的示例中，&lt;code&gt;someBits&lt;/code&gt; 和 &lt;code&gt;moreBits&lt;/code&gt; 不同的位会被设置为 &lt;code&gt;1&lt;/code&gt;。接位或运算符对它们进行了运算，得到二进制数值 &lt;code&gt;11111110&lt;/code&gt;，等价于无符号十进制数的 &lt;code&gt;254&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; someBits: &lt;span class=&quot;type&quot;&gt;UInt8&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0b10110010&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; moreBits: &lt;span class=&quot;type&quot;&gt;UInt8&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0b01011110&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; combinedbits = someBits | moreBits &lt;span class=&quot;comment&quot;&gt;// 等于 11111110&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;按位异或运算符&quot;&gt;&lt;a href=&quot;#按位异或运算符&quot; class=&quot;headerlink&quot; title=&quot;按位异或运算符&quot;&gt;&lt;/a&gt;按位异或运算符&lt;/h3&gt;&lt;p&gt;按位异或运算符(&lt;code&gt;^&lt;/code&gt;)可以对两个数的比特位进行比较，它返回一个新的数，当两个数对应比特位不相同时，新数的对应位就为&lt;code&gt;1&lt;/code&gt;：&lt;/p&gt;

&lt;p&gt;在下面的示例当中，&lt;code&gt;firstBits&lt;/code&gt; 和 &lt;code&gt;otherBits&lt;/code&gt; 都有一个自己的位为 &lt;code&gt;1&lt;/code&gt; 而对方的对应位为 &lt;code&gt;0&lt;/code&gt; 的位。 按位异或运算符将新数的这两个位都设置为 &lt;code&gt;1&lt;/code&gt;，同时将其它位都设置为 &lt;code&gt;0&lt;/code&gt;：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; firstBits: &lt;span class=&quot;type&quot;&gt;UInt8&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0b00010100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; otherBits: &lt;span class=&quot;type&quot;&gt;UInt8&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;0b00000101&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; outputBits = firstBits ^ otherBits &lt;span class=&quot;comment&quot;&gt;// 等于 00010001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;按位左移、右移运算符&quot;&gt;&lt;a href=&quot;#按位左移、右移运算符&quot; class=&quot;headerlink&quot; title=&quot;按位左移、右移运算符&quot;&gt;&lt;/a&gt;按位左移、右移运算符&lt;/h3&gt;&lt;p&gt;按位左移运算符（&lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;）和按位右移运算符（&lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;）可以对一个数的所有位进行指定位数的左移和右移。对一个数的左移和右移一位相当于对一个数乘以2或者除以2。&lt;/p&gt;
&lt;h4 id=&quot;无符号整数的位移运算&quot;&gt;&lt;a href=&quot;#无符号整数的位移运算&quot; class=&quot;headerlink&quot; title=&quot;无符号整数的位移运算&quot;&gt;&lt;/a&gt;无符号整数的位移运算&lt;/h4&gt;&lt;p&gt;对无符号的整数进行位移的规则如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;已经存在的位按指定的位数进行左移和右移&lt;/li&gt;
&lt;li&gt;任何因移动超出整型存储范围的位都会被丢弃&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;0&lt;/code&gt;来填充位移后产生的空白&lt;br&gt;这种方法称为逻辑位移。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下这张图展示了 &lt;code&gt;11111111 &amp;lt;&amp;lt; 1&lt;/code&gt;（即把 &lt;code&gt;11111111&lt;/code&gt; 向左移动 &lt;code&gt;1&lt;/code&gt; 位），和 &lt;code&gt;11111111 &amp;gt;&amp;gt; 1&lt;/code&gt;（即把 &lt;code&gt;11111111&lt;/code&gt; 向右移动 &lt;code&gt;1&lt;/code&gt; 位）的结果。蓝色的部分是被移位的，灰色的部分是被抛弃的，橙色的部分则是被填充进来的：&lt;/p&gt;

&lt;p&gt;下面的代码演示了 Swift 中的移位运算：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; shiftBits: &lt;span class=&quot;type&quot;&gt;UInt8&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// 即二进制的 00000100&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shiftBits &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;// 00001000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shiftBits &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;// 00010000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shiftBits &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;// 10000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shiftBits &amp;lt;&amp;lt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;// 00000000&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;shiftBits &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;           &lt;span class=&quot;comment&quot;&gt;// 00000001&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;还可以使用位移运算对其它数据类型进行编码和解码。&lt;/p&gt;
&lt;h4 id=&quot;有符号整数的位移运算&quot;&gt;&lt;a href=&quot;#有符号整数的位移运算&quot; class=&quot;headerlink&quot; title=&quot;有符号整数的位移运算&quot;&gt;&lt;/a&gt;有符号整数的位移运算&lt;/h4&gt;&lt;p&gt;对比无符号整数，有符号整数的位移运算相对就要复杂得多，这种复杂性源于有符号整数的二进制表现新式。&lt;br&gt;有符号整数使用第一个比特位（通常称为符号位）来表示这个数的正负。符号为&lt;code&gt;0&lt;/code&gt;代表正数，为&lt;code&gt;1&lt;/code&gt;代表负数。其余的比特位（通常称为数值位）存储了实际的值。&lt;/p&gt;

&lt;p&gt;符号位为 &lt;code&gt;0&lt;/code&gt;，说明这是一个正数，另外 7 位则代表了十进制数值 4 的二进制表示。&lt;/p&gt;
&lt;p&gt;负数的存储方式略有不同。它存储的值的绝对值等于 &lt;code&gt;2&lt;/code&gt; 的 &lt;code&gt;n&lt;/code&gt; 次方减去它的实际值（也就是数值位表示的值），这里的 &lt;code&gt;n&lt;/code&gt; 为数值位的比特位数。一个 8 比特位的数有 7 个比特位是数值位，所以是 &lt;code&gt;2&lt;/code&gt; 的 &lt;code&gt;7&lt;/code&gt; 次方，即 &lt;code&gt;128&lt;/code&gt;。&lt;br&gt;这是值为 &lt;code&gt;-4&lt;/code&gt; 的 &lt;code&gt;Int8&lt;/code&gt; 型整数的二进制位表现形式：&lt;/p&gt;

&lt;p&gt;这次的符号位为 &lt;code&gt;1&lt;/code&gt;，说明这是一个负数，另外 7 个位则代表了数值 &lt;code&gt;124&lt;/code&gt;（即 &lt;code&gt;128 - 4&lt;/code&gt;）的二进制表示。负数的表示通常被称为二进制补码表示，用这种方法表示负数乍看起来有点奇怪，但它有一下几个优点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;如果想对&lt;code&gt;-1&lt;/code&gt;和&lt;code&gt;-4&lt;/code&gt;进行加法运算，我们只需要将这两个数的全部8个比特位相加，并且将计算结果中超出8位的值丢弃,其次，使用二进制补码可以使负数的按位左移和右移运算得到跟正数同样的效果，即每向左移一位就将自身的数值乘以 2，每向右一位就将自身的数值除以 2。要达到此目的，对有符号整数的右移有一个额外的规则：&lt;/p&gt;

&lt;/li&gt;
&lt;li&gt;&lt;p&gt;当对整数进行按位右移运算时，遵循与无符号整数相同的规则，但是对于移位产生的空白位使用符号位进行填充，而不是用 &lt;code&gt;0&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;这个行为可以确保有符号整数的符号位不会因为右移运算而改变，这通常被称为&lt;b&gt;算术移位&lt;/b&gt;。&lt;br&gt;由于正数和负数的特殊存储方式，在对它们进行右移的时候，会使它们越来越接近 &lt;code&gt;0&lt;/code&gt;。在移位的过程中保持符号位不变，意味着负整数在接近 &lt;code&gt;0&lt;/code&gt; 的过程中会一直保持为负。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;溢出运算符&quot;&gt;&lt;a href=&quot;#溢出运算符&quot; class=&quot;headerlink&quot; title=&quot;溢出运算符&quot;&gt;&lt;/a&gt;溢出运算符&lt;/h2&gt;&lt;p&gt;在默认情况下，当向一个整数赋予超过它容量的值时，Swift默认会报错，而不是产生一个无效的数。这个行为为我们在运算过大或者过小的数的时候提供了额外的安全性。&lt;br&gt;例如&lt;code&gt;Int16&lt;/code&gt;型整数能容纳的有符号整数范围是&lt;code&gt;-32768&lt;/code&gt;到&lt;code&gt;32767&lt;/code&gt;,当一个为Int16型变量的值超出了这个范围时，系统会报错：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; potentialOverflow = &lt;span class=&quot;type&quot;&gt;Int16&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;// potentialOverflow 的值是 32767，这是 Int16 能容纳的最大整数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;potentialOverflow += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;            &lt;span class=&quot;comment&quot;&gt;// 这里会报错&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;溢出运算符可以让数值溢出的时候采取截断处理，而非报错。可以使用Swift提供的三个溢出运算符来让系统支持整数溢出运算。这些运算符都是以&lt;code&gt;&amp;amp;&lt;/code&gt;开头的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;溢出加法 &lt;code&gt;&amp;amp;+&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;溢出减法 &lt;code&gt;&amp;amp;-&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;溢出乘法 &lt;code&gt;&amp;amp;*&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;无符号数值上溢&quot;&gt;&lt;a href=&quot;#无符号数值上溢&quot; class=&quot;headerlink&quot; title=&quot;无符号数值上溢&quot;&gt;&lt;/a&gt;无符号数值上溢&lt;/h3&gt;&lt;p&gt;数值有可能出现上溢或者下溢。&lt;br&gt;这个示例演示了但我们对一个无符号整数使用溢出加法(&lt;code&gt;&amp;amp;+&lt;/code&gt;)进行上溢运算时会发生什么：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; unsignedOverflow = &lt;span class=&quot;type&quot;&gt;UInt8&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;max&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// unsignedOverflow 等于 UInt8 所能容纳的最大整数 255&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unsignedOverflow = unsignedOverflow &amp;amp;+ &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 此时 unsignedOverflow 等于 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;unsignedOverflow&lt;/code&gt; 被初始化为 &lt;code&gt;UInt8&lt;/code&gt; 所能容纳的最大整数（&lt;code&gt;255&lt;/code&gt;，以二进制表示即 &lt;code&gt;11111111&lt;/code&gt;）。然后使用了溢出加法运算符（&lt;code&gt;&amp;amp;+&lt;/code&gt;）对其进行加 1 运算。这使得它的二进制表示正好超出 UInt8 所能容纳的位数，也就导致了数值的溢出，如下图所示。数值溢出后，留在 &lt;code&gt;UInt8&lt;/code&gt; 边界内的值是 &lt;code&gt;00000000&lt;/code&gt;，也就是十进制数值的 0。&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;无符号数值下溢&quot;&gt;&lt;a href=&quot;#无符号数值下溢&quot; class=&quot;headerlink&quot; title=&quot;无符号数值下溢&quot;&gt;&lt;/a&gt;无符号数值下溢&lt;/h3&gt;&lt;p&gt;同样的，当我们对一个无符号整数使用溢出减法(&lt;code&gt;&amp;amp;-&lt;/code&gt;)进行下溢运算时也会产生类似的现象：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; unsignedOverflow = &lt;span class=&quot;type&quot;&gt;UInt8&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// unsignedOverflow 等于 UInt8 所能容纳的最小整数 0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unsignedOverflow = unsignedOverflow &amp;amp;- &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 此时 unsignedOverflow 等于 255&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UInt8&lt;/code&gt; 型整数能容纳的最小值是 &lt;code&gt;0&lt;/code&gt;，以二进制表示即 &lt;code&gt;00000000&lt;/code&gt;。当使用溢出减法运算符对其进行减 1 运算时，数值会产生下溢并被截断为 &lt;code&gt;11111111&lt;/code&gt;， 也就是十进制数值的 &lt;code&gt;255&lt;/code&gt;。&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;有符号数值溢出&quot;&gt;&lt;a href=&quot;#有符号数值溢出&quot; class=&quot;headerlink&quot; title=&quot;有符号数值溢出&quot;&gt;&lt;/a&gt;有符号数值溢出&lt;/h3&gt;&lt;p&gt;溢出也会发生在有符号整型数值上。在对有符号整型数值进行溢出加法或溢出减法运算时，符号位也需要参与计算。比如下面的例子：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; signedOverflow = &lt;span class=&quot;type&quot;&gt;Int8&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;min&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// signedOverflow 等于 Int8 所能容纳的最小整数 -128&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;signedOverflow = signedOverflow &amp;amp;- &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 此时 signedOverflow 等于 127&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Int8&lt;/code&gt;型整数能容纳的最小值是&lt;code&gt;－128&lt;/code&gt;，以二进制表示即&lt;code&gt;10000000&lt;/code&gt;。当使用溢出减法运算符对其进行减&lt;code&gt;1&lt;/code&gt;运算时，符号位被翻转，得到二进制数值&lt;code&gt;01111111&lt;/code&gt;，也就是十进制的&lt;code&gt;127&lt;/code&gt;，这个值也是&lt;code&gt;Int8&lt;/code&gt;型整数所能容纳的最大值。&lt;/p&gt;

&lt;p&gt;对于无符号与有符号整型数值来说，当出现上溢时，它们会从数值所能容纳的最大数变成最小的数。同样地，当发生下溢时，它们会从所能容纳的最小数变成最大的数。&lt;/p&gt;
&lt;h2 id=&quot;运算符函数&quot;&gt;&lt;a href=&quot;#运算符函数&quot; class=&quot;headerlink&quot; title=&quot;运算符函数&quot;&gt;&lt;/a&gt;运算符函数&lt;/h2&gt;&lt;p&gt;类和结构体可以为现有的运算符提供自定义的实现，这通常被称为运算符重载。&lt;/p&gt;
&lt;p&gt;下面一个例子展示了如何为自定义的结构体实现加法运算符(&lt;code&gt;+&lt;/code&gt;)。算数运算符是一个双目运算符，因为它可以对两个值进行运算，同时它还是中缀运算符，因为它出现在两个值中间。&lt;/p&gt;
&lt;p&gt;例子中定义了一个名为 &lt;code&gt;Vector2D&lt;/code&gt; 的结构体用来表示二维坐标向量 &lt;code&gt;(x, y)&lt;/code&gt;，紧接着定义了一个可以对两个 &lt;code&gt;Vector2D&lt;/code&gt; 结构体进行相加的运算符函数：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Vector2D&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;, y = &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; + &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;: Vector2D, &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;: Vector2D)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Vector2D&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Vector2D&lt;/span&gt;(x: &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;.x + &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;.x, y: &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;.y + &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;.y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该运算符函数被定义为一个全局函数，并且函数的名字与它要进行重载的 &lt;code&gt;+&lt;/code&gt; 名字一致。因为算术加法运算符是双目运算符，所以这个运算符函数接收两个类型为 &lt;code&gt;Vector2D&lt;/code&gt; 的参数，同时有一个 &lt;code&gt;Vector2D&lt;/code&gt; 类型的返回值。&lt;/p&gt;
&lt;p&gt;在这个实现中，输入参数分别被命名为 &lt;code&gt;left&lt;/code&gt; 和 &lt;code&gt;right&lt;/code&gt;，代表在 + 运算符左边和右边的两个 &lt;code&gt;Vector2D&lt;/code&gt; 实例。函数返回了一个新的 &lt;code&gt;Vector2D&lt;/code&gt; 实例，这个实例的 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 分别等于作为参数的两个实例的 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 的值之和。&lt;/p&gt;
&lt;p&gt;这个函数被定义成全局的，而不是 &lt;code&gt;Vector2D&lt;/code&gt; 结构体的成员方法，所以任意两个 &lt;code&gt;Vector2D&lt;/code&gt; 实例都可以使用这个中缀运算符：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; vector = &lt;span class=&quot;type&quot;&gt;Vector2D&lt;/span&gt;(x: &lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;, y: &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; anotherVector = &lt;span class=&quot;type&quot;&gt;Vector2D&lt;/span&gt;(x: &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;, y: &lt;span class=&quot;number&quot;&gt;4.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; combinedVector = vector + anotherVector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// combinedVector 是一个新的 Vector2D 实例，值为 (5.0, 5.0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;前缀和后缀运算符&quot;&gt;&lt;a href=&quot;#前缀和后缀运算符&quot; class=&quot;headerlink&quot; title=&quot;前缀和后缀运算符&quot;&gt;&lt;/a&gt;前缀和后缀运算符&lt;/h3&gt;&lt;p&gt;上个例子演示了一个双目中缀运算符的自定义实现。类与结构体也能提供标准单目运算符的实现。单目运算符只运算一个值。当运算符出现在值之前时，它就是前缀的（例如 &lt;code&gt;-a&lt;/code&gt;），而当它出现在值之后时，它就是后缀的（例如 &lt;code&gt;b!&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;要实现前缀或者后缀运算符，需要在声明运算符函数的时候在&lt;code&gt;func&lt;/code&gt;关键字之前指定&lt;code&gt;prefix&lt;/code&gt;或者&lt;code&gt;postfix&lt;/code&gt;修饰符。&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;prefix&lt;/span&gt; &lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; - &lt;span class=&quot;params&quot;&gt;(vector: Vector2D)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Vector2D&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Vector2D&lt;/span&gt;(x: -vector.x, y: -vector.y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这段代码为 &lt;code&gt;Vector2D&lt;/code&gt; 类型实现了单目负号运算符。由于该运算符是前缀运算符，所以这个函数需要加上 &lt;code&gt;prefix&lt;/code&gt; 修饰符。&lt;/p&gt;
&lt;p&gt;对于简单数值，单目负号运算符可以对它们的正负性进行改变。对于 &lt;code&gt;Vector2D&lt;/code&gt; 来说，该运算将其 &lt;code&gt;x&lt;/code&gt; 和 &lt;code&gt;y&lt;/code&gt; 属性的正负性都进行了改变：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; positive = &lt;span class=&quot;type&quot;&gt;Vector2D&lt;/span&gt;(x: &lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;, y: &lt;span class=&quot;number&quot;&gt;4.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; negative = -positive&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// negative 是一个值为 (-3.0, -4.0) 的 Vector2D 实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; alsoPositive = -negative&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// alsoPositive 是一个值为 (3.0, 4.0) 的 Vector2D 实例&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;复合赋值运算符&quot;&gt;&lt;a href=&quot;#复合赋值运算符&quot; class=&quot;headerlink&quot; title=&quot;复合赋值运算符&quot;&gt;&lt;/a&gt;复合赋值运算符&lt;/h3&gt;&lt;p&gt;复合赋值运算符将赋值运算符（&lt;code&gt;=&lt;/code&gt;）与其它运算符进行结合。例如，将加法与赋值结合成加法赋值运算符（&lt;code&gt;+=&lt;/code&gt;）。在实现的时候，需要把运算符的左参数设置成 &lt;code&gt;inout&lt;/code&gt; 类型，因为这个参数的值会在运算符函数内直接被修改。&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; += &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;inout&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;: Vector2D, &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;: Vector2D)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; = &lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; + &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为加法运算在之前已经定义过了，所以在这里无需重新定义。在这里可以直接利用现有的加法运算符函数，用它来对左值和右值进行相加，并再次赋值给左值：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; original = &lt;span class=&quot;type&quot;&gt;Vector2D&lt;/span&gt;(x: &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt;, y: &lt;span class=&quot;number&quot;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; vectorToAdd = &lt;span class=&quot;type&quot;&gt;Vector2D&lt;/span&gt;(x: &lt;span class=&quot;number&quot;&gt;3.0&lt;/span&gt;, y: &lt;span class=&quot;number&quot;&gt;4.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;original += vectorToAdd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// original 的值现在为 (4.0, 6.0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：不能对默认的赋值运算符（&lt;code&gt;=&lt;/code&gt;）进行重载。只有组合赋值运算符可以被重载。同样地，也无法对三目条件运算符 （&lt;code&gt;a ? b : c&lt;/code&gt;） 进行重载。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;等价运算符&quot;&gt;&lt;a href=&quot;#等价运算符&quot; class=&quot;headerlink&quot; title=&quot;等价运算符&quot;&gt;&lt;/a&gt;等价运算符&lt;/h3&gt;&lt;p&gt;自定义的类和结构体没有对等价运算符进行默认实现，等价运算符通常被称为“相等”运算符（&lt;code&gt;==&lt;/code&gt;）与“不等”运算符（&lt;code&gt;!=&lt;/code&gt;）。对于自定义类型，Swift 无法判断其是否“相等”，因为“相等”的含义取决于这些自定义类型在你的代码中所扮演的角色。&lt;/p&gt;
&lt;p&gt;为了使用等价运算符能对自定义的类型进行判等运算，需要为其提供自定义实现，实现的方法与其它中缀运算符一样：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; == &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;: Vector2D, &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;: Vector2D)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;.x == &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;.x) &amp;amp;&amp;amp; (&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;.y == &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;.y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; != &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt;: Vector2D, &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;: Vector2D)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; !(&lt;span class=&quot;keyword&quot;&gt;left&lt;/span&gt; == &lt;span class=&quot;keyword&quot;&gt;right&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;自定义运算符&quot;&gt;&lt;a href=&quot;#自定义运算符&quot; class=&quot;headerlink&quot; title=&quot;自定义运算符&quot;&gt;&lt;/a&gt;自定义运算符&lt;/h2&gt;&lt;p&gt;除了实现标准运算符，在 Swift 中还可以声明和实现自定义运算符。&lt;br&gt;新的运算符要使用 &lt;code&gt;operator&lt;/code&gt; 关键字在全局作用域内进行定义，同时还要指定 &lt;code&gt;prefix&lt;/code&gt;、&lt;code&gt;infix&lt;/code&gt; 或者 &lt;code&gt;postfix&lt;/code&gt; 修饰符：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;prefix&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;operator&lt;/span&gt; +++ &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面的代码定义了一个新的名为 &lt;code&gt;+++&lt;/code&gt; 的前缀运算符。对于这个运算符，在 Swift 中并没有意义，因此我们针对 &lt;code&gt;Vector2D&lt;/code&gt; 的实例来定义它的意义。对这个示例来讲，&lt;code&gt;+++&lt;/code&gt; 被实现为“前缀双自增”运算符。它使用了前面定义的复合加法运算符来让矩阵对自身进行相加，从而让 &lt;code&gt;Vector2D&lt;/code&gt; 实例的 &lt;code&gt;x&lt;/code&gt; 属性和 &lt;code&gt;y&lt;/code&gt; 属性的值翻倍：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;prefix&lt;/span&gt; &lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; +++ &lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;inout&lt;/span&gt; vector: Vector2D)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Vector2D&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    vector += vector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; vector&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;除了基本运算符外，Swift还提供了许多可以对数值进行复杂运算的高级运算符。这些高级运算符包含了在C和objc中已经被大家熟知的位运算符和位移运算符。&lt;/p&gt;
&lt;p&gt;与C语言和objc的算数运算符不同，Swift中的算数运算符默认是不会溢出的。所有溢出行为都会被捕获并报告位错误。如果想让系统允许溢出行为，可以选择使用Swift中另一套默认支持溢出的运算符，比如溢出运算符（&lt;code&gt;&amp;amp;+&lt;/code&gt;）,所有的溢出运算符都是以&lt;code&gt;&amp;amp;&lt;/code&gt;开头的。&lt;/p&gt;
&lt;h2 id=&quot;位运算符&quot;&gt;&lt;a href=&quot;#位运算符&quot; class=&quot;headerlink&quot; title=&quot;位运算符&quot;&gt;&lt;/a&gt;位运算符&lt;/h2&gt;&lt;p&gt;位运算符可以操作数据结构中每个独立的比特位，它通常被用在底层开发中，比如图形编程和创建设备驱动。位运算符在处理外部资源和原始数据也十分有用，比如自定义通信协议传输的数据进行编码和解码。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac环境中Jenkins停止和启动命令</title>
    <link href="http://www.jvaeyhcd.cc/2016/08/02/Mac%E7%8E%AF%E5%A2%83%E4%B8%ADJenkins%E5%81%9C%E6%AD%A2%E5%92%8C%E5%90%AF%E5%8A%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.jvaeyhcd.cc/2016/08/02/Mac环境中Jenkins停止和启动命令/</id>
    <published>2016-08-02T04:02:06.000Z</published>
    <updated>2016-08-02T06:20:10.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;停止&quot;&gt;&lt;a href=&quot;#停止&quot; class=&quot;headerlink&quot; title=&quot;停止&quot;&gt;&lt;/a&gt;停止&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;启动&quot;&gt;&lt;a href=&quot;#启动&quot; class=&quot;headerlink&quot; title=&quot;启动&quot;&gt;&lt;/a&gt;启动&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo launchctl load /Library/LaunchDaemons/org.jenkins-ci.plist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;停止&quot;&gt;&lt;a href=&quot;#停止&quot; class=&quot;headerlink&quot; title=&quot;停止&quot;&gt;&lt;/a&gt;停止&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo launchctl unload /Library/LaunchDaemons/org.jenkins-ci.plist&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CocoaPods的制作过程</title>
    <link href="http://www.jvaeyhcd.cc/2016/07/08/CocoaPods%E7%9A%84%E5%88%B6%E4%BD%9C%E8%BF%87%E7%A8%8B/"/>
    <id>http://www.jvaeyhcd.cc/2016/07/08/CocoaPods的制作过程/</id>
    <published>2016-07-08T09:14:00.000Z</published>
    <updated>2016-07-08T10:25:22.000Z</updated>
    
    <content type="html">&lt;p&gt;最新项目不算太忙，于是抽出了一点时间将以前项目中的使用的AVPlayer视频播放器做了一个简单的封装。现在我想把它做成CocoaPods方便以后的使用。下面我要详细的记录下我的制作过程。&lt;/p&gt;
&lt;h3 id=&quot;创建仓库&quot;&gt;&lt;a href=&quot;#创建仓库&quot; class=&quot;headerlink&quot; title=&quot;创建仓库&quot;&gt;&lt;/a&gt;创建仓库&lt;/h3&gt;&lt;h4 id=&quot;本地仓库&quot;&gt;&lt;a href=&quot;#本地仓库&quot; class=&quot;headerlink&quot; title=&quot;本地仓库&quot;&gt;&lt;/a&gt;本地仓库&lt;/h4&gt;&lt;p&gt;使用Xcode创建一个叫做HcdCachePlayer的工程，然后将相关的封装全部编写完毕。&lt;/p&gt;
&lt;h4 id=&quot;远程仓库&quot;&gt;&lt;a href=&quot;#远程仓库&quot; class=&quot;headerlink&quot; title=&quot;远程仓库&quot;&gt;&lt;/a&gt;远程仓库&lt;/h4&gt;&lt;p&gt;在github上同样创建一个&lt;code&gt;HcdCachePlayer&lt;/code&gt;,最好保持同名,需要注意的是,在创建仓库的时候需要添加&lt;code&gt;license&lt;/code&gt;类型,这里我使用&lt;code&gt;license&lt;/code&gt;类型为&lt;code&gt;MIT&lt;/code&gt;。这个很简单就不再啰嗦了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;关联本地仓库到远程仓库&quot;&gt;&lt;a href=&quot;#关联本地仓库到远程仓库&quot; class=&quot;headerlink&quot; title=&quot;关联本地仓库到远程仓库&quot;&gt;&lt;/a&gt;关联本地仓库到远程仓库&lt;/h4&gt;&lt;p&gt;进入本地仓库目录&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; ~/github/H&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;CachePlayer/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;关联远程仓库&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git init&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git remote add origin https://github.com/Jvaeyhcd/H&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;CachePlayer.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push -u origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;添加Pods依赖库所需文件&quot;&gt;&lt;a href=&quot;#添加Pods依赖库所需文件&quot; class=&quot;headerlink&quot; title=&quot;添加Pods依赖库所需文件&quot;&gt;&lt;/a&gt;添加Pods依赖库所需文件&lt;/h3&gt;&lt;p&gt;依赖库所需的文件格式为&lt;code&gt;{project}.podspec&lt;/code&gt;格式，每个Pods依赖库必须有这个描述文件。&lt;/p&gt;
&lt;h4 id=&quot;添加-project-podspec文件&quot;&gt;&lt;a href=&quot;#添加-project-podspec文件&quot; class=&quot;headerlink&quot; title=&quot;添加{project}.podspec文件&quot;&gt;&lt;/a&gt;添加{project}.podspec文件&lt;/h4&gt;&lt;p&gt;使用pod命令创建&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod spec create H&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;CachePlayer&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就生成了HcdCachePlayer.podspec文件，打开该文件添加内容，并删除不需要的后就像这样：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Pod::Spec.new &lt;span class=&quot;keyword&quot;&gt;do&lt;/span&gt; |s|&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.name         = &lt;span class=&quot;string&quot;&gt;&quot;HcdCachePlayer&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.version      = &lt;span class=&quot;string&quot;&gt;&quot;0.0.1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.summary      = &lt;span class=&quot;string&quot;&gt;&quot;一个带缓存的视频播放器HcdCachePlayer&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.description  = &amp;lt;&amp;lt;-DESC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  一个使用AVPlayer封装的带缓存的视频播放器,支持全屏，可以左右滑动手势快进快退，上下滑动手势调节屏幕亮度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   DESC&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.homepage     = &lt;span class=&quot;string&quot;&gt;&quot;https://github.com/Jvaeyhcd/HcdCachePlayer&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.license      = &amp;#123; :&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;MIT&quot;&lt;/span&gt;, :file =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;LICENSE&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.author             = &amp;#123; &lt;span class=&quot;string&quot;&gt;&quot;Jvaeyhcd&quot;&lt;/span&gt; =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;chedahuang@icloud.com&quot;&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.platform     = :ios, &lt;span class=&quot;string&quot;&gt;&#39;7.0&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.source       = &amp;#123; :git =&amp;gt; &lt;span class=&quot;string&quot;&gt;&quot;https://github.com/Jvaeyhcd/HcdCachePlayer.git&quot;&lt;/span&gt;, :tag =&amp;gt; s.version.to_s &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.source_files  = &lt;span class=&quot;string&quot;&gt;&quot;hcdCachePlayer/**/*.&amp;#123;h,m&amp;#125;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.resource  = &lt;span class=&quot;string&quot;&gt;&quot;hcdCachePlayer/hcdCachePlayer.bundle&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.frameworks = &lt;span class=&quot;string&quot;&gt;&quot;UIKit&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;AVFoundation&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;MobileCoreServices&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Foundation&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.requires_arc = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.dependency &lt;span class=&quot;string&quot;&gt;&quot;Masonry&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;end&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;s.source_files指向循环滚动的核心代码放在项目的s.hcdCachePlayer/&lt;em&gt;*/&lt;/em&gt;.{h,m},所以这里最好将库代码都放在同一个目录下。&lt;/p&gt;
&lt;h3 id=&quot;提交到github&quot;&gt;&lt;a href=&quot;#提交到github&quot; class=&quot;headerlink&quot; title=&quot;提交到github&quot;&gt;&lt;/a&gt;提交到github&lt;/h3&gt;&lt;p&gt;此时编码已经完成了，并且配置好了相关文件我们可以先将代码提交到github上了。&lt;/p&gt;
&lt;h4 id=&quot;Pods验证&quot;&gt;&lt;a href=&quot;#Pods验证&quot; class=&quot;headerlink&quot; title=&quot;Pods验证&quot;&gt;&lt;/a&gt;Pods验证&lt;/h4&gt;&lt;p&gt;提交之前我们需要先验证一下HcdCachePlayer.podspec文件。在HcdCachePlayer.podspec所在目录运行如下命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod lib lint&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果出现ERROR和WARING都会失败，如果失败会明确指明哪个地方出错了，按提示修改就可以了。&lt;/p&gt;
&lt;h4 id=&quot;提交代码到Github&quot;&gt;&lt;a href=&quot;#提交代码到Github&quot; class=&quot;headerlink&quot; title=&quot;提交代码到Github&quot;&gt;&lt;/a&gt;提交代码到Github&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git add .&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;version 0.0.1&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打上标签&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git tag &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;git push --tags&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;不出问题的话,就可以在github上看到最新提交的内容了。&lt;/p&gt;
&lt;h3 id=&quot;上传-project-podspec到CocoaPods官方仓库中&quot;&gt;&lt;a href=&quot;#上传-project-podspec到CocoaPods官方仓库中&quot; class=&quot;headerlink&quot; title=&quot;上传{project}.podspec到CocoaPods官方仓库中&quot;&gt;&lt;/a&gt;上传{project}.podspec到CocoaPods官方仓库中&lt;/h3&gt;&lt;p&gt;要想一个HcdCachePlayer真正可以用,就得把生成的HcdCachePlayer.podspec文件提交到Cocoapods官方的&lt;a href=&quot;https://github.com/CocoaPods/Specs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Specs&lt;/a&gt;仓库中,才能被search到并使用。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;之前的提交方式是先将&lt;a href=&quot;https://github.com/CocoaPods/Specs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Specs&lt;/a&gt;仓库fork一份，添加修改，然后push，等待审核，这种显示是不安全的，所以现在不能使用了。也就是这篇文章：&lt;a href=&quot;http://blog.csdn.net/wzzvictory/article/details/20067595&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《CocoaPods详解之—-制作篇》&lt;/a&gt;中说提到的方法，注意这个方法已经不能使用了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CocoaPods为我们提供了另外一个更加安全的方法&lt;a href=&quot;http://blog.cocoapods.org/CocoaPods-Trunk/#transition&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Trunk&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&quot;Trunk的Register&quot;&gt;&lt;a href=&quot;#Trunk的Register&quot; class=&quot;headerlink&quot; title=&quot;Trunk的Register&quot;&gt;&lt;/a&gt;Trunk的Register&lt;/h4&gt;&lt;p&gt;如果第一次使用的话那么就需要注册了，需要CocoaPods0.33版本以上才支持&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod trunk register *youremail* *yourname* --description=&lt;span class=&quot;string&quot;&gt;&#39;iMac&#39;&lt;/span&gt; --verbose&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;以上命令是注册所需的,替换你的邮箱,用户名,以及描述内容, –verbose可以输入详细的debug。&lt;/p&gt;
&lt;p&gt;注册完成后可以使用一下命令查看注册信息&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod trunk me&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;提交-project-podspec&quot;&gt;&lt;a href=&quot;#提交-project-podspec&quot; class=&quot;headerlink&quot; title=&quot;提交{project}.podspec&quot;&gt;&lt;/a&gt;提交{project}.podspec&lt;/h4&gt;&lt;p&gt;在{project}.podspec文件的路径下执行&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod trunk push H&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;CachePlayer.podspec&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这条命令做了如下三件事:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;验证本地的podspec文件,也可以使用 pod lib lint验证&lt;/li&gt;
&lt;li&gt;上传podspec文件到trunk服务&lt;/li&gt;
&lt;li&gt;将{project}.podspec文件转为{poject}.podspec.json文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果没有报错那么就成功了。&lt;/p&gt;
&lt;h4 id=&quot;使用&quot;&gt;&lt;a href=&quot;#使用&quot; class=&quot;headerlink&quot; title=&quot;使用&quot;&gt;&lt;/a&gt;使用&lt;/h4&gt;&lt;p&gt;终端执行 pod search HcdCachePlayer就可以找到了,如果没有找到 pod setup再试一下。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;-&amp;gt; H&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;CachePlayer (&lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   一个带缓存的视频播放器H&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;CachePlayer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   pod &lt;span class=&quot;string&quot;&gt;&#39;HcdCachePlayer&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;~&amp;gt; 0.0.1&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   - Homepage: https://github.com/Jvaeyhcd/H&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;CachePlayer&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   - Source:   https://github.com/Jvaeyhcd/H&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;CachePlayer.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   - Versions: &lt;span class=&quot;number&quot;&gt;0.0&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; [master repo]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(END)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这里遇到一个问题创建成功了，但是另外一台电脑却收不到。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;协同工作&quot;&gt;&lt;a href=&quot;#协同工作&quot; class=&quot;headerlink&quot; title=&quot;协同工作&quot;&gt;&lt;/a&gt;协同工作&lt;/h4&gt;&lt;p&gt;当需要其他人来共同维护你的代码,需要提供权限。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;pod trunk add-owner H&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt;CachePlayer *email*&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;参考文章：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://foggry.com/blog/2016/03/23/cocoapods-xiang-jie-zhi-geng-xin-pian/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CocoaPods 详解之—-更新篇&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最新项目不算太忙，于是抽出了一点时间将以前项目中的使用的AVPlayer视频播放器做了一个简单的封装。现在我想把它做成CocoaPods方便以后的使用。下面我要详细的记录下我的制作过程。&lt;/p&gt;
&lt;h3 id=&quot;创建仓库&quot;&gt;&lt;a href=&quot;#创建仓库&quot; class=&quot;headerlink&quot; title=&quot;创建仓库&quot;&gt;&lt;/a&gt;创建仓库&lt;/h3&gt;&lt;h4 id=&quot;本地仓库&quot;&gt;&lt;a href=&quot;#本地仓库&quot; class=&quot;headerlink&quot; title=&quot;本地仓库&quot;&gt;&lt;/a&gt;本地仓库&lt;/h4&gt;&lt;p&gt;使用Xcode创建一个叫做HcdCachePlayer的工程，然后将相关的封装全部编写完毕。&lt;/p&gt;
&lt;h4 id=&quot;远程仓库&quot;&gt;&lt;a href=&quot;#远程仓库&quot; class=&quot;headerlink&quot; title=&quot;远程仓库&quot;&gt;&lt;/a&gt;远程仓库&lt;/h4&gt;&lt;p&gt;在github上同样创建一个&lt;code&gt;HcdCachePlayer&lt;/code&gt;,最好保持同名,需要注意的是,在创建仓库的时候需要添加&lt;code&gt;license&lt;/code&gt;类型,这里我使用&lt;code&gt;license&lt;/code&gt;类型为&lt;code&gt;MIT&lt;/code&gt;。这个很简单就不再啰嗦了。&lt;br&gt;
    
    </summary>
    
    
      <category term="CocoaPods" scheme="http://www.jvaeyhcd.cc/tags/CocoaPods/"/>
    
  </entry>
  
  <entry>
    <title>全屏设置setStatusBarOrientation 未生效的解决办法</title>
    <link href="http://www.jvaeyhcd.cc/2016/07/06/%E5%85%A8%E5%B1%8F%E8%AE%BE%E7%BD%AEsetStatusBarOrientation-%E6%9C%AA%E7%94%9F%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.jvaeyhcd.cc/2016/07/06/全屏设置setStatusBarOrientation-未生效的解决办法/</id>
    <published>2016-07-06T07:21:10.000Z</published>
    <updated>2016-07-06T10:19:57.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在一个项目中用到了视频播放组件，并且项目要求视频能够边下边播，并且需要实现视频的缓存，如果下次播放就不要再通过网络去访问播放，而是直接读取本地的缓存文件播放。在实现让视频全屏播放的时候遇到了比较难搞的问题，当视频全屏的时候，视频成功旋转过来了，，但是状态栏的方向始终不能旋转过来。&lt;br&gt;手动调用了如下代码，但是并没有什么卵用：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication]setStatusBarOrientation:&lt;span class=&quot;built_in&quot;&gt;UIInterfaceOrientationLandscapeRight&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经过一番搜索，网上给了各种方法，归纳起来大致是这个样子的：&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;首先在Info.plist中设置View controller-based status bar appearance为NO&lt;/li&gt;
&lt;li&gt;需要旋转的视频ViewController的方法&lt;code&gt;- (BOOL)shouldAutorotate&lt;/code&gt;要返回NO，不然手动旋转不会生效。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Tips:本以为到了这里问题就应该已经解决了，but问题并没有得到解决,覆写&lt;code&gt;- (BOOL)shouldAutorotate&lt;/code&gt;方法并为生效，或许此时你一定会说:”WTF?”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后的原因是:&lt;span style=&quot;textColor:&#39;#00ff00&#39;&quot;&gt;由于UIViewController放置在Navigation中，而由于Navigation不人性化的设计，navigation的- (BOOL)shouldAutorotate是不会根据显示ViewController的- (BOOL)shouldAutorotate设置的值来改变的。&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;最后最终的解决办法是将下面这段代码放在AppDelegate.m的最后面，这个时候NavigationController就会根据你显示的ViewController改变返回值了，然后再去ViewController覆写方法，返回NO，方法生效了！&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@implementation&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;UINavigationController&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;Rotation&lt;/span&gt;)  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)shouldAutorotate  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.viewControllers&lt;/span&gt; lastObject] shouldAutorotate];  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt;)supportedInterfaceOrientations  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.viewControllers&lt;/span&gt; lastObject] supportedInterfaceOrientations];  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;UIInterfaceOrientation&lt;/span&gt;)preferredInterfaceOrientationForPresentation &amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; [[&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;variable&quot;&gt;.viewControllers&lt;/span&gt; lastObject] preferredInterfaceOrientationForPresentation];  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在一个项目中用到了视频播放组件，并且项目要求视频能够边下边播，并且需要实现视频的缓存，如果下次播放就不要再通过网络去访问播放，而是直接读取本地的缓存文件播放。在实现让视频全屏播放的时候遇到了比较难搞的问题，当视频全屏的时候，视频成功旋转过来了，，但是状态栏的方向始终不能旋转过来。&lt;br&gt;手动调用了如下代码，但是并没有什么卵用：&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[[&lt;span class=&quot;built_in&quot;&gt;UIApplication&lt;/span&gt; sharedApplication]setStatusBarOrientation:&lt;span class=&quot;built_in&quot;&gt;UIInterfaceOrientationLandscapeRight&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;经过一番搜索，网上给了各种方法，归纳起来大致是这个样子的：&lt;/p&gt;
    
    </summary>
    
      <category term="常见问题" scheme="http://www.jvaeyhcd.cc/categories/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"/>
    
    
      <category term="StatusBar" scheme="http://www.jvaeyhcd.cc/tags/StatusBar/"/>
    
  </entry>
  
  <entry>
    <title>NSURLErrorDomain Code=-1002 “Unsupported URL”</title>
    <link href="http://www.jvaeyhcd.cc/2016/06/30/NSURLErrorDomain-Code-1002-%E2%80%9Cunsupported-URL%E2%80%9D/"/>
    <id>http://www.jvaeyhcd.cc/2016/06/30/NSURLErrorDomain-Code-1002-“unsupported-URL”/</id>
    <published>2016-06-30T07:13:42.000Z</published>
    <updated>2016-06-30T07:41:25.000Z</updated>
    
    <content type="html">&lt;p&gt;在进行iOS网络请求的时候，报Error Domain=NSURLErrorDomain Code=-1002 “unsupported URL”的错误，请求的类型是GET，但是使用PSOTMAN和在浏览器中打开此接口可以返回正确的数据。通过google搜索最后找到了解决办法，今天记录下这个奇怪的问题。&lt;/p&gt;
&lt;h2 id=&quot;问题概述&quot;&gt;&lt;a href=&quot;#问题概述&quot; class=&quot;headerlink&quot; title=&quot;问题概述&quot;&gt;&lt;/a&gt;问题概述&lt;/h2&gt;&lt;p&gt;我在一个接手的二次开发的项目中，发现了这样一个问题，有的接口可以用正常访问，但是却有一个接口就不能正常访问。我对比了这个不能访问的接口和其它能够正常访问的接口的区别发现，当我传入的参数有值为中文字符串时就会报如下的错误，所以显然问题就出在传入参数为中文字符串的问题上。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;问题分析&quot;&gt;&lt;a href=&quot;#问题分析&quot; class=&quot;headerlink&quot; title=&quot;问题分析&quot;&gt;&lt;/a&gt;问题分析&lt;/h2&gt;&lt;p&gt;通过对比发现（分析问题常见的方法），当这个接口传入了中文后将会报错，如果不传中文接口并不会报错，所以我基本上就可以锁定问题就出在中文字符的问题上。&lt;/p&gt;
&lt;h2 id=&quot;解决方法&quot;&gt;&lt;a href=&quot;#解决方法&quot; class=&quot;headerlink&quot; title=&quot;解决方法&quot;&gt;&lt;/a&gt;解决方法&lt;/h2&gt;&lt;p&gt;找到了问题出现的原因后其它的一切都变得简单了，因为传入中文字符会出现服务器不能解析然后报错的情况，所以我们应该将传入的中文字符用UTF8编码一下后再通过接口传递给服务器。（问题轻松解决～～～就是这么简单）&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//text为传入参数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text = [text stringByAddingPercentEscapesUsingEncoding:&lt;span class=&quot;built_in&quot;&gt;NSUTF8StringEncoding&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在进行iOS网络请求的时候，报Error Domain=NSURLErrorDomain Code=-1002 “unsupported URL”的错误，请求的类型是GET，但是使用PSOTMAN和在浏览器中打开此接口可以返回正确的数据。通过google搜索最后找到了解决办法，今天记录下这个奇怪的问题。&lt;/p&gt;
&lt;h2 id=&quot;问题概述&quot;&gt;&lt;a href=&quot;#问题概述&quot; class=&quot;headerlink&quot; title=&quot;问题概述&quot;&gt;&lt;/a&gt;问题概述&lt;/h2&gt;&lt;p&gt;我在一个接手的二次开发的项目中，发现了这样一个问题，有的接口可以用正常访问，但是却有一个接口就不能正常访问。我对比了这个不能访问的接口和其它能够正常访问的接口的区别发现，当我传入的参数有值为中文字符串时就会报如下的错误，所以显然问题就出在传入参数为中文字符串的问题上。&lt;/p&gt;
    
    </summary>
    
      <category term="常见错误" scheme="http://www.jvaeyhcd.cc/categories/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/"/>
    
    
      <category term="常见错误" scheme="http://www.jvaeyhcd.cc/tags/%E5%B8%B8%E8%A7%81%E9%94%99%E8%AF%AF/"/>
    
  </entry>
  
  <entry>
    <title>CocosPods使用过程中遇到的一些问题，以及解决办法</title>
    <link href="http://www.jvaeyhcd.cc/2016/06/16/CocosPods%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%EF%BC%8C%E4%BB%A5%E5%8F%8A%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://www.jvaeyhcd.cc/2016/06/16/CocosPods使用过程中遇到的一些问题，以及解决办法/</id>
    <published>2016-06-16T07:21:30.000Z</published>
    <updated>2016-08-05T08:13:26.000Z</updated>
    
    <content type="html">&lt;p&gt;经常会遇到很多莫名其妙的问题，这次遇到了，下次可能依然还会遇到，常常因为自己没有做什么记录，所以下次遇到了还是不知道如何解决。所以在这里我想记录一些我在使用CocosPods的过程中遇到过的一些问题。&lt;/p&gt;
&lt;h2 id=&quot;library-not-found-for-lPods&quot;&gt;&lt;a href=&quot;#library-not-found-for-lPods&quot; class=&quot;headerlink&quot; title=&quot;library not found for -lPods&quot;&gt;&lt;/a&gt;library not found for -lPods&lt;/h2&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;这是一个很奇葩的问题，我在使用Cocoapods管理项目，编译Debug运行没有任何问题，但是就是在Archive的时候，报错如下&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ld: library not found &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt;Pods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h3&gt;&lt;p&gt;于是在网上搜索了一番找打了一篇帖子：&lt;a href=&quot;http://www.cocoachina.com/bbs/read.php?tid-253614.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.cocoachina.com/bbs/read.php?tid-253614.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;各种各样的回复都有，我最终的解决步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;更新cocospods到最新版本，注：gem的最新的镜像地址：&lt;a href=&quot;https://gems.ruby-china.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://gems.ruby-china.org/&lt;/a&gt;， 淘宝的好像不能访问了。（也有说将版本降到0.37的，但是我是不想退步的，要用就用最新的）。&lt;/li&gt;
&lt;li&gt;在Build Setting &amp;gt; Other Linker Flag 中删除所有，只留下$(inherited)轻松解决。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;其实还有一个原因就是我的工程目录名称和Finder工程目录的文件夹不一致造成的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;经常会遇到很多莫名其妙的问题，这次遇到了，下次可能依然还会遇到，常常因为自己没有做什么记录，所以下次遇到了还是不知道如何解决。所以在这里我想记录一些我在使用CocosPods的过程中遇到过的一些问题。&lt;/p&gt;
&lt;h2 id=&quot;library-not-found-for-lPods&quot;&gt;&lt;a href=&quot;#library-not-found-for-lPods&quot; class=&quot;headerlink&quot; title=&quot;library not found for -lPods&quot;&gt;&lt;/a&gt;library not found for -lPods&lt;/h2&gt;&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;这是一个很奇葩的问题，我在使用Cocoapods管理项目，编译Debug运行没有任何问题，但是就是在Archive的时候，报错如下&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ld: library not found &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;operator&quot;&gt;-l&lt;/span&gt;Pods&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Objective-C身份证验证实现</title>
    <link href="http://www.jvaeyhcd.cc/2016/06/15/Objective-C%E8%BA%AB%E4%BB%BD%E8%AF%81%E9%AA%8C%E8%AF%81%E5%AE%9E%E7%8E%B0/"/>
    <id>http://www.jvaeyhcd.cc/2016/06/15/Objective-C身份证验证实现/</id>
    <published>2016-06-15T04:04:58.000Z</published>
    <updated>2016-06-15T04:59:33.000Z</updated>
    
    <content type="html">&lt;p&gt;最近在一个二次开发的项目中看到了一段身份证验证的OC代码，虽然我一直讨厌二次开发。因为这这个二次开发的项目太老，代码太乱，毫无层次感。可是令人欣慰的是，我在里面发现了一段有用的代码。&lt;/p&gt;
&lt;p&gt;直接上代码&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt;)isValidIdCardNum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *value = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;copy&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value = [value stringByReplacingOccurrencesOfString:&lt;span class=&quot;string&quot;&gt;@&quot;X&quot;&lt;/span&gt; withString:&lt;span class=&quot;string&quot;&gt;@&quot;x&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    value = [value stringByTrimmingCharactersInSet:[&lt;span class=&quot;built_in&quot;&gt;NSCharacterSet&lt;/span&gt; whitespaceAndNewlineCharacterSet]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; length = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!value) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        length = (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;)value&lt;span class=&quot;variable&quot;&gt;.length&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (length != &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt; &amp;amp;&amp;amp; length !=&lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 省份代码&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *areasArray =@[&lt;span class=&quot;string&quot;&gt;@&quot;11&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;12&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;13&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;14&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;15&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;21&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;22&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;23&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;31&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;32&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;33&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;34&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;35&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;36&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;37&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;41&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;42&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;43&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;44&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;45&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;46&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;50&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;51&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;52&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;53&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;54&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;61&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;62&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;63&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;64&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;65&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;71&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;81&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;82&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;@&quot;91&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *valueStart2 = [value substringToIndex:&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;BOOL&lt;/span&gt; areaFlag = &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *areaCode &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; areasArray) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([areaCode isEqualToString:valueStart2]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            areaFlag = &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!areaFlag) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSRegularExpression&lt;/span&gt; *regularExpression;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSUInteger&lt;/span&gt; numberofMatch;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; year = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;switch&lt;/span&gt; (length) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            year = [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; +&lt;span class=&quot;number&quot;&gt;1900&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (year % &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || (year % &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; year % &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                regularExpression = [[&lt;span class=&quot;built_in&quot;&gt;NSRegularExpression&lt;/span&gt; alloc] initWithPattern:&lt;span class=&quot;string&quot;&gt;@&quot;^[1-9][0-9]&amp;#123;5&amp;#125;[0-9]&amp;#123;2&amp;#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]&amp;#123;3&amp;#125;$&quot;&lt;/span&gt;                   options:&lt;span class=&quot;built_in&quot;&gt;NSRegularExpressionCaseInsensitive&lt;/span&gt; error:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;// 测试出生日期的合法性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                regularExpression = [[&lt;span class=&quot;built_in&quot;&gt;NSRegularExpression&lt;/span&gt; alloc] initWithPattern:&lt;span class=&quot;string&quot;&gt;@&quot;^[1-9][0-9]&amp;#123;5&amp;#125;[0-9]&amp;#123;2&amp;#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]&amp;#123;3&amp;#125;$&quot;&lt;/span&gt;           options:&lt;span class=&quot;built_in&quot;&gt;NSRegularExpressionCaseInsensitive&lt;/span&gt; error:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;// 测试出生日期的合法性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            numberofMatch = [regularExpression numberOfMatchesInString:value options:&lt;span class=&quot;built_in&quot;&gt;NSMatchingReportProgress&lt;/span&gt; range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, value&lt;span class=&quot;variable&quot;&gt;.length&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(numberofMatch &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            year = [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (year % &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; || (year % &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;amp;&amp;amp; year % &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; ==&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                regularExpression = [[&lt;span class=&quot;built_in&quot;&gt;NSRegularExpression&lt;/span&gt; alloc] initWithPattern:&lt;span class=&quot;string&quot;&gt;@&quot;^[1-9][0-9]&amp;#123;5&amp;#125;19|20[0-9]&amp;#123;2&amp;#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|[1-2][0-9]))[0-9]&amp;#123;3&amp;#125;[0-9Xx]$&quot;&lt;/span&gt;options:&lt;span class=&quot;built_in&quot;&gt;NSRegularExpressionCaseInsensitive&lt;/span&gt; error:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;// 测试出生日期的合法性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                regularExpression = [[&lt;span class=&quot;built_in&quot;&gt;NSRegularExpression&lt;/span&gt; alloc] initWithPattern:&lt;span class=&quot;string&quot;&gt;@&quot;^[1-9][0-9]&amp;#123;5&amp;#125;19|20[0-9]&amp;#123;2&amp;#125;((01|03|05|07|08|10|12)(0[1-9]|[1-2][0-9]|3[0-1])|(04|06|09|11)(0[1-9]|[1-2][0-9]|30)|02(0[1-9]|1[0-9]|2[0-8]))[0-9]&amp;#123;3&amp;#125;[0-9Xx]$&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                                         options:&lt;span class=&quot;built_in&quot;&gt;NSRegularExpressionCaseInsensitive&lt;/span&gt; error:&lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;];&lt;span class=&quot;comment&quot;&gt;// 测试出生日期的合法性&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            numberofMatch = [regularExpression numberOfMatchesInString:value options:&lt;span class=&quot;built_in&quot;&gt;NSMatchingReportProgress&lt;/span&gt; range:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, value&lt;span class=&quot;variable&quot;&gt;.length&lt;/span&gt;)];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(numberofMatch &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; S = ([value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; + [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt;) *&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; + ([value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; + [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt;) *&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt; + ([value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; + [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;12&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt;) *&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt; + ([value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; + [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;13&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt;) *&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt; + ([value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; + [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;14&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt;) *&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt; + ([value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; + [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;15&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt;) *&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; + ([value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; + [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt;) *&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; *&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; + [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; *&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; + [value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]&lt;span class=&quot;variable&quot;&gt;.intValue&lt;/span&gt; *&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; Y = S % &lt;span class=&quot;number&quot;&gt;11&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *M = &lt;span class=&quot;string&quot;&gt;@&quot;F&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *JYM = &lt;span class=&quot;string&quot;&gt;@&quot;10X98765432&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                M = [JYM substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(Y,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)]; &lt;span class=&quot;comment&quot;&gt;// 判断校验位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; ([M isEqualToString:[[value substringWithRange:&lt;span class=&quot;built_in&quot;&gt;NSMakeRange&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;17&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)] uppercaseString]]) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;YES&lt;/span&gt;;&lt;span class=&quot;comment&quot;&gt;// 检测ID的校验位&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;default&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的代码验证十分全面。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近在一个二次开发的项目中看到了一段身份证验证的OC代码，虽然我一直讨厌二次开发。因为这这个二次开发的项目太老，代码太乱，毫无层次感。可是令人欣慰的是，我在里面发现了一段有用的代码。&lt;/p&gt;
&lt;p&gt;直接上代码&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>RXSwift基础</title>
    <link href="http://www.jvaeyhcd.cc/2016/06/08/RXSwift%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.jvaeyhcd.cc/2016/06/08/RXSwift基础/</id>
    <published>2016-06-08T01:32:44.000Z</published>
    <updated>2016-06-08T02:04:56.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;一个观察者(Observer)订阅一个可观察序列(Observable)。观察者对Observable发射的数据或数据序列作出响应&lt;/p&gt;
&lt;h2 id=&quot;为什么发用RxSwift&quot;&gt;&lt;a href=&quot;#为什么发用RxSwift&quot; class=&quot;headerlink&quot; title=&quot;为什么发用RxSwift&quot;&gt;&lt;/a&gt;为什么发用RxSwift&lt;/h2&gt;&lt;p&gt;一个程序通常包含着大量的各种事件的产生以及对应的处理逻辑，各种响应方法使代码更加的混乱和复杂，而RxSwift是一个统一的处理各种响应事件的方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Observable的创建和订阅&lt;/li&gt;
&lt;li&gt;Subjects的使用&lt;/li&gt;
&lt;li&gt;Combination：Observable的混合操作&lt;/li&gt;
&lt;li&gt;Transforming：Observable的转换操作&lt;/li&gt;
&lt;li&gt;Filtering：Observable消息元素的过滤操作&lt;/li&gt;
&lt;li&gt;对Observable元素做运算操作&lt;/li&gt;
&lt;li&gt;Connectable操作&lt;/li&gt;
&lt;li&gt;错误处理&lt;/li&gt;
&lt;li&gt;debug&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;消息的订阅方式&quot;&gt;&lt;a href=&quot;#消息的订阅方式&quot; class=&quot;headerlink&quot; title=&quot;消息的订阅方式&quot;&gt;&lt;/a&gt;消息的订阅方式&lt;/h2&gt;&lt;p&gt;这些都是Observable的方法，参数都是闭包，闭包是观察者&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;subscribe(on:(Event) -&amp;gt; void)：订阅所有消息(Next, Error, and Completed)&lt;/li&gt;
&lt;li&gt;subscribeNext((Element) -&amp;gt; void)：只订阅Next&lt;/li&gt;
&lt;li&gt;subscribeError((ErrorType) -&amp;gt; void)：只订阅Error&lt;/li&gt;
&lt;li&gt;subscribeCompleted(() -&amp;gt; Void)：只订阅Completed&lt;/li&gt;
&lt;li&gt;subscribe(onNext:(Element) -&amp;gt; void, onError:(ErrorType) -&amp;gt; void, onCompleted:() -&amp;gt; Void, onDisposed:() -&amp;gt; Void)订阅多个消息&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;释放分配的资源&quot;&gt;&lt;a href=&quot;#释放分配的资源&quot; class=&quot;headerlink&quot; title=&quot;释放分配的资源&quot;&gt;&lt;/a&gt;释放分配的资源&lt;/h2&gt;&lt;p&gt;订阅者可以通过调用.dispose()来释放分配的资源，但通过DisposeBag来管理或者通过takeUntil来自动释放更好&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subscription.addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;或&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .takeUntil(&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.rx_deallocated)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribe &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Observable的创建和订阅&quot;&gt;&lt;a href=&quot;#Observable的创建和订阅&quot; class=&quot;headerlink&quot; title=&quot;Observable的创建和订阅&quot;&gt;&lt;/a&gt;Observable的创建和订阅&lt;/h2&gt;&lt;p&gt;Observable序列分为两类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;冷：只有当有观察者订阅这个序列时，序列才发射值&lt;/li&gt;
&lt;li&gt;热：序列创建时就开始发射值&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;never-创建即不会完成也不会发消息的Observable&quot;&gt;&lt;a href=&quot;#never-创建即不会完成也不会发消息的Observable&quot; class=&quot;headerlink&quot; title=&quot;never()创建即不会完成也不会发消息的Observable&quot;&gt;&lt;/a&gt;never()创建即不会完成也不会发消息的Observable&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; neverSequence = &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;.never()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; neverSequenceSubscription = neverSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribe &amp;#123; &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;This will never be printed&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;neverSequenceSubscription.addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;./never.png&quot; width=&quot;400/&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;empty-创建只会发送一次完成消息的Observable&quot;&gt;&lt;a href=&quot;#empty-创建只会发送一次完成消息的Observable&quot; class=&quot;headerlink&quot; title=&quot;empty()创建只会发送一次完成消息的Observable&quot;&gt;&lt;/a&gt;empty()创建只会发送一次完成消息的Observable&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&amp;gt;.empty()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribe &amp;#123; event &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(event)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Completed&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./empty.png&quot; width=&quot;400&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;just-创建只包含一个元素的Observable，在发送一次Next消息后便发送Completed消息&quot;&gt;&lt;a href=&quot;#just-创建只包含一个元素的Observable，在发送一次Next消息后便发送Completed消息&quot; class=&quot;headerlink&quot; title=&quot;just()创建只包含一个元素的Observable，在发送一次Next消息后便发送Completed消息&quot;&gt;&lt;/a&gt;just()创建只包含一个元素的Observable，在发送一次Next消息后便发送Completed消息&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.just(&lt;span class=&quot;string&quot;&gt;&quot;🔴&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribe &amp;#123; event &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(event)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注：如果传递null给just，它将返回一个发送null消息的Observable，不要传入错误的参数，否则将会得到一个空的Observable&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Next(🔴)&lt;br&gt;Completed&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;./just.png&quot; width=&quot;400&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;of-创建可以包含任意个元素的Observable，连续相同的元素会被忽略&quot;&gt;&lt;a href=&quot;#of-创建可以包含任意个元素的Observable，连续相同的元素会被忽略&quot; class=&quot;headerlink&quot; title=&quot;of()创建可以包含任意个元素的Observable，连续相同的元素会被忽略&quot;&gt;&lt;/a&gt;of()创建可以包含任意个元素的Observable，连续相同的元素会被忽略&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐭&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐹&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       .subscribeNext &amp;#123; element &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(element)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🐶&lt;br&gt;🐱&lt;br&gt;🐭&lt;br&gt;🐹&lt;/p&gt;
&lt;h3 id=&quot;create-可以创建自定义的Observable，在最原始的Observable基础上创建Observable&quot;&gt;&lt;a href=&quot;#create-可以创建自定义的Observable，在最原始的Observable基础上创建Observable&quot; class=&quot;headerlink&quot; title=&quot;create()可以创建自定义的Observable，在最原始的Observable基础上创建Observable&quot;&gt;&lt;/a&gt;create()可以创建自定义的Observable，在最原始的Observable基础上创建Observable&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; myJust = &amp;#123; (element: &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.create &amp;#123; observer &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            observer.on(.&lt;span class=&quot;type&quot;&gt;Next&lt;/span&gt;(element))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            observer.on(.&lt;span class=&quot;type&quot;&gt;Completed&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;NopDisposable&lt;/span&gt;.instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; myJust(&lt;span class=&quot;string&quot;&gt;&quot;🔴&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribe &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Next(🔴)&lt;br&gt;Completed&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;./create.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;range-创建一个发送一个范围的整数的Observable，发送完后发送Completed&quot;&gt;&lt;a href=&quot;#range-创建一个发送一个范围的整数的Observable，发送完后发送Completed&quot; class=&quot;headerlink&quot; title=&quot;range()创建一个发送一个范围的整数的Observable，发送完后发送Completed&quot;&gt;&lt;/a&gt;range()创建一个发送一个范围的整数的Observable，发送完后发送Completed&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.range(start: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribe &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Next(1)&lt;br&gt;Next(2)&lt;br&gt;Next(3)&lt;br&gt;Next(4)&lt;br&gt;Next(5)&lt;br&gt;Next(6)&lt;br&gt;Next(7)&lt;br&gt;Next(8)&lt;br&gt;Next(9)&lt;br&gt;Next(10)&lt;br&gt;Completed&lt;/p&gt;
&lt;h3 id=&quot;repeatElement-创建一个可以重复发送消息的Observable，可以指定重复的次数，未指定即无限发送&quot;&gt;&lt;a href=&quot;#repeatElement-创建一个可以重复发送消息的Observable，可以指定重复的次数，未指定即无限发送&quot; class=&quot;headerlink&quot; title=&quot;repeatElement()创建一个可以重复发送消息的Observable，可以指定重复的次数，未指定即无限发送&quot;&gt;&lt;/a&gt;repeatElement()创建一个可以重复发送消息的Observable，可以指定重复的次数，未指定即无限发送&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.repeatElement(&lt;span class=&quot;string&quot;&gt;&quot;🔴&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .take(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🔴&lt;br&gt;🔴&lt;br&gt;🔴&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：take可以用于所有Observable指定限制元素个数&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;generate-创建一个可以指定规则的Observable，会发送所有满足规则的元素&quot;&gt;&lt;a href=&quot;#generate-创建一个可以指定规则的Observable，会发送所有满足规则的元素&quot; class=&quot;headerlink&quot; title=&quot;generate()创建一个可以指定规则的Observable，会发送所有满足规则的元素&quot;&gt;&lt;/a&gt;generate()创建一个可以指定规则的Observable，会发送所有满足规则的元素&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.generate(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            initialState: &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            condition: &amp;#123; $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            iterate: &amp;#123; $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;iterate：每次condition之后都会对当前值做一次相应迭代运算&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;&lt;br&gt;0&lt;br&gt;1&lt;br&gt;2&lt;/p&gt;
&lt;h3 id=&quot;deferred-序列为每一个订阅者创建一个全新的Observable&quot;&gt;&lt;a href=&quot;#deferred-序列为每一个订阅者创建一个全新的Observable&quot; class=&quot;headerlink&quot; title=&quot;deferred()序列为每一个订阅者创建一个全新的Observable&quot;&gt;&lt;/a&gt;deferred()序列为每一个订阅者创建一个全新的Observable&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; deferredSequence = &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;.deferred &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Creating &lt;span class=&quot;subst&quot;&gt;\(&lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.create &amp;#123; observer &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Emitting...&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            observer.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            observer.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            observer.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐵&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;NopDisposable&lt;/span&gt;.instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deferredSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deferredSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注：deferred序列只有在一个观察者订阅它的时候才执行它的创建Observable方法，产生一个全新的Observable**&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Creating 1&lt;br&gt;Emitting…&lt;br&gt;🐶&lt;br&gt;🐱&lt;br&gt;🐵&lt;br&gt;Creating 2&lt;br&gt;Emitting…&lt;br&gt;🐶&lt;br&gt;🐱&lt;br&gt;🐵&lt;br&gt;&lt;img src=&quot;./deferred.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;error-创建一个不发送元素的Observable，然后立即发送error并终止&quot;&gt;&lt;a href=&quot;#error-创建一个不发送元素的Observable，然后立即发送error并终止&quot; class=&quot;headerlink&quot; title=&quot;error()创建一个不发送元素的Observable，然后立即发送error并终止&quot;&gt;&lt;/a&gt;error()创建一个不发送元素的Observable，然后立即发送error并终止&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&amp;gt;.error(&lt;span class=&quot;type&quot;&gt;Error&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Test&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribe &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Error(Test)&lt;/p&gt;
&lt;h3 id=&quot;doOn-在发送元素消息前对每一个元素做指定的操作，然后返回操作前的元素消息&quot;&gt;&lt;a href=&quot;#doOn-在发送元素消息前对每一个元素做指定的操作，然后返回操作前的元素消息&quot; class=&quot;headerlink&quot; title=&quot;doOn()在发送元素消息前对每一个元素做指定的操作，然后返回操作前的元素消息&quot;&gt;&lt;/a&gt;doOn()在发送元素消息前对每一个元素做指定的操作，然后返回操作前的元素消息&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🍎&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🍐&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🍊&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🍋&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .doOn &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Intercepted:&quot;&lt;/span&gt;, $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注： doOn(onNext:onError:onCompleted:)为不同订阅方式分别指定&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Intercepted: Next(🍎)&lt;br&gt;🍎&lt;br&gt;Intercepted: Next(🍐)&lt;br&gt;🍐&lt;br&gt;Intercepted: Next(🍊)&lt;br&gt;🍊&lt;br&gt;Intercepted: Next(🍋)&lt;br&gt;🍋&lt;br&gt;Intercepted: Completed&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;./doOn.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;toObservable-通过Array-Dictionary-或Set等SequenceType创建一个Observable&quot;&gt;&lt;a href=&quot;#toObservable-通过Array-Dictionary-或Set等SequenceType创建一个Observable&quot; class=&quot;headerlink&quot; title=&quot;toObservable()通过Array,Dictionary,或Set等SequenceType创建一个Observable&quot;&gt;&lt;/a&gt;toObservable()通过Array,Dictionary,或Set等SequenceType创建一个Observable&lt;/h3&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;Subjects的使用&quot;&gt;&lt;a href=&quot;#Subjects的使用&quot; class=&quot;headerlink&quot; title=&quot;Subjects的使用&quot;&gt;&lt;/a&gt;Subjects的使用&lt;/h2&gt;&lt;p&gt;Subjects理解为observer和Observable之间的桥梁或代理，即扮演着observer又扮演着Observable，规定了添加的observer如何接收消息&lt;/p&gt;
&lt;h3 id=&quot;PublishSubject向所有订阅者广播从订阅之后的事件&quot;&gt;&lt;a href=&quot;#PublishSubject向所有订阅者广播从订阅之后的事件&quot; class=&quot;headerlink&quot; title=&quot;PublishSubject向所有订阅者广播从订阅之后的事件&quot;&gt;&lt;/a&gt;PublishSubject向所有订阅者广播从订阅之后的事件&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.addObserver(&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;).addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.addObserver(&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;).addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅰️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅱️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Subscription: 1 Event: Next(🐶)&lt;br&gt;Subscription: 1 Event: Next(🐱)&lt;br&gt;Subscription: 1 Event: Next(🅰️)&lt;br&gt;Subscription: 2 Event: Next(🅰️)&lt;br&gt;Subscription: 1 Event: Next(🅱️)&lt;br&gt;Subscription: 2 Event: Next(🅱️)&lt;/p&gt;
&lt;h3 id=&quot;ReplaySubject有一个缓存机制，可以在创建时通过指定bufferSize指定缓存大小或调用buffer方法指定更详细的缓存条件来指定新添加的订阅者可以接收多少订阅前的消息&quot;&gt;&lt;a href=&quot;#ReplaySubject有一个缓存机制，可以在创建时通过指定bufferSize指定缓存大小或调用buffer方法指定更详细的缓存条件来指定新添加的订阅者可以接收多少订阅前的消息&quot; class=&quot;headerlink&quot; title=&quot;ReplaySubject有一个缓存机制，可以在创建时通过指定bufferSize指定缓存大小或调用buffer方法指定更详细的缓存条件来指定新添加的订阅者可以接收多少订阅前的消息&quot;&gt;&lt;/a&gt;ReplaySubject有一个缓存机制，可以在创建时通过指定bufferSize指定缓存大小或调用buffer方法指定更详细的缓存条件来指定新添加的订阅者可以接收多少订阅前的消息&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject = &lt;span class=&quot;type&quot;&gt;ReplaySubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;.create(bufferSize: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.addObserver(&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;).addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.addObserver(&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;).addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅰️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅱️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Subscription: 1 Event: Next(🐶)&lt;br&gt;Subscription: 1 Event: Next(🐱)&lt;br&gt;Subscription: 2 Event: Next(🐱)&lt;br&gt;Subscription: 1 Event: Next(🅰️)&lt;br&gt;Subscription: 2 Event: Next(🅰️)&lt;br&gt;Subscription: 1 Event: Next(🅱️)&lt;br&gt;Subscription: 2 Event: Next(🅱️)&lt;/p&gt;
&lt;h3 id=&quot;BehaviorSubject向新的订阅者发送一条最近的事件，如果没有事件则发送一条默认的消息&quot;&gt;&lt;a href=&quot;#BehaviorSubject向新的订阅者发送一条最近的事件，如果没有事件则发送一条默认的消息&quot; class=&quot;headerlink&quot; title=&quot;BehaviorSubject向新的订阅者发送一条最近的事件，如果没有事件则发送一条默认的消息&quot;&gt;&lt;/a&gt;BehaviorSubject向新的订阅者发送一条最近的事件，如果没有事件则发送一条默认的消息&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject = &lt;span class=&quot;type&quot;&gt;BehaviorSubject&lt;/span&gt;(value: &lt;span class=&quot;string&quot;&gt;&quot;🔴&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.addObserver(&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;).addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.addObserver(&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;).addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅰️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅱️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.addObserver(&lt;span class=&quot;string&quot;&gt;&quot;3&quot;&lt;/span&gt;).addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🍐&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🍊&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;note：以上都不会自动发送Completed当它们被释放的时候&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Subscription: 1 Event: Next(🔴)&lt;br&gt;Subscription: 1 Event: Next(🐶)&lt;br&gt;Subscription: 1 Event: Next(🐱)&lt;br&gt;Subscription: 2 Event: Next(🐱)&lt;br&gt;Subscription: 1 Event: Next(🅰️)&lt;br&gt;Subscription: 2 Event: Next(🅰️)&lt;br&gt;Subscription: 1 Event: Next(🅱️)&lt;br&gt;Subscription: 2 Event: Next(🅱️)&lt;br&gt;Subscription: 3 Event: Next(🅱️)&lt;br&gt;Subscription: 1 Event: Next(🍐)&lt;br&gt;Subscription: 2 Event: Next(🍐)&lt;br&gt;Subscription: 3 Event: Next(🍐)&lt;br&gt;Subscription: 1 Event: Next(🍊)&lt;br&gt;Subscription: 2 Event: Next(🍊)&lt;br&gt;Subscription: 3 Event: Next(🍊)&lt;/p&gt;
&lt;h3 id=&quot;Variable与BehaviorSubject的区别是在完成的时候它会自动发送一条Completed消息和调用deist&quot;&gt;&lt;a href=&quot;#Variable与BehaviorSubject的区别是在完成的时候它会自动发送一条Completed消息和调用deist&quot; class=&quot;headerlink&quot; title=&quot;Variable与BehaviorSubject的区别是在完成的时候它会自动发送一条Completed消息和调用deist&quot;&gt;&lt;/a&gt;Variable与BehaviorSubject的区别是在完成的时候它会自动发送一条Completed消息和调用deist&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; variable = &lt;span class=&quot;type&quot;&gt;Variable&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;🔴&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.asObservable().addObserver(&lt;span class=&quot;string&quot;&gt;&quot;1&quot;&lt;/span&gt;).addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.value = &lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.value = &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.asObservable().addObserver(&lt;span class=&quot;string&quot;&gt;&quot;2&quot;&lt;/span&gt;).addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.value = &lt;span class=&quot;string&quot;&gt;&quot;🅰️&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.value = &lt;span class=&quot;string&quot;&gt;&quot;🅱️&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;注:variable.asObservable()实际是获取variable中的BehaviorSubject。variable也没有onNext，而是通过value来获取或添加元素，它会添加元素到BehaviorSubject&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Subscription: 1 Event: Next(🔴)&lt;br&gt;Subscription: 1 Event: Next(🐶)&lt;br&gt;Subscription: 1 Event: Next(🐱)&lt;br&gt;Subscription: 2 Event: Next(🐱)&lt;br&gt;Subscription: 1 Event: Next(🅰️)&lt;br&gt;Subscription: 2 Event: Next(🅰️)&lt;br&gt;Subscription: 1 Event: Next(🅱️)&lt;br&gt;Subscription: 2 Event: Next(🅱️)&lt;br&gt;Subscription: 1 Event: Completed&lt;br&gt;Subscription: 2 Event: Completed&lt;/p&gt;
&lt;h2 id=&quot;Combination：Observable的混合操作&quot;&gt;&lt;a href=&quot;#Combination：Observable的混合操作&quot; class=&quot;headerlink&quot; title=&quot;Combination：Observable的混合操作&quot;&gt;&lt;/a&gt;Combination：Observable的混合操作&lt;/h2&gt;&lt;h3 id=&quot;startWith-分为原Observable和新Observable，并且在发送原Observable元素前会先发送完新Observable元素，有点像栈&quot;&gt;&lt;a href=&quot;#startWith-分为原Observable和新Observable，并且在发送原Observable元素前会先发送完新Observable元素，有点像栈&quot; class=&quot;headerlink&quot; title=&quot;startWith()分为原Observable和新Observable，并且在发送原Observable元素前会先发送完新Observable元素，有点像栈&quot;&gt;&lt;/a&gt;startWith()分为原Observable和新Observable，并且在发送原Observable元素前会先发送完新Observable元素，有点像栈&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐭&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐹&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     .startWith(&lt;span class=&quot;string&quot;&gt;&quot;1️⃣&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     .startWith(&lt;span class=&quot;string&quot;&gt;&quot;2️⃣&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     .startWith(&lt;span class=&quot;string&quot;&gt;&quot;3️⃣&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🅰️&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🅱️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;3️⃣&lt;br&gt;🅰️&lt;br&gt;🅱️&lt;br&gt;2️⃣&lt;br&gt;1️⃣&lt;br&gt;🐶&lt;br&gt;🐱&lt;br&gt;🐭&lt;br&gt;🐹&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/startwith.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/startwith.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;merge-按顺序混合多个Observable为一个新Observable&quot;&gt;&lt;a href=&quot;#merge-按顺序混合多个Observable为一个新Observable&quot; class=&quot;headerlink&quot; title=&quot;merge()按顺序混合多个Observable为一个新Observable&quot;&gt;&lt;/a&gt;merge()按顺序混合多个Observable为一个新Observable&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject1 = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject2 = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject3 = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(subject1, subject2, subject3)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .merge()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅰️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅱️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject2.onNext(&lt;span class=&quot;string&quot;&gt;&quot;①&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject2.onNext(&lt;span class=&quot;string&quot;&gt;&quot;②&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🆎&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject3.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject2.onNext(&lt;span class=&quot;string&quot;&gt;&quot;③&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🅰️&lt;br&gt;🅱️&lt;br&gt;①&lt;br&gt;②&lt;br&gt;🆎&lt;br&gt;③&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/merge.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/merge.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;zip-相当于并排的将多个Observable合并成一个新Observable&quot;&gt;&lt;a href=&quot;#zip-相当于并排的将多个Observable合并成一个新Observable&quot; class=&quot;headerlink&quot; title=&quot;zip()相当于并排的将多个Observable合并成一个新Observable&quot;&gt;&lt;/a&gt;zip()相当于并排的将多个Observable合并成一个新Observable&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; stringSubject = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; intSubject = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.&lt;span class=&quot;built_in&quot;&gt;zip&lt;/span&gt;(stringSubject, intSubject) &amp;#123; stringElement, intElement &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(stringElement)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(intElement)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringSubject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅰️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringSubject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅱️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;intSubject.onNext(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;intSubject.onNext(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringSubject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🆎&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;intSubject.onNext(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🅰️ 1&lt;br&gt;🅱️ 2&lt;br&gt;🆎 3&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/zip.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/zip.html&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;combineLatest-总是将某个Observable发出的最新元素与其他Observable的最后发出的元素混合&quot;&gt;&lt;a href=&quot;#combineLatest-总是将某个Observable发出的最新元素与其他Observable的最后发出的元素混合&quot; class=&quot;headerlink&quot; title=&quot;combineLatest()总是将某个Observable发出的最新元素与其他Observable的最后发出的元素混合&quot;&gt;&lt;/a&gt;combineLatest()总是将某个Observable发出的最新元素与其他Observable的最后发出的元素混合&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; stringSubject = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; intSubject = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.combineLatest(stringSubject, intSubject) &amp;#123; stringElement, intElement &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\(stringElement)&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\(intElement)&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringSubject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅰️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringSubject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🅱️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;intSubject.onNext(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;intSubject.onNext(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stringSubject.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🆎&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🅱️ 1&lt;br&gt;🅱️ 2&lt;br&gt;🆎 2&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/combinelatest.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/combinelatest.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在数组上的应用：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; stringObservable = &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.just(&lt;span class=&quot;string&quot;&gt;&quot;❤️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; fruitObservable = [&lt;span class=&quot;string&quot;&gt;&quot;🍎&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🍐&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🍊&quot;&lt;/span&gt;].toObservable()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; animalObservable = &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐭&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐹&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[stringObservable, fruitObservable, animalObservable].combineLatest &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;string&quot;&gt;&quot;&lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;])&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;])&lt;/span&gt; &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;])&lt;/span&gt;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;note：所有集合的类型必须一样&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;❤️ 🍊 🐶&lt;br&gt;❤️ 🍊 🐱&lt;br&gt;❤️ 🍊 🐭&lt;br&gt;❤️ 🍊 🐹&lt;/p&gt;
&lt;h3 id=&quot;switchLatest-可以将多个Observable序列合并成一个一维的Observable序列，只合并当前关注的Observable序列最近的消息&quot;&gt;&lt;a href=&quot;#switchLatest-可以将多个Observable序列合并成一个一维的Observable序列，只合并当前关注的Observable序列最近的消息&quot; class=&quot;headerlink&quot; title=&quot;switchLatest()可以将多个Observable序列合并成一个一维的Observable序列，只合并当前关注的Observable序列最近的消息&quot;&gt;&lt;/a&gt;switchLatest()可以将多个Observable序列合并成一个一维的Observable序列，只合并当前关注的Observable序列最近的消息&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject1 = &lt;span class=&quot;type&quot;&gt;BehaviorSubject&lt;/span&gt;(value: &lt;span class=&quot;string&quot;&gt;&quot;⚽️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject2 = &lt;span class=&quot;type&quot;&gt;BehaviorSubject&lt;/span&gt;(value: &lt;span class=&quot;string&quot;&gt;&quot;🍎&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; variable = &lt;span class=&quot;type&quot;&gt;Variable&lt;/span&gt;(subject1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.asObservable()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .switchLatest()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🏈&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🏀&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.value = subject2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onNext(&lt;span class=&quot;string&quot;&gt;&quot;⚾️&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🎾&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject2.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🍐&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.value = subject1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;⚽️&lt;br&gt;🏈&lt;br&gt;🏀&lt;br&gt;🍎&lt;br&gt;🍐&lt;br&gt;🎾&lt;br&gt;&lt;strong&gt;note：⚽️ 被忽略&lt;/strong&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;./switch.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;Transforming：Observable的转换操作&quot;&gt;&lt;a href=&quot;#Transforming：Observable的转换操作&quot; class=&quot;headerlink&quot; title=&quot;Transforming：Observable的转换操作&quot;&gt;&lt;/a&gt;Transforming：Observable的转换操作&lt;/h2&gt;&lt;h3 id=&quot;map-将闭包操作应用到一个被观察序列的所有元素上，然后返回一个新的被观察序列&quot;&gt;&lt;a href=&quot;#map-将闭包操作应用到一个被观察序列的所有元素上，然后返回一个新的被观察序列&quot; class=&quot;headerlink&quot; title=&quot;map()将闭包操作应用到一个被观察序列的所有元素上，然后返回一个新的被观察序列&quot;&gt;&lt;/a&gt;map()将闭包操作应用到一个被观察序列的所有元素上，然后返回一个新的被观察序列&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt; &amp;#123; $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; * $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;1&lt;br&gt;4&lt;br&gt;9&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/map.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/map.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;scan-可以迭代的操作，并且可以设置一个初始的迭代值&quot;&gt;&lt;a href=&quot;#scan-可以迭代的操作，并且可以设置一个初始的迭代值&quot; class=&quot;headerlink&quot; title=&quot;scan()可以迭代的操作，并且可以设置一个初始的迭代值&quot;&gt;&lt;/a&gt;scan()可以迭代的操作，并且可以设置一个初始的迭代值&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .scan(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;) &amp;#123; aggregateValue, newValue &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        aggregateValue + newValue&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;11&lt;br&gt;111&lt;br&gt;1111&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/scan.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/scan.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Filtering：Observable消息元素的过滤操作&quot;&gt;&lt;a href=&quot;#Filtering：Observable消息元素的过滤操作&quot; class=&quot;headerlink&quot; title=&quot;Filtering：Observable消息元素的过滤操作&quot;&gt;&lt;/a&gt;Filtering：Observable消息元素的过滤操作&lt;/h2&gt;&lt;h3 id=&quot;filter-发出满足bool条件的元素&quot;&gt;&lt;a href=&quot;#filter-发出满足bool条件的元素&quot; class=&quot;headerlink&quot; title=&quot;filter()发出满足bool条件的元素&quot;&gt;&lt;/a&gt;filter()发出满足bool条件的元素&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐰&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;🐸&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐰&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;🐹&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐸&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .&lt;span class=&quot;built_in&quot;&gt;filter&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; == &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🐱&lt;br&gt;🐱&lt;br&gt;🐱&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/filter.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/filter.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;distinctUntilChanged-过滤掉连续的相同元素&quot;&gt;&lt;a href=&quot;#distinctUntilChanged-过滤掉连续的相同元素&quot; class=&quot;headerlink&quot; title=&quot;distinctUntilChanged()过滤掉连续的相同元素&quot;&gt;&lt;/a&gt;distinctUntilChanged()过滤掉连续的相同元素&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐷&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐵&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .distinctUntilChanged()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🐱&lt;br&gt;🐷&lt;br&gt;🐱&lt;br&gt;🐵&lt;br&gt;🐱&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/distinct.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/distinct.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;elementAt-只发送指定下标的元素&quot;&gt;&lt;a href=&quot;#elementAt-只发送指定下标的元素&quot; class=&quot;headerlink&quot; title=&quot;elementAt()只发送指定下标的元素&quot;&gt;&lt;/a&gt;elementAt()只发送指定下标的元素&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐰&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐸&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐷&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐵&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .elementAt(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🐸&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/elementat.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/elementat.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;single-不传参数则发送Observable的第一个元素，否则为满足条件表达式的第一个元素，如果没有发送一个确切的元素，将发送一个-Error消息&quot;&gt;&lt;a href=&quot;#single-不传参数则发送Observable的第一个元素，否则为满足条件表达式的第一个元素，如果没有发送一个确切的元素，将发送一个-Error消息&quot; class=&quot;headerlink&quot; title=&quot;single()不传参数则发送Observable的第一个元素，否则为满足条件表达式的第一个元素，如果没有发送一个确切的元素，将发送一个 Error消息&quot;&gt;&lt;/a&gt;single()不传参数则发送Observable的第一个元素，否则为满足条件表达式的第一个元素，如果没有发送一个确切的元素，将发送一个 Error消息&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐰&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐸&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐷&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐵&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .single&amp;#123; $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;lt;= &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;&amp;#125;&lt;span class=&quot;comment&quot;&gt;//如果是==这种确切的判断，将没有Error消息而是Completed消息&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Next(1)&lt;br&gt;Error(Sequence contains more than one element.)&lt;/p&gt;
&lt;h3 id=&quot;take-仅发送从第一个元素开始指定个数的元素&quot;&gt;&lt;a href=&quot;#take-仅发送从第一个元素开始指定个数的元素&quot; class=&quot;headerlink&quot; title=&quot;take()仅发送从第一个元素开始指定个数的元素&quot;&gt;&lt;/a&gt;take()仅发送从第一个元素开始指定个数的元素&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐰&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐸&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐷&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐵&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .take(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🐱&lt;br&gt;🐰&lt;br&gt;🐶&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/take.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/take.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;takeLast-与take不同的是takeLast是从末尾开始&quot;&gt;&lt;a href=&quot;#takeLast-与take不同的是takeLast是从末尾开始&quot; class=&quot;headerlink&quot; title=&quot;takeLast()与take不同的是takeLast是从末尾开始&quot;&gt;&lt;/a&gt;takeLast()与take不同的是takeLast是从末尾开始&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐰&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐸&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐷&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐵&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .takeLast(&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🐸&lt;br&gt;🐷&lt;br&gt;🐵&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/takelast.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/takelast.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;takeWhile-发送从头开始的满足条件的元素&quot;&gt;&lt;a href=&quot;#takeWhile-发送从头开始的满足条件的元素&quot; class=&quot;headerlink&quot; title=&quot;takeWhile()发送从头开始的满足条件的元素&quot;&gt;&lt;/a&gt;takeWhile()发送从头开始的满足条件的元素&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .takeWhile &amp;#123; $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;lt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;1&lt;br&gt;2&lt;br&gt;3&lt;br&gt;&lt;img src=&quot;./takeWhile.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;takeUntil：在与之关联的另一Observable发送元素前发送元素&quot;&gt;&lt;a href=&quot;#takeUntil：在与之关联的另一Observable发送元素前发送元素&quot; class=&quot;headerlink&quot; title=&quot;takeUntil：在与之关联的另一Observable发送元素前发送元素&quot;&gt;&lt;/a&gt;takeUntil：在与之关联的另一Observable发送元素前发送元素&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sourceSequence = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; referenceSequence = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .takeUntil(referenceSequence)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribe &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐰&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;referenceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🔴&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐸&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐷&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐵&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Next(🐱)&lt;br&gt;Next(🐰)&lt;br&gt;Next(🐶)&lt;br&gt;Completed&lt;br&gt;&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/takeuntil.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/takeuntil.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;skip-与take相反，它是不发送&quot;&gt;&lt;a href=&quot;#skip-与take相反，它是不发送&quot; class=&quot;headerlink&quot; title=&quot;skip()与take相反，它是不发送&quot;&gt;&lt;/a&gt;skip()与take相反，它是不发送&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐰&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐸&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐷&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐵&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .skip(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🐶&lt;br&gt;🐸&lt;br&gt;🐷&lt;br&gt;🐵&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/skip.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/skip.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;skipWhile-与takeWhile相反，它是不发送&quot;&gt;&lt;a href=&quot;#skipWhile-与takeWhile相反，它是不发送&quot; class=&quot;headerlink&quot; title=&quot;skipWhile()与takeWhile相反，它是不发送&quot;&gt;&lt;/a&gt;skipWhile()与takeWhile相反，它是不发送&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .skipWhile &amp;#123; $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;lt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;4&lt;br&gt;5&lt;br&gt;6&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;./skipWhile.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;skipWhileWithIndex-只是skipWhile基础上增加了一个下标index&quot;&gt;&lt;a href=&quot;#skipWhileWithIndex-只是skipWhile基础上增加了一个下标index&quot; class=&quot;headerlink&quot; title=&quot;skipWhileWithIndex()只是skipWhile基础上增加了一个下标index&quot;&gt;&lt;/a&gt;skipWhileWithIndex()只是skipWhile基础上增加了一个下标index&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐰&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐸&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐷&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;🐵&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .skipWhileWithIndex &amp;#123; element, index &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        index &amp;lt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🐸&lt;br&gt;🐷&lt;br&gt;🐵&lt;/p&gt;
&lt;h3 id=&quot;skipUntil-与takeUntil相反，它是之后发送&quot;&gt;&lt;a href=&quot;#skipUntil-与takeUntil相反，它是之后发送&quot; class=&quot;headerlink&quot; title=&quot;skipUntil()与takeUntil相反，它是之后发送&quot;&gt;&lt;/a&gt;skipUntil()与takeUntil相反，它是之后发送&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sourceSequence = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; referenceSequence = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .skipUntil(referenceSequence)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐰&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;referenceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🔴&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐸&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐷&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sourceSequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐵&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🐸&lt;br&gt;🐷&lt;br&gt;🐵&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/skipuntil.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/skipuntil.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;对Observable元素做运算操作&quot;&gt;&lt;a href=&quot;#对Observable元素做运算操作&quot; class=&quot;headerlink&quot; title=&quot;对Observable元素做运算操作&quot;&gt;&lt;/a&gt;对Observable元素做运算操作&lt;/h2&gt;&lt;h3 id=&quot;toArray-将Observable序列转换成array并发送，然后终止&quot;&gt;&lt;a href=&quot;#toArray-将Observable序列转换成array并发送，然后终止&quot; class=&quot;headerlink&quot; title=&quot;toArray()将Observable序列转换成array并发送，然后终止&quot;&gt;&lt;/a&gt;toArray()将Observable序列转换成array并发送，然后终止&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.range(start: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .toArray()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribe &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Next([1, 2, 3, 4, 5, 6, 7, 8, 9, 10])&lt;br&gt;Completed&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;./toArray.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;reduce-迭代运算，通过指定初始迭代值和运算符&quot;&gt;&lt;a href=&quot;#reduce-迭代运算，通过指定初始迭代值和运算符&quot; class=&quot;headerlink&quot; title=&quot;reduce()迭代运算，通过指定初始迭代值和运算符&quot;&gt;&lt;/a&gt;reduce()迭代运算，通过指定初始迭代值和运算符&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;.of(&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .&lt;span class=&quot;built_in&quot;&gt;reduce&lt;/span&gt;(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, accumulator: +)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;=&lt;br&gt;1111&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/reduce.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/reduce.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;concat-将一个Observable序列的内部Observable序列串联起来，且同一时间只操作一个序列，只有当前序列Completed后，才开始串联下一个序列的前一个元素及之后的元素&quot;&gt;&lt;a href=&quot;#concat-将一个Observable序列的内部Observable序列串联起来，且同一时间只操作一个序列，只有当前序列Completed后，才开始串联下一个序列的前一个元素及之后的元素&quot; class=&quot;headerlink&quot; title=&quot;concat()将一个Observable序列的内部Observable序列串联起来，且同一时间只操作一个序列，只有当前序列Completed后，才开始串联下一个序列的前一个元素及之后的元素&quot;&gt;&lt;/a&gt;concat()将一个Observable序列的内部Observable序列串联起来，且同一时间只操作一个序列，只有当前序列Completed后，才开始串联下一个序列的前一个元素及之后的元素&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject1 = &lt;span class=&quot;type&quot;&gt;BehaviorSubject&lt;/span&gt;(value: &lt;span class=&quot;string&quot;&gt;&quot;🍎&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject2 = &lt;span class=&quot;type&quot;&gt;BehaviorSubject&lt;/span&gt;(value: &lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; variable = &lt;span class=&quot;type&quot;&gt;Variable&lt;/span&gt;(subject1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.asObservable()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .concat()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribe &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🍐&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🍊&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;variable.value = subject2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject2.onNext(&lt;span class=&quot;string&quot;&gt;&quot;I would be ignored&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject2.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🍹&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject1.onCompleted()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;subject2.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐭&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Next(🍎)&lt;br&gt;Next(🍐)&lt;br&gt;Next(🍊)&lt;br&gt;Next(🍹)&lt;br&gt;Next(🐱)&lt;br&gt;Next(🐭)&lt;br&gt;&lt;a href=&quot;http://reactivex.io/documentation/operators/concat.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reactivex.io/documentation/operators/concat.html&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Connectable操作&quot;&gt;&lt;a href=&quot;#Connectable操作&quot; class=&quot;headerlink&quot; title=&quot;Connectable操作&quot;&gt;&lt;/a&gt;Connectable操作&lt;/h2&gt;&lt;p&gt;Connectable操作，Connectable Observable操作跟普通的Observable区别在于，Connectable Observable只有在它们的connect()方法调用后才开始发送元素，因此可以等到所有订阅者都订阅后才开始发送元素，有点像事务一样&lt;/p&gt;
&lt;h3 id=&quot;publish-将一个普通序列转换成Connectable-Observable序列&quot;&gt;&lt;a href=&quot;#publish-将一个普通序列转换成Connectable-Observable序列&quot; class=&quot;headerlink&quot; title=&quot;publish()将一个普通序列转换成Connectable Observable序列&quot;&gt;&lt;/a&gt;publish()将一个普通序列转换成Connectable Observable序列&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;printExampleHeader(#function)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; intSequence = &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&amp;gt;.interval(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, scheduler: &lt;span class=&quot;type&quot;&gt;MainScheduler&lt;/span&gt;.instance)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .publish()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = intSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Subscription 1:, Event: &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delay(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123; intSequence.connect() &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delay(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = intSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Subscription 2:, Event: &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delay(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = intSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Subscription 3:, Event: &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;delay 2&lt;/p&gt;
&lt;p&gt;Subscription 1:, Event: 0&lt;br&gt;Subscription 1:, Event: 1&lt;br&gt;Subscription 2:, Event: 1&lt;br&gt;Subscription 1:, Event: 2&lt;br&gt;Subscription 2:, Event: 2&lt;br&gt;Subscription 1:, Event: 3&lt;br&gt;Subscription 2:, Event: 3&lt;br&gt;Subscription 3:, Event: 3&lt;br&gt;Subscription 1:, Event: 4&lt;br&gt;Subscription 2:, Event: 4&lt;br&gt;Subscription 3:, Event: 4&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;./publish.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;replay-相对于publish增加了bufferSize指定对元素的缓存大小，这样新加入的订阅者可以获取相应个数的已发送的元素&quot;&gt;&lt;a href=&quot;#replay-相对于publish增加了bufferSize指定对元素的缓存大小，这样新加入的订阅者可以获取相应个数的已发送的元素&quot; class=&quot;headerlink&quot; title=&quot;replay()相对于publish增加了bufferSize指定对元素的缓存大小，这样新加入的订阅者可以获取相应个数的已发送的元素&quot;&gt;&lt;/a&gt;replay()相对于publish增加了bufferSize指定对元素的缓存大小，这样新加入的订阅者可以获取相应个数的已发送的元素&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;printExampleHeader(#function)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; intSequence = &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&amp;gt;.interval(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, scheduler: &lt;span class=&quot;type&quot;&gt;MainScheduler&lt;/span&gt;.instance)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .replay(&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = intSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Subscription 1:, Event: &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delay(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123; intSequence.connect() &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delay(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = intSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Subscription 2:, Event: &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delay(&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = intSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Subscription 3:, Event: &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;delay 2&lt;/p&gt;
&lt;p&gt;Subscription 1:, Event: 0&lt;br&gt;Subscription 2:, Event: 0&lt;br&gt;Subscription 1:, Event: 1&lt;br&gt;Subscription 2:, Event: 1&lt;br&gt;Subscription 1:, Event: 2&lt;br&gt;Subscription 2:, Event: 2&lt;br&gt;Subscription 1:, Event: 3&lt;br&gt;Subscription 2:, Event: 3&lt;br&gt;Subscription 1:, Event: 4&lt;br&gt;Subscription 2:, Event: 4&lt;br&gt;Subscription 3:, Event: 0&lt;br&gt;Subscription 3:, Event: 1&lt;br&gt;Subscription 3:, Event: 2&lt;br&gt;Subscription 3:, Event: 3&lt;br&gt;Subscription 3:, Event: 4&lt;br&gt;Subscription 1:, Event: 5&lt;br&gt;Subscription 2:, Event: 5&lt;br&gt;Subscription 3:, Event: 5&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;./replay.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;multicast-需要传入一个subject，通过subject来管理向订阅者发送消息&quot;&gt;&lt;a href=&quot;#multicast-需要传入一个subject，通过subject来管理向订阅者发送消息&quot; class=&quot;headerlink&quot; title=&quot;multicast()需要传入一个subject，通过subject来管理向订阅者发送消息&quot;&gt;&lt;/a&gt;multicast()需要传入一个subject，通过subject来管理向订阅者发送消息&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;printExampleHeader(#function)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; subject = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = subject&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Subject: &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; intSequence = &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt;&amp;gt;.interval(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, scheduler: &lt;span class=&quot;type&quot;&gt;MainScheduler&lt;/span&gt;.instance)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .multicast(subject)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = intSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\tSubscription 1:, Event: &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delay(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123; intSequence.connect() &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delay(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = intSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\tSubscription 2:, Event: &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;delay(&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;number&quot;&gt;_&lt;/span&gt; = intSequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;\tSubscription 3:, Event: &lt;span class=&quot;subst&quot;&gt;\($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&quot;&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;delay 2&lt;/p&gt;
&lt;p&gt;Subject: 0&lt;br&gt;Subscription 1:, Event: 0&lt;br&gt; Subject: 1&lt;br&gt;Subscription 1:, Event: 1&lt;br&gt;Subscription 2:, Event: 1&lt;br&gt; Subject: 2&lt;br&gt;Subscription 1:, Event: 2&lt;br&gt;Subscription 2:, Event: 2&lt;br&gt; Subject: 3&lt;br&gt;Subscription 1:, Event: 3&lt;br&gt;Subscription 2:, Event: 3&lt;br&gt;Subscription 3:, Event: 3&lt;br&gt; Subject: 4&lt;br&gt;Subscription 1:, Event: 4&lt;br&gt;Subscription 2:, Event: 4&lt;br&gt;Subscription 3:, Event: 4&lt;br&gt; Subject: 5&lt;br&gt;Subscription 1:, Event: 5&lt;br&gt;Subscription 2:, Event: 5&lt;br&gt;Subscription 3:, Event: 5&lt;/p&gt;
&lt;h2 id=&quot;错误处理&quot;&gt;&lt;a href=&quot;#错误处理&quot; class=&quot;headerlink&quot; title=&quot;错误处理&quot;&gt;&lt;/a&gt;错误处理&lt;/h2&gt;&lt;h3 id=&quot;catchErrorJustReturn-通过返回一个只发送一个元素的Observable序列来捕获错误信息，然后-Completed&quot;&gt;&lt;a href=&quot;#catchErrorJustReturn-通过返回一个只发送一个元素的Observable序列来捕获错误信息，然后-Completed&quot; class=&quot;headerlink&quot; title=&quot;catchErrorJustReturn()通过返回一个只发送一个元素的Observable序列来捕获错误信息，然后 Completed&quot;&gt;&lt;/a&gt;catchErrorJustReturn()通过返回一个只发送一个元素的Observable序列来捕获错误信息，然后 Completed&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sequenceThatFails = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatFails&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .catchErrorJustReturn(&lt;span class=&quot;string&quot;&gt;&quot;😊&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribe &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatFails.onNext(&lt;span class=&quot;string&quot;&gt;&quot;😬&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatFails.onNext(&lt;span class=&quot;string&quot;&gt;&quot;😨&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatFails.onNext(&lt;span class=&quot;string&quot;&gt;&quot;😡&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatFails.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🔴&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatFails.onError(&lt;span class=&quot;type&quot;&gt;Error&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Test&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Next(😬)&lt;br&gt;Next(😨)&lt;br&gt;Next(😡)&lt;br&gt;Next(🔴)&lt;br&gt;Next(😊)&lt;br&gt;Completed&lt;/p&gt;
&lt;h3 id=&quot;catchError-当捕获错误后会返回一个正常的Observable序列与之合并&quot;&gt;&lt;a href=&quot;#catchError-当捕获错误后会返回一个正常的Observable序列与之合并&quot; class=&quot;headerlink&quot; title=&quot;catchError()当捕获错误后会返回一个正常的Observable序列与之合并&quot;&gt;&lt;/a&gt;catchError()当捕获错误后会返回一个正常的Observable序列与之合并&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sequenceThatErrors = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; recoverySequence = &lt;span class=&quot;type&quot;&gt;PublishSubject&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatErrors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .catchError &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Error:&quot;&lt;/span&gt;, $&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; recoverySequence&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribe &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatErrors.onNext(&lt;span class=&quot;string&quot;&gt;&quot;😬&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatErrors.onNext(&lt;span class=&quot;string&quot;&gt;&quot;😨&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatErrors.onNext(&lt;span class=&quot;string&quot;&gt;&quot;😡&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatErrors.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🔴&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatErrors.onError(&lt;span class=&quot;type&quot;&gt;Error&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Test&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;recoverySequence.onNext(&lt;span class=&quot;string&quot;&gt;&quot;😊&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;Next(😬)&lt;br&gt;Next(😨)&lt;br&gt;Next(😡)&lt;br&gt;Next(🔴)&lt;br&gt;Error: Test&lt;br&gt;Next(😊)&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;./catch.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;retry-当遇到error后发送一条error消息然后重新重头发送元素，通过传入一个整数可以指定重复次数&quot;&gt;&lt;a href=&quot;#retry-当遇到error后发送一条error消息然后重新重头发送元素，通过传入一个整数可以指定重复次数&quot; class=&quot;headerlink&quot; title=&quot;retry()当遇到error后发送一条error消息然后重新重头发送元素，通过传入一个整数可以指定重复次数&quot;&gt;&lt;/a&gt;retry()当遇到error后发送一条error消息然后重新重头发送元素，通过传入一个整数可以指定重复次数&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; disposeBag = &lt;span class=&quot;type&quot;&gt;DisposeBag&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; sequenceThatErrors = &lt;span class=&quot;type&quot;&gt;Observable&lt;/span&gt;&amp;lt;&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;&amp;gt;.create &amp;#123; observer &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🍎&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🍐&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🍊&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        observer.onError(&lt;span class=&quot;type&quot;&gt;Error&lt;/span&gt;.&lt;span class=&quot;type&quot;&gt;Test&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Error encountered&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;count&lt;/span&gt; += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐶&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐱&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer.onNext(&lt;span class=&quot;string&quot;&gt;&quot;🐭&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    observer.onCompleted()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;type&quot;&gt;NopDisposable&lt;/span&gt;.instance&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sequenceThatErrors&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .retry()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .subscribeNext &amp;#123; &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;($&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    .addDisposableTo(disposeBag)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;output:&lt;/code&gt;&lt;br&gt;🍎&lt;br&gt;🍐&lt;br&gt;🍊&lt;br&gt;Error encountered&lt;br&gt;🍎&lt;br&gt;🍐&lt;br&gt;🍊&lt;br&gt;🐶&lt;br&gt;🐱&lt;br&gt;🐭&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;img src=&quot;./retry.png&quot; width=&quot;400&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;debug&quot;&gt;&lt;a href=&quot;#debug&quot; class=&quot;headerlink&quot; title=&quot;debug&quot;&gt;&lt;/a&gt;debug&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;debug()会打印详细的信息&lt;/li&gt;
&lt;li&gt;RxSwift.resourceCount()打印资源分配计数&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;注：不要在Release builds中使用&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h2&gt;&lt;p&gt;一个观察者(Observer)订阅一个可观察序列(Observable)。观察者对Observable发射的数据或数据序列作出响应&lt;/p&gt;
&lt;h2 id=&quot;为什么发用RxSwift&quot;&gt;&lt;a href=&quot;#为什么发用RxSwift&quot; class=&quot;headerlink&quot; title=&quot;为什么发用RxSwift&quot;&gt;&lt;/a&gt;为什么发用RxSwift&lt;/h2&gt;&lt;p&gt;一个程序通常包含着大量的各种事件的产生以及对应的处理逻辑，各种响应方法使代码更加的混乱和复杂，而RxSwift是一个统一的处理各种响应事件的方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Observable的创建和订阅&lt;/li&gt;
&lt;li&gt;Subjects的使用&lt;/li&gt;
&lt;li&gt;Combination：Observable的混合操作&lt;/li&gt;
&lt;li&gt;Transforming：Observable的转换操作&lt;/li&gt;
&lt;li&gt;Filtering：Observable消息元素的过滤操作&lt;/li&gt;
&lt;li&gt;对Observable元素做运算操作&lt;/li&gt;
&lt;li&gt;Connectable操作&lt;/li&gt;
&lt;li&gt;错误处理&lt;/li&gt;
&lt;li&gt;debug&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="RXSwift" scheme="http://www.jvaeyhcd.cc/tags/RXSwift/"/>
    
  </entry>
  
  <entry>
    <title>Swift学习笔记之闭包</title>
    <link href="http://www.jvaeyhcd.cc/2016/06/01/Swift%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E9%97%AD%E5%8C%85/"/>
    <id>http://www.jvaeyhcd.cc/2016/06/01/Swift学习笔记之闭包/</id>
    <published>2016-06-01T01:20:16.000Z</published>
    <updated>2016-06-02T05:14:41.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;一般来说，在学习一个新的东西前我们都需要先了解这个东西的定义。在Swift中的闭包是什么呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;闭包是自包含的函数代码块，可以在代码中被传递和使用。Swift中的闭包与C和objc中的代码块(blocks)以及其它一些语言中的匿名函数比较相似。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;闭包可以捕获和存储其所在上下文中任意常量和变量的引用。这就是所谓的闭合并包裹着这些常量和变量，俗称闭包。Swift 会为您管理在捕获过程中涉及到的所有内存操作。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;全局和嵌套函数其实也是特殊的闭包，闭包采取如下三种形式之一：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局函数是一个有名字但不会捕获任何值的闭包&lt;/li&gt;
&lt;li&gt;嵌套函数是一个有名字并可以捕获其封闭函数内值的闭包&lt;/li&gt;
&lt;li&gt;闭包表达式是一个利用轻量级语法    所写的可以捕获其上下文中变量或常量值的匿名闭包&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Swift表达式拥有简洁的风格，并鼓励在常见场景进行语法优化，主要有如下优化方式&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;利用上下文推断判断参数和返回值类型&lt;/li&gt;
&lt;li&gt;隐式返回单表达式闭包，即单表达式可以省略&lt;code&gt;return&lt;/code&gt;关键字&lt;/li&gt;
&lt;li&gt;参数名称缩写&lt;/li&gt;
&lt;li&gt;尾随（Trailing）闭包语法&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;闭包表达式&quot;&gt;&lt;a href=&quot;#闭包表达式&quot; class=&quot;headerlink&quot; title=&quot;闭包表达式&quot;&gt;&lt;/a&gt;闭包表达式&lt;/h2&gt;&lt;p&gt;闭包表达式是一种利用简洁语法构建内联闭包的方式，闭包表达式提供了一些语法优化，使得撰写闭包变得简单明了。下面闭包表达式的例子通过几次迭代展示了&lt;code&gt;sort&lt;/code&gt;方法定义和语法优化的方式。每一次都用更简洁的方式描述了相同的功能。&lt;/p&gt;
&lt;h3 id=&quot;sort方法&quot;&gt;&lt;a href=&quot;#sort方法&quot; class=&quot;headerlink&quot; title=&quot;sort方法&quot;&gt;&lt;/a&gt;sort方法&lt;/h3&gt;&lt;p&gt;Swift标准库提供了名为&lt;code&gt;sort&lt;/code&gt;的方法，会根据您提供的用于排序的闭包函数将已知类型数组中的值进行排序。一旦排序完成，&lt;code&gt;sort&lt;/code&gt;方法会返回一个与原数组大小相同，包含同类型元素且元素已正确排序的新数组。原数组并不会被&lt;code&gt;sort&lt;/code&gt;方法修改。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; names = [&lt;span class=&quot;string&quot;&gt;&quot;Jay&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Vae&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Jvaeyhcd&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Tom&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Jack&quot;&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sortFun&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(s1:String, s2:String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s1 &amp;gt; s2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; sortedNames = names.&lt;span class=&quot;built_in&quot;&gt;sort&lt;/span&gt;(sortFun)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;该例子是对一个&lt;code&gt;String&lt;/code&gt;类型的数组进行排序，因此排序闭包函数类型需为&lt;code&gt;(String,String)-&amp;gt;Bool&lt;/code&gt;。提供排序闭包函数的方式是写一个符合其类型要求的普通函数，并将其作为&lt;code&gt;sort&lt;/code&gt;的参数传入。然而，这是一个相当冗长的方式，本质上只是写一个单表达式函数（&lt;code&gt;s1 &amp;gt; s2&lt;/code&gt;）。下面例子中，利用闭包表达式可以更好地构建一个内联排序闭包。&lt;/p&gt;
&lt;h3 id=&quot;闭包表达式语法&quot;&gt;&lt;a href=&quot;#闭包表达式语法&quot; class=&quot;headerlink&quot; title=&quot;闭包表达式语法&quot;&gt;&lt;/a&gt;闭包表达式语法&lt;/h3&gt;&lt;p&gt;闭包表达式语法一般如下：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123; (parameters) -&amp;gt; returnType &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    statements&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;闭包表达式可以使用变量、常量以及&lt;code&gt;inout&lt;/code&gt;类型作为参数，但是不能提供默认值。也可以在参数列表的最后使用可变参数，元组也可以作为参数和返回值。&lt;/p&gt;
&lt;p&gt;下面例子展示了上面&lt;code&gt;sortFun(_:_:)&lt;/code&gt;函数对应的闭包表达式版本的代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sortedNames = names.&lt;span class=&quot;built_in&quot;&gt;sort&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (s1:&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;, s2:&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;)-&amp;gt;&lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s1 &amp;lt; s2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要注意的是内联闭包参数和返回值类型申明与&lt;code&gt;sortFun(_:_:)&lt;/code&gt;类型申明相同。两种方式中，都写成了&lt;code&gt;(s1:String, s2:String)-&amp;gt;Bool&lt;/code&gt;。然而在内联表达式中，函数和返回值类型都写在大括号内，而不是大括号外。&lt;br&gt;闭包函数体部分由关键字&lt;code&gt;in&lt;/code&gt;引入。该关键字表示闭包的参数和返回值类型都已定义完成，闭包函数体即将开始。由于这个闭包函数体部分如此短，以至于可以将其写成一行代码：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sortedNames = names.&lt;span class=&quot;built_in&quot;&gt;sort&lt;/span&gt;(&amp;#123;(s1:&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;, s2:&lt;span class=&quot;type&quot;&gt;String&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Bool&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s1 &amp;lt; s2&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该例中&lt;code&gt;sort(_:)&lt;/code&gt;方法的整体调用保持不变，一对圆括号仍然包裹住了方法的整个参数。然而，参数现在变成了内联闭包。&lt;/p&gt;
&lt;h3 id=&quot;根据上下文推断类型&quot;&gt;&lt;a href=&quot;#根据上下文推断类型&quot; class=&quot;headerlink&quot; title=&quot;根据上下文推断类型&quot;&gt;&lt;/a&gt;根据上下文推断类型&lt;/h3&gt;&lt;p&gt;因为排序闭包函数是作为&lt;code&gt;sort(_:)&lt;/code&gt;方法参数传入的，Swift可判断其参数和返回值的类型。&lt;code&gt;sort(_:)&lt;/code&gt;方法被一个字符串数组调用，此参数必须是&lt;code&gt;(String, String)-&amp;gt;Bool&lt;/code&gt;类型的函数。这意味着&lt;code&gt;(String, String)&lt;/code&gt;和&lt;code&gt;Bool&lt;/code&gt;类型并不是必须作为闭包表达式定义的一部分。因为所有类型都可以被正确判断，返回箭头(&lt;code&gt;-&amp;gt;&lt;/code&gt;)和围绕在周围的括号也可以被省略：&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sortedNames = names.&lt;span class=&quot;built_in&quot;&gt;sort&lt;/span&gt;(&amp;#123;s1, s2 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; s1 &amp;gt; s2&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际上任何情况下，通过内联闭包表达式构造的闭包作为参数传递给函数或方法时，都可以推断出闭包的参数和返回值类型。 这意味着闭包作为函数或者方法的参数时，您几乎不需要利用完整格式构造内联闭包。&lt;/p&gt;
&lt;p&gt;尽管如此，您仍然可以明确写出有着完整格式的闭包。如果完整格式的闭包能够提高代码的可读性，则可以采用完整格式的闭包。&lt;/p&gt;
&lt;h3 id=&quot;单表达式闭包隐式返回&quot;&gt;&lt;a href=&quot;#单表达式闭包隐式返回&quot; class=&quot;headerlink&quot; title=&quot;单表达式闭包隐式返回&quot;&gt;&lt;/a&gt;单表达式闭包隐式返回&lt;/h3&gt;&lt;p&gt;单行表达式闭包可以通过省略&lt;code&gt;return&lt;/code&gt;关键字来隐式返回单行表达式的结果，如上面版本代码可以改写为：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sortedNames = names.&lt;span class=&quot;built_in&quot;&gt;sort&lt;/span&gt;(&amp;#123;s1, s2 &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; s1 &amp;gt; s2&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这个例子中，&lt;code&gt;sort(_:)&lt;/code&gt;方法的参数类型明确了闭包必须返回一个&lt;code&gt;Bool&lt;/code&gt;类型值。因为闭包函数体只包含了一个单一表达式（&lt;code&gt;s1 &amp;gt; s2&lt;/code&gt;），该表达式返回&lt;code&gt;Bool&lt;/code&gt;类型值，因此这里没有歧义，&lt;code&gt;return&lt;/code&gt;关键字可以省略。&lt;/p&gt;
&lt;h3 id=&quot;参数名称缩写&quot;&gt;&lt;a href=&quot;#参数名称缩写&quot; class=&quot;headerlink&quot; title=&quot;参数名称缩写&quot;&gt;&lt;/a&gt;参数名称缩写&lt;/h3&gt;&lt;p&gt;Swift自动为内联包提供了参数名称缩写功能，你可以直接通过&lt;code&gt;$0&lt;/code&gt;,&lt;code&gt;$1&lt;/code&gt;,&lt;code&gt;$2&lt;/code&gt;来顺序调用闭包的参数，以此类推。如果您在闭包表达式中使用参数名缩写，你可以在闭包参数列表中省略对其的定义，并且对应参数名称缩写的类型会通过函数类型进行推断。&lt;code&gt;in&lt;/code&gt;关键字同样也可以被省略，因此闭包表达式完全由闭包函数体构成：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sortedNames = names.&lt;span class=&quot;built_in&quot;&gt;sort&lt;/span&gt;(&amp;#123;$&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;gt; $&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在这个例子中，&lt;code&gt;$0&lt;/code&gt;和&lt;code&gt;$1&lt;/code&gt;表示闭包中第一个和第二个&lt;code&gt;String&lt;/code&gt;类型的参数。&lt;/p&gt;
&lt;h3 id=&quot;运算符函数&quot;&gt;&lt;a href=&quot;#运算符函数&quot; class=&quot;headerlink&quot; title=&quot;运算符函数&quot;&gt;&lt;/a&gt;运算符函数&lt;/h3&gt;&lt;p&gt;实际上还有更简单的方式来实现上面例子中的闭包表达式。Swift中&lt;code&gt;String&lt;/code&gt;类型定义了关于大于符号(&lt;code&gt;&amp;gt;&lt;/code&gt;)的字符串实现，其作为一个函数接收两个&lt;code&gt;String&lt;/code&gt;类型的参数并返回&lt;code&gt;Bool&lt;/code&gt;类型的值。而这正好与&lt;code&gt;sort(_:)&lt;/code&gt;方法的参数需要的函数类型相符合。因此，您可以简单地传递一个大于号，Swift 可以自动推断出您想使用大于号的字符串函数实现：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sortedNames = names.&lt;span class=&quot;built_in&quot;&gt;sort&lt;/span&gt;(&amp;gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;尾随闭包&quot;&gt;&lt;a href=&quot;#尾随闭包&quot; class=&quot;headerlink&quot; title=&quot;尾随闭包&quot;&gt;&lt;/a&gt;尾随闭包&lt;/h2&gt;&lt;p&gt;如果你需要将一个很长的闭包表达式作为最后一个参数传递给函数，可以使用尾随闭包来增强函数的可读性。尾随闭包是一个书写在函数括号后的闭包表达式，函数支持将其作为最后一个参数调用：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;someFunctionThatTakesAClosure&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(closure: &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 函数体部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 以下是不使用尾随闭包进行函数调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;someFunctionThatTakesAClosure(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 闭包主体部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 以下是使用尾随闭包进行函数调用&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;someFunctionThatTakesAClosure() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;// 闭包主体部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;所以上面&lt;code&gt;sort(_:)&lt;/code&gt;方法参数字符串排序闭包可以改写为&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sortedNumbers = numbers.&lt;span class=&quot;built_in&quot;&gt;sort&lt;/span&gt;&amp;#123;$&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;gt; $&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果函数只需要闭包表达式一个参数，当使用尾随闭包时可以把&lt;code&gt;()&lt;/code&gt;省略&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sortedNumbers = numbers.&lt;span class=&quot;built_in&quot;&gt;sort&lt;/span&gt;()&amp;#123;$&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;gt; $&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当闭包非常长以至于不能在一行进行书写，尾随闭包变得非常有用。举个例子来说，Swifte的&lt;code&gt;Array&lt;/code&gt;类型有一个&lt;code&gt;map(_:)&lt;/code&gt;方法，其获取一个闭包表达式作为唯一参数。该闭包函数会为数组中的额每一个元素调用一次，并返回该元素所映射的值。具体的映射方式和返回值类型由闭包来指定。当提供给数组的闭包用于数组每个元素后，&lt;code&gt;map(_:)&lt;/code&gt;方法将返回一个新的数组，数组中包含了与原数组中的元素一一对应的映射后的值。&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; digitNames = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Zero&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;One&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Two&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Three&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Four&quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Five&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Six&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Seven&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Eight&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&quot;Nine&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;numbers = [&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; strings = numbers.&lt;span class=&quot;built_in&quot;&gt;map&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    (number) -&amp;gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; number = number&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; output = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; number &amp;gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        output = digitNames[number % &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;]! + output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        number /= &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; output&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(strings)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面示例代码展示了如何在&lt;code&gt;map(_:)&lt;/code&gt;方法中使用尾随闭包将&lt;code&gt;Int&lt;/code&gt;类型的数组&lt;code&gt;[34, 65, 89]&lt;/code&gt;转换为包含对应&lt;code&gt;String&lt;/code&gt;类型值的数组&lt;code&gt;[&amp;quot;ThreeFour&amp;quot;, &amp;quot;SixFive&amp;quot;, &amp;quot;EightNine&amp;quot;]&lt;/code&gt;。&lt;br&gt;&lt;code&gt;map(_:)&lt;/code&gt;为数组中每一个元素调用了闭包表达式。您不需要指定闭包的输入参数&lt;code&gt;number&lt;/code&gt;的类型，因为可以通过要映射的数组类型进行推断。&lt;br&gt;在该例中，局部变量&lt;code&gt;number&lt;/code&gt;的值由闭包中的&lt;code&gt;numbe&lt;/code&gt;r参数获得,因此可以在闭包函数体内对其进行修改，(闭包或者函数的参数总是固定的),闭包表达式指定了返回类型为&lt;code&gt;String&lt;/code&gt;，以表明存储映射值的新数组类型为&lt;code&gt;String&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;闭包表达式在每次被调用的时候创建了一个叫做&lt;code&gt;output&lt;/code&gt;的字符串并返回。其使用求余运算符（&lt;code&gt;number % 10&lt;/code&gt;）计算最后一位数字并利用&lt;code&gt;digitNames&lt;/code&gt;字典获取所映射的字符串。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：字典digitNames下标后跟着一个叹号（&lt;code&gt;!&lt;/code&gt;），因为字典下标返回一个可选值（optional value），表明该键不存在时会查找失败。在上例中，由于可以确定&lt;code&gt;number % 10&lt;/code&gt;总是digitNames字典的有效下标，因此叹号可以用于强制解包 (force-unwrap) 存储在下标的可选类型的返回值中的&lt;code&gt;String&lt;/code&gt;类型的值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;捕获值&quot;&gt;&lt;a href=&quot;#捕获值&quot; class=&quot;headerlink&quot; title=&quot;捕获值&quot;&gt;&lt;/a&gt;捕获值&lt;/h2&gt;&lt;p&gt;闭包可以在其被定义的上下文中捕获常量或者变量。即使定义这些常量或变量的作用域已经不在，闭包仍然可以在闭包函数体内引用和修改这些值。Swift中可捕获值的最简单的形势就是嵌套函数，也就是定义在其它函数内的函数。嵌套函数可以捕获其外部函数所有的参数以及常量和变量。&lt;/p&gt;
&lt;p&gt;举个例子：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;makeIncrementor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(forIncrement amount: Int)&lt;/span&gt;&lt;/span&gt; -&amp;gt; () -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; runningTotal = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;incrementor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        runningTotal += amount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; runningTotal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; incrementor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; incrementByOne = makeIncrementor(forIncrement: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incrementByOne()&lt;span class=&quot;comment&quot;&gt;//返回1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incrementByOne()&lt;span class=&quot;comment&quot;&gt;//返回2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; incrementByTen = makeIncrementor(forIncrement: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incrementByTen()&lt;span class=&quot;comment&quot;&gt;//返回10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incrementByOne()&lt;span class=&quot;comment&quot;&gt;//返回3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;上面例子中有一个叫&lt;code&gt;makeIncrementor&lt;/code&gt;的函数，它包含了一个叫&lt;code&gt;incrementor&lt;/code&gt;的嵌套函数。嵌套函数&lt;code&gt;incrementor&lt;/code&gt;从上下文捕获了两个值&lt;code&gt;runningTotal&lt;/code&gt;和&lt;code&gt;amount&lt;/code&gt;，捕获值后&lt;code&gt;makeIncrementor&lt;/code&gt;将&lt;code&gt;incrementor&lt;/code&gt;作为闭包返回。每次调用&lt;code&gt;incrementor&lt;/code&gt;时，它会以&lt;code&gt;amount&lt;/code&gt;作为增量增加&lt;code&gt;runningTotal&lt;/code&gt;的值。&lt;br&gt;&lt;code&gt;makeIncrementor&lt;/code&gt;函数返回类型为&lt;code&gt;() -&amp;gt; Int&lt;/code&gt;，这意味着它返回的是一个函数，而不是一个简单类型的值。该函数在每次调用时不接受参数，只返回一个&lt;code&gt;Int&lt;/code&gt;类型的值。&lt;br&gt;&lt;code&gt;makeIncrementer(forIncrement:)&lt;/code&gt;又一个&lt;code&gt;Int&lt;/code&gt;类型的参数，其外部参数名为&lt;code&gt;forIncrement&lt;/code&gt;，内部参数名为&lt;code&gt;amount&lt;/code&gt;，该参数表示每次&lt;code&gt;incrementor&lt;/code&gt;被调用时&lt;code&gt;runningTotal&lt;/code&gt;将要增加的量。&lt;br&gt;嵌套函数&lt;code&gt;incrementor&lt;/code&gt;用来执行实际的增加操作，使&lt;code&gt;runningTotal&lt;/code&gt;增加&lt;code&gt;amount&lt;/code&gt;，并将其返回。&lt;br&gt;如果我们单独看&lt;code&gt;incrementor()&lt;/code&gt;这个函数，会发现不同寻常&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;incrementor&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Int&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    runningTotal += amount&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; runningTotal&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;incrementor()&lt;/code&gt;并没有接受任何参数，但是在函数体内访问了&lt;code&gt;runningTotal&lt;/code&gt;和&lt;code&gt;amount&lt;/code&gt;，这是因为它从外围函数捕获了&lt;code&gt;runningTotal&lt;/code&gt;和&lt;code&gt;amount&lt;/code&gt;变量的引用。捕获引用保证了&lt;code&gt;runningTotal&lt;/code&gt;和&lt;code&gt;amount&lt;/code&gt;变量在调用完&lt;code&gt;makeIncrementor&lt;/code&gt;或不会消失，并且保证在下一次执行&lt;code&gt;incrementer&lt;/code&gt;函数时&lt;code&gt;runningTotal&lt;/code&gt;依然存在。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：为了优化，如果一个值是不可变的，Swift可能会改为捕获并保存一份对值的拷贝。Swift也会负责被捕获变量的所有内存管理工作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; incrementByOne = makeIncrementor(forIncrement: &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incrementByOne()&lt;span class=&quot;comment&quot;&gt;//返回1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incrementByOne()&lt;span class=&quot;comment&quot;&gt;//返回2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; incrementByTen = makeIncrementor(forIncrement: &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incrementByTen()&lt;span class=&quot;comment&quot;&gt;//返回10&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incrementByOne()&lt;span class=&quot;comment&quot;&gt;//返回3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;incrementByTen()&lt;span class=&quot;comment&quot;&gt;//返回20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果您创建了另一个&lt;code&gt;incrementor&lt;/code&gt;，它会有属于它自己的一个全新、独立的&lt;code&gt;runningTotal&lt;/code&gt;变量的引用：&lt;br&gt;再次调用原来的&lt;code&gt;incrementByOne&lt;/code&gt;会在原来的变量&lt;code&gt;runningTotal&lt;/code&gt;上继续增加值，该变量和&lt;code&gt;incrementByTen&lt;/code&gt;中捕获的变量没有任何联系。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：如果您将闭包赋值给一个类实例的属性，并且该闭包通过访问该实例或其成员而捕获了该实例，您将创建一个在闭包和该实例间的循环强引用。Swift 使用捕获列表来打破这种循环强引用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;闭包是引用类型&quot;&gt;&lt;a href=&quot;#闭包是引用类型&quot; class=&quot;headerlink&quot; title=&quot;闭包是引用类型&quot;&gt;&lt;/a&gt;闭包是引用类型&lt;/h2&gt;&lt;p&gt;上面的例子中，&lt;code&gt;incrementByOne&lt;/code&gt;和&lt;code&gt;incrementByTen&lt;/code&gt;是常量，但是这些常量指向的闭包仍然可以增加其捕获的变量值。这是因为函数和闭包都是引用类型。&lt;br&gt;无论你将函数或者闭包赋值给一个常量还是变量，实际上都是将常量或者变量的值设置为对应函数或闭包的引用。。上面的示例中，指向闭包的引用&lt;code&gt;incrementByTen&lt;/code&gt;是一个常量，而非闭包内容本身。&lt;br&gt;这也意味着如果您将闭包赋值给了两个不同的常量或变量，两个值都会指向同一个闭包：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; alsoIncrementByTen = incrementByTen&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alsoIncrementByTen()&lt;span class=&quot;comment&quot;&gt;//返回30&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;非逃逸闭包&quot;&gt;&lt;a href=&quot;#非逃逸闭包&quot; class=&quot;headerlink&quot; title=&quot;非逃逸闭包&quot;&gt;&lt;/a&gt;非逃逸闭包&lt;/h2&gt;&lt;p&gt;当一个闭包作为参数传到一个函数中，但是这个闭包在函数返回之后才被执行，我们称该闭包从函数中逃逸。当你定义接受闭包作为参数的函数时，你可以在参数名之前标注&lt;code&gt;@noescape&lt;/code&gt;，用来指明这个闭包时不允许“逃逸”出这个函数的。将闭包标注&lt;code&gt;@noescape&lt;/code&gt;能使编译器知道这个闭包的生命周期（闭包只能在函数体中被执行，不能脱离函数体执行，所以编译器明确知道运行时的上下文），从而可以进行一些比较激进的优化。&lt;br&gt;&lt;code&gt;Array&lt;/code&gt;中提供的&lt;code&gt;sort(_:)&lt;/code&gt;方法接受一个用来进行元素比较的闭包作为函数，这个参数被标注了&lt;code&gt;@noescape&lt;/code&gt;，因为它确保自己在排序结束后就没用了。&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;someFunctionWithNoescapeClosure&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(@noescape closure: &lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    closure()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;someFunctionWithNoescapeClosure&lt;/code&gt;定义了一个传入非逃逸闭包的函数。&lt;br&gt;一种能使闭包“逃逸”出函数的方法是，将这个闭包保存在一个函数外部定义的变量中。比如，很多启动异步操作的函数接受一个闭包参数作为completion handler。这类函数会在异步操作开始之后立即返回，但是闭包直到异步操作结束后才会被调用。在这种情况下，闭包需要“逃逸”出函数，因为闭包需要在函数返回之后被调用。例如：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; completionHandlers:[() -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;] = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;someFunctionWithEscapingClosure&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(completionHandler:&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-&amp;gt;&lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt;) -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    completionHandlers.append(completionHandler)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;someFunctionWithEscapingClosure(_:)&lt;/code&gt;函数接受一个闭包作为参数，该闭包被添加到一个函数外定义的数组中。如果你试图将这个参数标注为&lt;code&gt;@noescape&lt;/code&gt;将会得到一个编译错误。&lt;br&gt;将闭包标注为&lt;code&gt;@noescape&lt;/code&gt;使你能在闭包中隐式地引用&lt;code&gt;self&lt;/code&gt;。&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ExClass&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; x = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;doSomething&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;Void&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        someFunctionWithEscapingClosure(&amp;#123;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.x = &lt;span class=&quot;number&quot;&gt;120&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        someFunctionWithEscapingClosure(&amp;#123;&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;.x = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        someFunctionWithNoescapeClosure(&amp;#123;x = &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; instance = &lt;span class=&quot;type&quot;&gt;ExClass&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;instance.doSomething()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(instance.x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;completionHandlers.first?()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(instance.x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;completionHandlers.last?()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(instance.x)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;一般来说，在学习一个新的东西前我们都需要先了解这个东西的定义。在Swift中的闭包是什么呢？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;闭包是自包含的函数代码块，可以在代码中被传递和使用。Swift中的闭包与C和objc中的代码块(blocks)以及其它一些语言中的匿名函数比较相似。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;闭包可以捕获和存储其所在上下文中任意常量和变量的引用。这就是所谓的闭合并包裹着这些常量和变量，俗称闭包。Swift 会为您管理在捕获过程中涉及到的所有内存操作。&lt;/p&gt;
    
    </summary>
    
      <category term="Swift学习笔记" scheme="http://www.jvaeyhcd.cc/categories/Swift%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Swift" scheme="http://www.jvaeyhcd.cc/tags/Swift/"/>
    
      <category term="闭包" scheme="http://www.jvaeyhcd.cc/tags/%E9%97%AD%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>Swift学习笔记之函数</title>
    <link href="http://www.jvaeyhcd.cc/2016/05/31/Swift%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%E4%B9%8B%E5%87%BD%E6%95%B0/"/>
    <id>http://www.jvaeyhcd.cc/2016/05/31/Swift学习笔记之函数/</id>
    <published>2016-05-31T10:19:17.000Z</published>
    <updated>2016-06-17T09:27:30.000Z</updated>
    
    <content type="html">&lt;p&gt;函数是用来完成特定任务的独立代码块，你给一个个函数起一个合适的名字，用来标识该函数做什么，并且当函数需要执行的时候，这个名字会被用于“调用”函数。&lt;/p&gt;
&lt;p&gt;Swift统一的函数语法足够灵活，可以用来表示任何函数，包括从最简单的没有参数名字的C风格函数，到复杂带局部和外部参数名的Objective-C风格函数。参数可以提供默认值，以简化函数调用。参数也可以即当传入参数，也当传出参数。也就是说函数也是第一等公民，和常亮、变量一样。&lt;/p&gt;
&lt;p&gt;在Swiftl中，每一个函数都有一种类型，包括函数的参数值类型和返回值类型。你可以把函数类型当做其他不同类型变量一样处理，这样就可以更简单地把函数当做别的函数参数，也可以从其他函数中返回函数。函数的定义可以卸载其他函数定义中，这样可以在嵌套函数范围内实现功能封装。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;函数的定义与调用&quot;&gt;&lt;a href=&quot;#函数的定义与调用&quot; class=&quot;headerlink&quot; title=&quot;函数的定义与调用&quot;&gt;&lt;/a&gt;函数的定义与调用&lt;/h2&gt;&lt;p&gt;当你定义一个函数时，你可以定义一个或多个有名字和类型的值，作为函数的输入（称为参数），也可以定义某种类型的值作为函数执行结束的输出（称为返回类型）。&lt;/p&gt;
&lt;p&gt;每个函数有个函数名，用来描述函数执行的任务，要使用一个函数时，你用函数名“调用”，并传给它匹配的输入值（称作实参）。一个函数的实参必须与函数表里的顺序一致。&lt;/p&gt;
&lt;p&gt;下面有个例子函数叫做&lt;code&gt;sayHello(_:)&lt;/code&gt;,之所以叫这个名字，是因为这个函数用一个人的名字当做输入，并返回给这个人的问候语。为了完成这个任务，你定义一个输入参数，一个叫做&lt;code&gt;personName&lt;/code&gt;的&lt;code&gt;String&lt;/code&gt;值，和一个包含给这个人的问候语的&lt;code&gt;String&lt;/code&gt;类型的返回值。&lt;/p&gt;
&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(personName: String)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;let&lt;/span&gt; greeting = &lt;span class=&quot;string&quot;&gt;&quot;Hello, &quot;&lt;/span&gt; + personName + &lt;span class=&quot;string&quot;&gt;&quot;!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; greeting&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;所有这些信息汇总起来成为函数的定义，并以&lt;code&gt;func&lt;/code&gt;作为前缀。指定函数返回类型时，用返回箭头&lt;code&gt;-&amp;gt;&lt;/code&gt;后跟返回类型的名称的方式来表示。&lt;/p&gt;
&lt;p&gt;该定义描述了函数做什么，它期望接受什么和执行结束时它返回的结果类型是什么，这样的定义使得函数可以在别的地方以一种清晰的方式被调用：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(sayHello(&lt;span class=&quot;string&quot;&gt;&quot;Anna&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// prints &quot;Hello, Anna!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(sayHello(&lt;span class=&quot;string&quot;&gt;&quot;Brian&quot;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// prints &quot;Hello, Brian!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;函数参数和返回值&quot;&gt;&lt;a href=&quot;#函数参数和返回值&quot; class=&quot;headerlink&quot; title=&quot;函数参数和返回值&quot;&gt;&lt;/a&gt;函数参数和返回值&lt;/h3&gt;&lt;p&gt;函数参数与返回值在Swift中极为灵活，你可以定义任何类型的函数，包括从只带一个未名参数的简单函数到复杂的带有表达性参数名和不同参数选项的复杂函数。&lt;/p&gt;
&lt;h3 id=&quot;无参函数&quot;&gt;&lt;a href=&quot;#无参函数&quot; class=&quot;headerlink&quot; title=&quot;无参函数&quot;&gt;&lt;/a&gt;无参函数&lt;/h3&gt;&lt;p&gt;函数可以没有参数。下面这个函数就是一个无参函数，当被调用时，它返回固定的 &lt;code&gt;String&lt;/code&gt; 消息：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sayHelloWorld&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;hello, world&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(sayHelloWorld())&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// prints &quot;hello, world&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;尽管这个函数没有参数，但是定义中在函数名后还是需要一对圆括号。当被调用时，也需要在函数名后写一对圆括号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;多参函数&quot;&gt;&lt;a href=&quot;#多参函数&quot; class=&quot;headerlink&quot; title=&quot;多参函数&quot;&gt;&lt;/a&gt;多参函数&lt;/h3&gt;&lt;p&gt;函数可以有多种输入参数，这些参数被包含在函数的括号之中，以逗号分隔。&lt;br&gt;这个函数用一个人名和是否已经打过招呼作为输入，并返回对这个人的适当问候语:&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sayHello&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(personName: String, alreadyGreeted: Bool)&lt;/span&gt;&lt;/span&gt; -&amp;gt; &lt;span class=&quot;type&quot;&gt;String&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; alreadyGreeted &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sayHelloAgain(personName)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sayHello(personName)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(sayHello(&lt;span class=&quot;string&quot;&gt;&quot;Tim&quot;&lt;/span&gt;, alreadyGreeted: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// prints &quot;Hello again, Tim!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;无返回值函数&quot;&gt;&lt;a href=&quot;#无返回值函数&quot; class=&quot;headerlink&quot; title=&quot;无返回值函数&quot;&gt;&lt;/a&gt;无返回值函数&lt;/h3&gt;&lt;p&gt;函数可以没有返回值。下面是&lt;code&gt;sayHello(_:)&lt;/code&gt;函数的另一个版本，叫&lt;code&gt;sayGoodbye(_:)&lt;/code&gt;，这个函数直接输出&lt;code&gt;String&lt;/code&gt;值，而不是返回它：&lt;br&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;func&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;sayGoodbye&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(personName: String)&lt;/span&gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;print&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Goodbye, &lt;span class=&quot;subst&quot;&gt;\(personName)&lt;/span&gt;!&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sayGoodbye(&lt;span class=&quot;string&quot;&gt;&quot;Dave&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// prints &quot;Goodbye, Dave!&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因为这个函数不需要返回值，所以这个函数的定义中没有返回箭头&lt;code&gt;-&amp;gt;&lt;/code&gt;和返回类型。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;注：严格上来说，虽然没有返回值被定义，&lt;code&gt;sayGoodbye(_:)&lt;/code&gt;函数依然返回了值。没有定义返回类型的函数会返回特殊的值，叫做&lt;code&gt;Void&lt;/code&gt;。它是一个空的元组，没有任何元素，可以写成&lt;code&gt;()&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;函数是用来完成特定任务的独立代码块，你给一个个函数起一个合适的名字，用来标识该函数做什么，并且当函数需要执行的时候，这个名字会被用于“调用”函数。&lt;/p&gt;
&lt;p&gt;Swift统一的函数语法足够灵活，可以用来表示任何函数，包括从最简单的没有参数名字的C风格函数，到复杂带局部和外部参数名的Objective-C风格函数。参数可以提供默认值，以简化函数调用。参数也可以即当传入参数，也当传出参数。也就是说函数也是第一等公民，和常亮、变量一样。&lt;/p&gt;
&lt;p&gt;在Swiftl中，每一个函数都有一种类型，包括函数的参数值类型和返回值类型。你可以把函数类型当做其他不同类型变量一样处理，这样就可以更简单地把函数当做别的函数参数，也可以从其他函数中返回函数。函数的定义可以卸载其他函数定义中，这样可以在嵌套函数范围内实现功能封装。&lt;/p&gt;
    
    </summary>
    
      <category term="Swift学习笔记" scheme="http://www.jvaeyhcd.cc/categories/Swift%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Swift" scheme="http://www.jvaeyhcd.cc/tags/Swift/"/>
    
  </entry>
  
  <entry>
    <title>初识ReactiveCocoa响应式编程</title>
    <link href="http://www.jvaeyhcd.cc/2016/05/24/%E5%88%9D%E8%AF%86ReactiveCocoa%E5%93%8D%E5%BA%94%E5%BC%8F%E7%BC%96%E7%A8%8B/"/>
    <id>http://www.jvaeyhcd.cc/2016/05/24/初识ReactiveCocoa响应式编程/</id>
    <published>2016-05-24T05:02:01.000Z</published>
    <updated>2016-05-24T05:45:09.000Z</updated>
    
    <content type="html">&lt;p&gt;参考文章&lt;br&gt;&lt;a href=&quot;http://www.itiger.me/?p=38&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用ReactiveCocoa实现iOS平台响应式编程&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://limboy.me/ios/2013/06/19/frp-reactivecocoa.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactiveCocoa与Functional Reactive Programming&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/87ef6720a096&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;最快让你上手ReactiveCocoa之基础篇&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.infoq.com/cn/news/2014/07/reactiveCocoa-cocoa&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;花瓣网李忠：ReactiveCocoa是Cocoa的未来&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://blog.devtang.com/2016/01/03/reactive-cocoa-discussion/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ReactiveCocoa 讨论会&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;参考文章&lt;br&gt;&lt;a href=&quot;http://www.itiger.me/?p=38&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用ReactiveCocoa实现iOS平台响应式编程&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://limboy.me/
    
    </summary>
    
    
      <category term="ReactiveCocoa" scheme="http://www.jvaeyhcd.cc/tags/ReactiveCocoa/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins+Cocoapods+Coding+Git+Fir iOS项目持续集成</title>
    <link href="http://www.jvaeyhcd.cc/2016/05/21/%E4%BD%BF%E7%94%A8Jenkins%E6%9E%84%E5%BB%BAiOS%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/"/>
    <id>http://www.jvaeyhcd.cc/2016/05/21/使用Jenkins构建iOS持续集成自动打包/</id>
    <published>2016-05-21T07:48:50.000Z</published>
    <updated>2016-08-05T02:39:15.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;持续集成是一种软件开发实践，即团队开发成员经常集成它们的工作，通过每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;为什么使用持续集成&quot;&gt;&lt;a href=&quot;#为什么使用持续集成&quot; class=&quot;headerlink&quot; title=&quot;为什么使用持续集成&quot;&gt;&lt;/a&gt;为什么使用持续集成&lt;/h3&gt;&lt;p&gt;1、减少重复繁琐的打包过程&lt;br&gt;2、任何时间、任何地点测试都可以获取到新包&lt;br&gt;3、增强项目的可见性&lt;/p&gt;
&lt;p&gt;做持续集成对我们开发者来说是一件一劳永益的事情，对于发包这个问题，相信是每个程序员GG心中挥之不去的痛，而测试MM们也在每次马上就发出来的承诺中得出一个结论就是“你是个大骗子”。&lt;/p&gt;
&lt;p&gt;所以每次被测试MM追着要包，产品经理说给我装一个新包瞧瞧呗，后台GG说给我装一个老版本调试一下啊。。。这个时候我们的内心是奔溃的，然后我们不得不暂停手下的工作，切换到某个版本，Archive。。。其实对于打包发包这种事情根本就不是开发需要做的，因为这是一个简单没有技术含量且浪费时间的工作。时间就是金钱，所以为了不再浪费我们开发宝贵的时间，自动化构建这件事情必须得提上日程了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;常见的持续集成工具&quot;&gt;&lt;a href=&quot;#常见的持续集成工具&quot; class=&quot;headerlink&quot; title=&quot;常见的持续集成工具&quot;&gt;&lt;/a&gt;常见的持续集成工具&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jenkins-ci.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jenkins CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://travis-ci.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Travis CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hudson-ci.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hudson CI&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://circleci.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Circle CI&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;持续集成的工具有很多，不过最好用的还是Jenkins，Travis能够对Github上的开源项目做很好的集成，考虑到Jenkins的稳定性，我们还是选择Jenkins来开始我的iOS持续集成。&lt;/p&gt;
&lt;h3 id=&quot;工程结构&quot;&gt;&lt;a href=&quot;#工程结构&quot; class=&quot;headerlink&quot; title=&quot;工程结构&quot;&gt;&lt;/a&gt;工程结构&lt;/h3&gt;&lt;p&gt;本事例项目工程代码存放在coding，使用Cocoapods管理第三方库，存在在coding上的项目目录结构如下：&lt;br&gt;&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/coding.png&quot; alt=&quot;目录结构图&quot; title=&quot;目录结构图&quot;&gt;&lt;br&gt;由于cocoapods文件过多，所以没有必要上传到git仓库中，只用将Podfile文件传上去即可。&lt;/p&gt;
&lt;h3 id=&quot;Jenkins的安装&quot;&gt;&lt;a href=&quot;#Jenkins的安装&quot; class=&quot;headerlink&quot; title=&quot;Jenkins的安装&quot;&gt;&lt;/a&gt;Jenkins的安装&lt;/h3&gt;&lt;p&gt;由于Jenkins是Java开发的，所以首先我们需要先安装好Java环境，然后去Jenkins的&lt;a href=&quot;http://jenkins-ci.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;下载最新的war包。下载完成后，打开终端，进入到war包所在目录，执行以下命令：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;java -jar jenkins.war --httpPort=&lt;span class=&quot;number&quot;&gt;8888&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;httpPort指的就是Jenkins所使用的http端口，这里指定8888，可根据具体情况来修改。待Jenkins启动后，在浏览器页面输入以下地址:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;http://localhost:&lt;span class=&quot;number&quot;&gt;8888&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样就可以打开Jenkins页面了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;--httpPort=8888&lt;/code&gt;可以不输入，不输入默认端口号为8080&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;打开链接后，先要设置一些安装信息，这里就不再啰嗦，因为十分简单，接下来我们来看安装成功后的相关配置。&lt;/p&gt;
&lt;h3 id=&quot;Jenkins的配置&quot;&gt;&lt;a href=&quot;#Jenkins的配置&quot; class=&quot;headerlink&quot; title=&quot;Jenkins的配置&quot;&gt;&lt;/a&gt;Jenkins的配置&lt;/h3&gt;&lt;p&gt;到Jenkins页面，Jenkins－系统管理－插件管理－可选插件中，安装一下插件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GIT plugin&lt;/li&gt;
&lt;li&gt;Git client plugin&lt;/li&gt;
&lt;li&gt;Xcode integration&lt;/li&gt;
&lt;li&gt;CocoaPods Jenkins Integration&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;Git私有仓库配置&quot;&gt;&lt;a href=&quot;#Git私有仓库配置&quot; class=&quot;headerlink&quot; title=&quot;Git私有仓库配置&quot;&gt;&lt;/a&gt;Git私有仓库配置&lt;/h4&gt;&lt;p&gt;按照如下方式添加SSH，因为项目代码是存放在coding上的所以，这个关于生成SSH可以以Coding为例：&lt;a href=&quot;https://coding.net/help/doc/git/ssh-key.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://coding.net/help/doc/git/ssh-key.html&lt;/a&gt;&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/ssh_username_private_key.png&quot; alt=&quot;SSH 秘钥配置&quot; title=&quot;SSH 秘钥配置&quot;&gt;
&lt;h4 id=&quot;创建Job&quot;&gt;&lt;a href=&quot;#创建Job&quot; class=&quot;headerlink&quot; title=&quot;创建Job&quot;&gt;&lt;/a&gt;创建Job&lt;/h4&gt;&lt;p&gt;这里的步骤我准备全部一图片的形式展示出来。&lt;/p&gt;
&lt;p&gt;点击“Jenkins”－“新建”：&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/new_job.png&quot; alt=&quot;创建Job&quot; title=&quot;创建Job&quot;&gt;
&lt;h4 id=&quot;源码管理&quot;&gt;&lt;a href=&quot;#源码管理&quot; class=&quot;headerlink&quot; title=&quot;源码管理&quot;&gt;&lt;/a&gt;源码管理&lt;/h4&gt;&lt;p&gt;选择刚刚创建的项目，点击“配置”：&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/set_code_source.png&quot; alt=&quot;设置源码地址&quot; title=&quot;设置源码地址&quot;&gt;
&lt;p&gt;这里最好使用SSH，这个工程是私有项目，如果出现错误肯定是由你自己配置错误造成的。&lt;/p&gt;
&lt;h4 id=&quot;构建步骤设置&quot;&gt;&lt;a href=&quot;#构建步骤设置&quot; class=&quot;headerlink&quot; title=&quot;构建步骤设置&quot;&gt;&lt;/a&gt;构建步骤设置&lt;/h4&gt;&lt;p&gt;选择构建步骤，记得添加Xcode插件，选择添加Execute Shell和Xcode，有先后顺序。&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/execte_config.png&quot; alt=&quot;添加构建步骤&quot; title=&quot;添加构建步骤&quot;&gt;
&lt;p&gt;设置Execute Shell&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/execute_shell.png&quot; alt=&quot;Execute Shell&quot; title=&quot;Execute Shell&quot;&gt;
&lt;h4 id=&quot;Xcode-General-build-settings&quot;&gt;&lt;a href=&quot;#Xcode-General-build-settings&quot; class=&quot;headerlink&quot; title=&quot;Xcode General build settings&quot;&gt;&lt;/a&gt;Xcode General build settings&lt;/h4&gt;&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/xcode_general_build_settings.png&quot; alt=&quot;General build settings&quot; title=&quot;General build settings&quot;&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/code_signing_OS_X_keychain_options.png&quot; alt=&quot;Code signing &amp; OS X keychain options&quot; title=&quot;Code signing &amp; OS X keychain options&quot;&gt;
&lt;p&gt;Keychain path填写&lt;code&gt;${HOME}/Library/Keychains/login.keychain&lt;/code&gt;&lt;br&gt;Keychain password对应的密码可以在钥匙串中查看：&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/keychain.png&quot; alt=&quot;Code signing &amp; OS X keychain password查看方法&quot; title=&quot;Code signing &amp; OS X keychain password查看方法&quot;&gt;
&lt;h4 id=&quot;Advanced-Xcode-build-options&quot;&gt;&lt;a href=&quot;#Advanced-Xcode-build-options&quot; class=&quot;headerlink&quot; title=&quot;Advanced Xcode build options&quot;&gt;&lt;/a&gt;Advanced Xcode build options&lt;/h4&gt;&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/xcode_build_options.png&quot; alt=&quot;Advanced Xcode build options&quot; title=&quot;Advanced Xcode build options&quot;&gt;
&lt;h3 id=&quot;fir-im-Jenkins-插件安装&quot;&gt;&lt;a href=&quot;#fir-im-Jenkins-插件安装&quot; class=&quot;headerlink&quot; title=&quot;fir.im Jenkins 插件安装&quot;&gt;&lt;/a&gt;fir.im Jenkins 插件安装&lt;/h3&gt;&lt;p&gt;上面的构建配置好了后，如果顺利的话就已经能够编译出ipa文件了，但是编译出来的ipa只能放在本地，不能给大家安装，所以编译完成后我们还需要将ipa文件上传到fir.im。&lt;br&gt;fir插件的安装方法详情请移步：&lt;a href=&quot;http://blog.fir.im/jenkins/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《fir.im Jenkins 插件使用方法》&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;构建后上传到fir-im&quot;&gt;&lt;a href=&quot;#构建后上传到fir-im&quot; class=&quot;headerlink&quot; title=&quot;构建后上传到fir.im&quot;&gt;&lt;/a&gt;构建后上传到fir.im&lt;/h3&gt;&lt;p&gt;安装好fir插件后在“构建后操作”中点击“添加构建后操作步骤”，可以看到：&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/upload_fir.png&quot; alt=&quot;添加构建后上传fir步骤&quot; title=&quot;添加构建后上传fir步骤&quot;&gt;
&lt;p&gt;点击“upload to fir.im”，然后会出现如下界面：&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/set_upload_fir.png&quot; alt=&quot;设置fir.im的Token&quot; title=&quot;设置fir.im的Token&quot;&gt;
&lt;p&gt;Fir.im的Token获取地址：&lt;a href=&quot;http://fir.im/apps/apitoken&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://fir.im/apps/apitoken&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;手动构建&quot;&gt;&lt;a href=&quot;#手动构建&quot; class=&quot;headerlink&quot; title=&quot;手动构建&quot;&gt;&lt;/a&gt;手动构建&lt;/h3&gt;&lt;p&gt;选中你要构建的项目，然后点击“立即构建”&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/shoudong_goujian.png&quot; alt=&quot;手动构建&quot; title=&quot;手动构建&quot;&gt;
&lt;p&gt;选择正在构建的Build，然后点击“Console Output”可以查看build过程中打印的一些信息，如果遇到什么报错信息都可以在这里面查看。&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/build_message.png&quot; alt=&quot;控制台输出&quot; title=&quot;控制台输出&quot;&gt;
&lt;h3 id=&quot;自动构建设置&quot;&gt;&lt;a href=&quot;#自动构建设置&quot; class=&quot;headerlink&quot; title=&quot;自动构建设置&quot;&gt;&lt;/a&gt;自动构建设置&lt;/h3&gt;&lt;p&gt;构建触发器有一下几种触发方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;触发远程构建 (例如,使用脚本)&lt;/li&gt;
&lt;li&gt;Build after other projects are built&lt;/li&gt;
&lt;li&gt;Build periodically&lt;/li&gt;
&lt;li&gt;Poll SCM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里我只用到了Build periodically&lt;/p&gt;
&lt;img src=&quot;/2016/05/21/使用Jenkins构建iOS持续集成自动打包/zidong_goujian.png&quot; alt=&quot;Build periodically触发自动构建&quot; title=&quot;Build periodically触发自动构建&quot;&gt;
&lt;h3 id=&quot;总结&quot;&gt;&lt;a href=&quot;#总结&quot; class=&quot;headerlink&quot; title=&quot;总结&quot;&gt;&lt;/a&gt;总结&lt;/h3&gt;&lt;p&gt;为了搭建这个Jenkins我看了很多博客，不过大多比较难懂，一直都没有成功，经过各种尝试后最终搭建成功，我在此将整个过程记录下来，以来是对自己知识的一个积累，二来如果能够给将要搭建Jenkins的iOS持续集成的朋友们一点帮助也是极好的。&lt;/p&gt;
&lt;p&gt;参考文档：&lt;br&gt;&lt;a href=&quot;http://www.jianshu.com/p/c69deb29720d#&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;一步一步构建iOS持续集成:Jenkins+GitLab+蒲公英+FTP&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://rannie.github.io/ios/2014/12/29/xcodebuild-jenkins-ci.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用 Xcodebuild + Jenkins + Apache 做 iOS 持续集成&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;持续集成是一种软件开发实践，即团队开发成员经常集成它们的工作，通过每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试）来验证，从而尽早地发现集成错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;为什么使用持续集成&quot;&gt;&lt;a href=&quot;#为什么使用持续集成&quot; class=&quot;headerlink&quot; title=&quot;为什么使用持续集成&quot;&gt;&lt;/a&gt;为什么使用持续集成&lt;/h3&gt;&lt;p&gt;1、减少重复繁琐的打包过程&lt;br&gt;2、任何时间、任何地点测试都可以获取到新包&lt;br&gt;3、增强项目的可见性&lt;/p&gt;
&lt;p&gt;做持续集成对我们开发者来说是一件一劳永益的事情，对于发包这个问题，相信是每个程序员GG心中挥之不去的痛，而测试MM们也在每次马上就发出来的承诺中得出一个结论就是“你是个大骗子”。&lt;/p&gt;
&lt;p&gt;所以每次被测试MM追着要包，产品经理说给我装一个新包瞧瞧呗，后台GG说给我装一个老版本调试一下啊。。。这个时候我们的内心是奔溃的，然后我们不得不暂停手下的工作，切换到某个版本，Archive。。。其实对于打包发包这种事情根本就不是开发需要做的，因为这是一个简单没有技术含量且浪费时间的工作。时间就是金钱，所以为了不再浪费我们开发宝贵的时间，自动化构建这件事情必须得提上日程了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Jenkins" scheme="http://www.jvaeyhcd.cc/tags/Jenkins/"/>
    
  </entry>
  
  <entry>
    <title>关闭iOS系统自动更新提示的方法</title>
    <link href="http://www.jvaeyhcd.cc/2016/05/16/%E5%85%B3%E9%97%ADiOS%E7%B3%BB%E7%BB%9F%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0%E6%8F%90%E7%A4%BA%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://www.jvaeyhcd.cc/2016/05/16/关闭iOS系统自动更新提示的方法/</id>
    <published>2016-05-16T02:16:25.000Z</published>
    <updated>2016-06-02T03:47:39.000Z</updated>
    
    <content type="html">&lt;p&gt;一直以来都被iOS的自动更新困扰，每次苹果推出了最新版本的iOS系统都会提示自动更新，真的很烦。并且公司的测试机不可能全都是一个版本的系统，不然很多不同iOS版本系统的bug根本无法测出来，所以为了保持测试机系统的多样性，我想保持一部分手机系统永不更新，让我自己的手机保持最新系统就行了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h2&gt;&lt;p&gt;经过一段时间的试验，有如下几个对应方案：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;设置 - 通用 - 用量 - 管理存储空间 - 找到更新包，然后删除它&lt;/li&gt;
&lt;li&gt;设置 - iTunes&amp;amp;App Stores, 找到Updates，关闭&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果以上两个方案还不管用，直接放大招：&lt;br&gt;在手机上打开safari，地址栏输入:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;https://oldcat.me/web/NOOTA9.mobileconfig&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后回车&lt;br&gt;按照要求安装此provision文件即可，然后重启。&lt;/p&gt;
&lt;img src=&quot;/2016/05/16/关闭iOS系统自动更新提示的方法/thumb_IMG_0889_1024.jpg&quot; alt=&quot;安装provision文件&quot; title=&quot;安装provision文件&quot;&gt;
&lt;p&gt;重启后打开设置 - 通用 - 软件更新 有惊喜&lt;/p&gt;
&lt;img src=&quot;/2016/05/16/关闭iOS系统自动更新提示的方法/thumb_IMG_0890_1024.jpg&quot; alt=&quot;结果图&quot; title=&quot;结果图&quot;&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一直以来都被iOS的自动更新困扰，每次苹果推出了最新版本的iOS系统都会提示自动更新，真的很烦。并且公司的测试机不可能全都是一个版本的系统，不然很多不同iOS版本系统的bug根本无法测出来，所以为了保持测试机系统的多样性，我想保持一部分手机系统永不更新，让我自己的手机保持最新系统就行了。&lt;/p&gt;
    
    </summary>
    
      <category term="其他" scheme="http://www.jvaeyhcd.cc/categories/%E5%85%B6%E4%BB%96/"/>
    
    
      <category term="iOS系统" scheme="http://www.jvaeyhcd.cc/tags/iOS%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>objc过滤NSString中的HTML标签</title>
    <link href="http://www.jvaeyhcd.cc/2016/05/04/Objective-C%E8%BF%87%E6%BB%A4NSString%E4%B8%AD%E7%9A%84HTML%E6%A0%87%E7%AD%BE/"/>
    <id>http://www.jvaeyhcd.cc/2016/05/04/Objective-C过滤NSString中的HTML标签/</id>
    <published>2016-05-04T03:17:29.000Z</published>
    <updated>2016-06-02T03:57:38.000Z</updated>
    
    <content type="html">&lt;p&gt;开发过程中常常会遇到这样一个情况：对于后台编辑的一些文本都是使用富文本的形式进行编辑的，我们在使用接口区请求数据的时候，请求到的数据是带HTML标签的富文本形式，但是我们前台是使用UIlabel去显示的，这个时候就需要去掉NSString的HTML标签。&lt;/p&gt;
&lt;h2 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h2&gt;&lt;p&gt;对于这种常用的一些方法，我们一般会创建一个NSString的Category去实现。关于去掉NSString中HTML标签的实现方法我在网上找到了两种实现方式：&lt;/p&gt;
&lt;h3 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h3&gt;&lt;p&gt;用NSScanner扫描来处理&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;NSString+Jvaeyhcd.h&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#import &lt;span class=&quot;title&quot;&gt;&amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSString&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;Jvaeyhcd&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)removeHTML;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;NSString+Jvaeyhcd.m&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)removeHTML &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSScanner&lt;/span&gt; *theScanner;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *text = &lt;span class=&quot;literal&quot;&gt;nil&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    theScanner = [&lt;span class=&quot;built_in&quot;&gt;NSScanner&lt;/span&gt; scannerWithString:&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; ([theScanner isAtEnd] == &lt;span class=&quot;literal&quot;&gt;NO&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// find start of tag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [theScanner scanUpToString:&lt;span class=&quot;string&quot;&gt;@&quot;&amp;lt;&quot;&lt;/span&gt; intoString:&lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// find end of tag&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [theScanner scanUpToString:&lt;span class=&quot;string&quot;&gt;@&quot;&amp;gt;&quot;&lt;/span&gt; intoString:&amp;amp;text] ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;// replace the found tag with a space&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//(you can filter multi-spaces out later if you wish)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; stringByReplacingOccurrencesOfString:[&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; stringWithFormat:&lt;span class=&quot;string&quot;&gt;@&quot;%@&amp;gt;&quot;&lt;/span&gt;, text] withString:&lt;span class=&quot;string&quot;&gt;@&quot; &quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;方法二&quot;&gt;&lt;a href=&quot;#方法二&quot; class=&quot;headerlink&quot; title=&quot;方法二&quot;&gt;&lt;/a&gt;方法二&lt;/h3&gt;&lt;p&gt;用NSString自带的Seprated自截断方法&lt;/p&gt;
&lt;p&gt;NSString+Jvaeyhcd.h&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#import &lt;span class=&quot;title&quot;&gt;&amp;lt;Foundation/Foundation.h&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;NSString&lt;/span&gt; (&lt;span class=&quot;title&quot;&gt;Jvaeyhcd&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)removeHTML2;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;@end&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;NSString+Jvaeyhcd.m&lt;br&gt;&lt;figure class=&quot;highlight objc&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- (&lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *)removeHTML2 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSArray&lt;/span&gt; *components = [&lt;span class=&quot;keyword&quot;&gt;self&lt;/span&gt; componentsSeparatedByCharactersInSet:[&lt;span class=&quot;built_in&quot;&gt;NSCharacterSet&lt;/span&gt; characterSetWithCharactersInString:&lt;span class=&quot;string&quot;&gt;@&quot;&amp;lt;&amp;gt;&quot;&lt;/span&gt;]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; *componentsToKeep = [&lt;span class=&quot;built_in&quot;&gt;NSMutableArray&lt;/span&gt; array];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; [components count]; i = i + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [componentsToKeep addObject:[components objectAtIndex:i]];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;NSString&lt;/span&gt; *plainText = [componentsToKeep componentsJoinedByString:&lt;span class=&quot;string&quot;&gt;@&quot;&quot;&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; plainText;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;开发过程中常常会遇到这样一个情况：对于后台编辑的一些文本都是使用富文本的形式进行编辑的，我们在使用接口区请求数据的时候，请求到的数据是带HTML标签的富文本形式，但是我们前台是使用UIlabel去显示的，这个时候就需要去掉NSString的HTML标签。&lt;/p&gt;
&lt;h2 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h2&gt;&lt;p&gt;对于这种常用的一些方法，我们一般会创建一个NSString的Category去实现。关于去掉NSString中HTML标签的实现方法我在网上找到了两种实现方式：&lt;/p&gt;
&lt;h3 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h3&gt;&lt;p&gt;用NSScanner扫描来处理&lt;/p&gt;
    
    </summary>
    
    
      <category term="objc" scheme="http://www.jvaeyhcd.cc/tags/objc/"/>
    
  </entry>
  
</feed>
