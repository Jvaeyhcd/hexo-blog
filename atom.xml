<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Salvador</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-02-20T08:30:58.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Salvador</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hexo安装新主题apollo</title>
    <link href="http://yoursite.com/2016/02/20/Hexo%E5%AE%89%E8%A3%85%E6%96%B0%E4%B8%BB%E9%A2%98apollo/"/>
    <id>http://yoursite.com/2016/02/20/Hexo安装新主题apollo/</id>
    <published>2016-02-20T08:15:35.000Z</published>
    <updated>2016-02-20T08:30:58.000Z</updated>
    
    <content type="html">&lt;p&gt;Hexo博客系统的流行原因，是因为他的个人性，而皮肤就是个人性的一种体现。Hexo换皮肤还是比较简单的,既可以自己根据默认的主题来修改，也可以到&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/themes/&lt;/a&gt;上去找主题。&lt;/p&gt;
&lt;p&gt;下面简单描述一下我安装apollo主题的过程。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;github上的文档给出了详细的安装命令&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init #blogname#&amp;#10;cd #blogname# &amp;#10;npm install&amp;#10;npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive&amp;#10;git clone https://github.com/pinggod/hexo-theme-apollo.git themes/apollo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;启用&quot;&gt;&lt;a href=&quot;#启用&quot; class=&quot;headerlink&quot; title=&quot;启用&quot;&gt;&lt;/a&gt;启用&lt;/h2&gt;&lt;p&gt;安装成功后就可以开始启用主题，主题的启用需要修改_config.yml 的 theme 配置项为 apollo：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Extensions &amp;#25554;&amp;#20214;&amp;#21644;&amp;#30382;&amp;#32932;&amp;#10;## Plugins: https://hexo.io/plugins/&amp;#10;## Themes: https://hexo.io/themes/&amp;#10;# theme: landscape&amp;#10;theme: apollo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;启动hexo后修改成功后的皮肤如图所示&lt;br&gt;&lt;img src=&quot;/2016/02/20/Hexo安装新主题apollo/apollo.png&quot; alt=&quot;hexo-theme-apollo&quot; title=&quot;hexo-theme-apollo&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo博客系统的流行原因，是因为他的个人性，而皮肤就是个人性的一种体现。Hexo换皮肤还是比较简单的,既可以自己根据默认的主题来修改，也可以到&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hexo在github上构建免费的博客</title>
    <link href="http://yoursite.com/2016/02/20/Hexo%E5%9C%A8github%E4%B8%8A%E6%9E%84%E5%BB%BA%E5%85%8D%E8%B4%B9%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2016/02/20/Hexo在github上构建免费的博客/</id>
    <published>2016-02-20T04:07:20.000Z</published>
    <updated>2016-02-20T08:05:21.000Z</updated>
    
    <content type="html">&lt;p&gt;很多次想搭建一个自己的博客，彻底从csdn上转移到自己的博客站点中，但是一直由于时间的原因耽搁了。之前也使用过Wordpress来搭建自己的博客，但是发现Wordpress使用起来不是太方便。后来再接触了markdown语法写文章后，喜欢上了markdown。再后来了解到了hexo，一个基于Node的博客框架，同样可以实现基于github的博客，而且更轻更快，更适合Node的开发程序员。&lt;/p&gt;
&lt;h2 id=&quot;1-Hexo介绍&quot;&gt;&lt;a href=&quot;#1-Hexo介绍&quot; class=&quot;headerlink&quot; title=&quot;1.Hexo介绍&quot;&gt;&lt;/a&gt;1.Hexo介绍&lt;/h2&gt;&lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Markdown&lt;/a&gt;（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;h2 id=&quot;2-Hexo安装&quot;&gt;&lt;a href=&quot;#2-Hexo安装&quot; class=&quot;headerlink&quot; title=&quot;2.Hexo安装&quot;&gt;&lt;/a&gt;2.Hexo安装&lt;/h2&gt;&lt;p&gt;安装 Hexo 相当简单。然而在安装前，您必须检查电脑中是否已安装下列应用程序：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://nodejs.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://git-scm.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果您的电脑中已经安装上述必备程序，那么恭喜您！接下来只需要使用 npm 即可完成 Hexo 的安装。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果您的电脑中尚未安装所需要的程序，请根据以下安装指示完成安装。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Mac用户在编译时可能会遇到问题，请先到 App Store 安装 Xcode，Xcode 完成后，启动并进入 Preferences -&amp;gt; Download -&amp;gt; Command Line Tools -&amp;gt; Install 安装命令行工具。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;安装-Git&quot;&gt;&lt;a href=&quot;#安装-Git&quot; class=&quot;headerlink&quot; title=&quot;安装 Git&quot;&gt;&lt;/a&gt;安装 Git&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;Windows：下载并安装 &lt;a href=&quot;https://git-scm.com/download/win&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mac：使用 &lt;a href=&quot;http://brew.sh/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Homebrew&lt;/a&gt;, &lt;a href=&quot;http://www.macports.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MacPorts&lt;/a&gt; 或下载 安装程序 安装。&lt;/li&gt;
&lt;li&gt;Linux (Ubuntu, Debian)：sudo apt-get install git-core&lt;/li&gt;
&lt;li&gt;Linux (Fedora, Red Hat, CentOS)：sudo yum install git-core&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;安装-Node-js&quot;&gt;&lt;a href=&quot;#安装-Node-js&quot; class=&quot;headerlink&quot; title=&quot;安装 Node.js&quot;&gt;&lt;/a&gt;安装 Node.js&lt;/h4&gt;&lt;p&gt;安装 Node.js 的最佳方式是使用&lt;a href=&quot;https://github.com/creationix/nvm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nvm&lt;/a&gt;&lt;br&gt;cURL:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ curl https://raw.github.com/creationix/nvm/master/install.sh | sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Wget:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;安装完成后，重启终端并执行下列命令即可安装 Node.js。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;nvm install 5.0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;或者您也可以下载 &lt;a href=&quot;https://nodejs.org/en/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;安装程序&lt;/a&gt; 来安装。&lt;/p&gt;
&lt;h4 id=&quot;安装-Hexo&quot;&gt;&lt;a href=&quot;#安装-Hexo&quot; class=&quot;headerlink&quot; title=&quot;安装 Hexo&quot;&gt;&lt;/a&gt;安装 Hexo&lt;/h4&gt;&lt;p&gt;所有必备的应用程序安装完成后，即可使用 npm 安装 Hexo,Hexo安装，要用全局安装，加-g参数。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo-cli&amp;#10;$ npm install -g hexo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;查看hexo的版本&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo version&amp;#10;hexo-cli: 1.0.1&amp;#10;os: Darwin 15.3.0 darwin x64&amp;#10;http_parser: 2.5.0&amp;#10;node: 4.2.1&amp;#10;v8: 4.5.103.35&amp;#10;uv: 1.7.5&amp;#10;zlib: 1.2.8&amp;#10;ares: 1.10.1-DEV&amp;#10;icu: 56.1&amp;#10;modules: 46&amp;#10;openssl: 1.0.2d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;3-Hexo创建项目&quot;&gt;&lt;a href=&quot;#3-Hexo创建项目&quot; class=&quot;headerlink&quot; title=&quot;3.Hexo创建项目&quot;&gt;&lt;/a&gt;3.Hexo创建项目&lt;/h2&gt;&lt;p&gt;我的系统环境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mac OS X EI Capitan&lt;/li&gt;
&lt;li&gt;node v4.2.1&lt;/li&gt;
&lt;li&gt;npm 2.14.7&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;安装好后，我们就可以使用Hexo创建项目了。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;hexo init nodejs-hexo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;我们看到当前在目录下，出现了一个文件夹，包括初始化的文件。&lt;/p&gt;
&lt;p&gt;进入目录，并启动Hexo服务器。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# &amp;#36827;&amp;#20837;&amp;#30446;&amp;#24405;&amp;#10;$ cd nodejs-hexo&amp;#10;# &amp;#21551;&amp;#21160;hexo&amp;#26381;&amp;#21153;&amp;#22120;&amp;#10;$ hexo server&amp;#10;INFO  Hexo is running at http://0.0.0.0:4000/. Press Ctrl+C to stop.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这时端口4000被打开了，我们能过浏览器打开地址，&lt;a href=&quot;http://0.0.0.0:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://0.0.0.0:4000/&lt;/a&gt;&lt;br&gt;ps:Mac上的地址是&lt;a href=&quot;http://0.0.0.0:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://0.0.0.0:4000/&lt;/a&gt;， windows上的地址是&lt;a href=&quot;http://localhost:4000/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://localhost:4000/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;4-Hexo结构解析&quot;&gt;&lt;a href=&quot;#4-Hexo结构解析&quot; class=&quot;headerlink&quot; title=&quot;4.Hexo结构解析&quot;&gt;&lt;/a&gt;4.Hexo结构解析&lt;/h2&gt;&lt;p&gt;接下来，我们需要对Hexo做全面的了解，才能做出个性化的博客。&lt;/p&gt;
&lt;h4 id=&quot;4-1目录和文件&quot;&gt;&lt;a href=&quot;#4-1目录和文件&quot; class=&quot;headerlink&quot; title=&quot;4.1目录和文件&quot;&gt;&lt;/a&gt;4.1目录和文件&lt;/h4&gt;&lt;img src=&quot;/2016/02/20/Hexo在github上构建免费的博客/hexo-dict.png&quot; alt=&quot;Hexo目录结构示意图&quot; title=&quot;Hexo目录结构示意图&quot;&gt;
&lt;ul&gt;
&lt;li&gt;.deploy_git 发布到github上生成的静态文件夹&lt;/li&gt;
&lt;li&gt;node_modules mode的modules&lt;/li&gt;
&lt;li&gt;scaffolds 脚手架，也就是一个工具模板&lt;/li&gt;
&lt;li&gt;scripts 写文件的js，扩展hexo的功能&lt;/li&gt;
&lt;li&gt;source 存放博客正文内容&lt;/li&gt;
&lt;li&gt;source/_drafts 草稿箱&lt;/li&gt;
&lt;li&gt;source/_posts 文件箱&lt;/li&gt;
&lt;li&gt;themes 存放皮肤的目录&lt;/li&gt;
&lt;li&gt;themes/landscape 默认的皮肤&lt;/li&gt;
&lt;li&gt;_config.yml 全局的配置文件&lt;/li&gt;
&lt;li&gt;db.json 静态常量&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;_posts目录：我们每次创建的文章都放在了_posts目录下面，Hexo是一个静态博客框架，没有数据库，文章内容都是以文本文件的方式进行存储的，直接存储在_posts的目录。&lt;/p&gt;
&lt;p&gt;themes目录：是存放皮肤的，包括一套Javascript+CSS样式和基于EJS的模板设置。通过在themes目录下，新建一个子目录，就可以创建一套新的皮肤，当然我们也可以直接在landscape上面修改。&lt;/p&gt;
&lt;h4 id=&quot;4-2全局配置&quot;&gt;&lt;a href=&quot;#4-2全局配置&quot; class=&quot;headerlink&quot; title=&quot;4.2全局配置&quot;&gt;&lt;/a&gt;4.2全局配置&lt;/h4&gt;&lt;p&gt;_config.yml是全局的配置文件：很多的网站配置都在这个文件中定义。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;站点信息: 定义标题，作者，语言&lt;/li&gt;
&lt;li&gt;URL: URL访问路径&lt;/li&gt;
&lt;li&gt;文件目录: 正文的存储目录&lt;/li&gt;
&lt;li&gt;写博客配置：文章标题，文章类型，外部链接等&lt;/li&gt;
&lt;li&gt;目录和标签：默认分类，分类图，标签图&lt;/li&gt;
&lt;li&gt;归档设置：归档的类型&lt;/li&gt;
&lt;li&gt;服务器设置：IP，访问端口，日志输出&lt;/li&gt;
&lt;li&gt;时间和日期格式： 时间显示格式，日期显示格式&lt;/li&gt;
&lt;li&gt;分页设置：每页显示数量&lt;/li&gt;
&lt;li&gt;评论：外挂的Disqus评论系统&lt;/li&gt;
&lt;li&gt;插件和皮肤：换皮肤，安装插件&lt;/li&gt;
&lt;li&gt;Markdown语言：markdown的标准&lt;/li&gt;
&lt;li&gt;CSS的stylus格式：是否允许压缩&lt;/li&gt;
&lt;li&gt;部署配置：主要是github发布&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;附上我本地的_config.yml配置&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Hexo Configuration&amp;#10;## Docs: https://hexo.io/docs/configuration.html&amp;#10;## Source: https://github.com/hexojs/hexo/&amp;#10;&amp;#10;# Site &amp;#31449;&amp;#28857;&amp;#20449;&amp;#24687;&amp;#10;title: Salvador&amp;#10;subtitle:&amp;#10;description:&amp;#10;author: Salvador&amp;#10;language: en&amp;#10;timezone:&amp;#10;&amp;#10;# URL&amp;#10;## If your site is put in a subdirectory, set url as &amp;#39;http://yoursite.com/child&amp;#39; and root as &amp;#39;/child/&amp;#39;&amp;#10;url: http://yoursite.com&amp;#10;root: /&amp;#10;permalink: :year/:month/:day/:title/&amp;#10;permalink_defaults:&amp;#10;&amp;#10;# Directory &amp;#25991;&amp;#20214;&amp;#30446;&amp;#24405;&amp;#10;source_dir: source&amp;#10;public_dir: public&amp;#10;tag_dir: tags&amp;#10;archive_dir: archives&amp;#10;category_dir: categories&amp;#10;code_dir: downloads/code&amp;#10;i18n_dir: :lang&amp;#10;skip_render:&amp;#10;&amp;#10;# Writing &amp;#20889;&amp;#21338;&amp;#23458;&amp;#37197;&amp;#32622;&amp;#10;new_post_name: :title.md # File name of new posts&amp;#10;default_layout: post&amp;#10;titlecase: false # Transform title into titlecase&amp;#10;external_link: true # Open external links in new tab&amp;#10;filename_case: 0&amp;#10;render_drafts: false&amp;#10;post_asset_folder: true&amp;#10;relative_link: false&amp;#10;future: true&amp;#10;highlight:&amp;#10;  enable: true&amp;#10;  line_number: true&amp;#10;  auto_detect: false&amp;#10;  tab_replace:&amp;#10;&amp;#10;# Category &amp;#38; Tag &amp;#30446;&amp;#24405;&amp;#21644;&amp;#26631;&amp;#31614;&amp;#10;default_category: uncategorized&amp;#10;category_map:&amp;#10;tag_map:&amp;#10;&amp;#10;# Date / Time format &amp;#26102;&amp;#38388;&amp;#21644;&amp;#26085;&amp;#26399;&amp;#26684;&amp;#24335;&amp;#10;## Hexo uses Moment.js to parse and display date&amp;#10;## You can customize the date format as defined in&amp;#10;## http://momentjs.com/docs/#/displaying/format/&amp;#10;date_format: YYYY-MM-DD&amp;#10;time_format: HH:mm:ss&amp;#10;&amp;#10;# Pagination &amp;#20998;&amp;#39029;&amp;#35774;&amp;#32622;&amp;#10;## Set per_page to 0 to disable pagination&amp;#10;per_page: 10&amp;#10;pagination_dir: page&amp;#10;&amp;#10;# Extensions &amp;#25554;&amp;#20214;&amp;#21644;&amp;#30382;&amp;#32932;&amp;#10;## Plugins: https://hexo.io/plugins/&amp;#10;## Themes: https://hexo.io/themes/&amp;#10;# theme: landscape&amp;#10;theme: apollo&amp;#10;&amp;#10;# Deployment &amp;#37096;&amp;#32626;&amp;#37197;&amp;#32622;&amp;#10;## Docs: https://hexo.io/docs/deployment.html&amp;#10;deploy: &amp;#10;  type: git &amp;#10;  repo: https://github.com/Jvaeyhcd/jvaeyhcd.github.io.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;5-Hexo使用&quot;&gt;&lt;a href=&quot;#5-Hexo使用&quot; class=&quot;headerlink&quot; title=&quot;5.Hexo使用&quot;&gt;&lt;/a&gt;5.Hexo使用&lt;/h2&gt;&lt;h4 id=&quot;5-1创建新文章&quot;&gt;&lt;a href=&quot;#5-1创建新文章&quot; class=&quot;headerlink&quot; title=&quot;5.1创建新文章&quot;&gt;&lt;/a&gt;5.1创建新文章&lt;/h4&gt;&lt;p&gt;接下来，我们可以开始创建博客了。Hexo建议通过命令来创建文章，当然你也可以直接在_posts目录下创建文件。&lt;br&gt;通过命令创建新的文章&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new post Hexo&amp;#22312;github&amp;#19978;&amp;#26500;&amp;#24314;&amp;#20813;&amp;#36153;&amp;#30340;&amp;#10;INFO  Created: ~/hexo-blog/source/_posts/Hexo&amp;#22312;github&amp;#19978;&amp;#26500;&amp;#24314;&amp;#20813;&amp;#36153;&amp;#30340;.md&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;创建完成后在_posts目录下，就会生成文件“Hexo在github上构建免费的.md”&lt;/p&gt;
&lt;img src=&quot;/2016/02/20/Hexo在github上构建免费的博客/hexo-new.png&quot; alt=&quot;Hexo创建新的文章&quot; title=&quot;Hexo创建新的文章&quot;&gt;
&lt;p&gt;然后，我们编辑文件：”Hexo在github上构建免费的.md”，以markdown语法写文章，然后保存。&lt;/p&gt;
&lt;p&gt;在命令行，启动服务器。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;5-2文章的语法&quot;&gt;&lt;a href=&quot;#5-2文章的语法&quot; class=&quot;headerlink&quot; title=&quot;5.2文章的语法&quot;&gt;&lt;/a&gt;5.2文章的语法&lt;/h4&gt;&lt;p&gt;我们在写文章时，有一些语法的要求。&lt;br&gt;语法包括3部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;基本信息：标题，发布日期，分类目录，标签，类型，固定发布链接&lt;/li&gt;
&lt;li&gt;正文：markdown语法和Swig语法(掌握一个就行)&lt;/li&gt;
&lt;li&gt;特殊标记：引用，链接，图片，代码块，iframe，youtube视频&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&quot;5-2-1基本信息&quot;&gt;&lt;a href=&quot;#5-2-1基本信息&quot; class=&quot;headerlink&quot; title=&quot;5.2.1基本信息&quot;&gt;&lt;/a&gt;5.2.1基本信息&lt;/h6&gt;&lt;p&gt;必须在文件的顶部，—的行之前的部分。如：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;---&amp;#10;title: Hexo&amp;#22312;github&amp;#19978;&amp;#26500;&amp;#24314;&amp;#20813;&amp;#36153;&amp;#30340;&amp;#21338;&amp;#23458;&amp;#10;date: 2016-02-20 12:07:20&amp;#10;tags:&amp;#10;---&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h6 id=&quot;5-2-2正文&quot;&gt;&lt;a href=&quot;#5-2-2正文&quot; class=&quot;headerlink&quot; title=&quot;5.2.2正文&quot;&gt;&lt;/a&gt;5.2.2正文&lt;/h6&gt;&lt;p&gt;hexo的正文要求使用markdown的语法，markdown的语法可以参考 &lt;a href=&quot;http://www.markdown.cn/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;此处&lt;/a&gt;.&lt;/p&gt;
&lt;h6 id=&quot;5-2-3特殊标记&quot;&gt;&lt;a href=&quot;#5-2-3特殊标记&quot; class=&quot;headerlink&quot; title=&quot;5.2.3特殊标记&quot;&gt;&lt;/a&gt;5.2.3特殊标记&lt;/h6&gt;&lt;p&gt;hexo对于一些有特殊标记 文字块，做了特殊的定义。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 引用 &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Swig&amp;#35821;&amp;#27861;&amp;#10;&amp;#123;% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %&amp;#125;&amp;#10;Every interaction is both precious and an opportunity to delight.&amp;#10;&amp;#123;% endblockquote %&amp;#125;&amp;#10;&amp;#10;# Markdown&amp;#35821;&amp;#27861;&amp;#10;&amp;#62; Every interaction is both precious and an opportunity to delight.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 代码块 &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Swig&amp;#35821;&amp;#27861;&amp;#10;&amp;#123;% codeblock .compact http://underscorejs.org/#compact Underscore.js %&amp;#125;&amp;#10;.compact([0, 1, false, 2, &amp;#8216;&amp;#8217;, 3]);&amp;#10;=&amp;#62; [1, 2, 3]&amp;#10;&amp;#123;% endcodeblock %&amp;#125;&amp;#10;&amp;#10;# Markdown&amp;#35821;&amp;#27861;&amp;#10;&amp;#39;```&amp;#123;bash&amp;#125;&amp;#10;.compact([0, 1, false, 2, &amp;#8216;&amp;#8217;, 3]);&amp;#10;=&amp;#62; [1, 2, 3]&amp;#10;```&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 链接 &lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Swig&amp;#35821;&amp;#27861;&amp;#10;&amp;#123;% link &amp;#31881;&amp;#19997;&amp;#26085;&amp;#24535; http://blog.fens.me true &amp;#31881;&amp;#19997;&amp;#26085;&amp;#24535; %&amp;#125;&amp;#10;&amp;#10;# Markdown&amp;#35821;&amp;#27861;&amp;#10;[&amp;#31881;&amp;#19997;&amp;#26085;&amp;#24535;](http://blog.fens.me)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 图片 &lt;/strong&gt;&lt;br&gt;对于本地图片，需要在_config.yml文件中配置”post_asset_folder: true”。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Writing &amp;#20889;&amp;#21338;&amp;#23458;&amp;#37197;&amp;#32622;&amp;#10;new_post_name: :title.md # File name of new posts&amp;#10;default_layout: post&amp;#10;titlecase: false # Transform title into titlecase&amp;#10;external_link: true # Open external links in new tab&amp;#10;filename_case: 0&amp;#10;render_drafts: false&amp;#10;post_asset_folder: true&amp;#10;relative_link: false&amp;#10;future: true&amp;#10;highlight:&amp;#10;  enable: true&amp;#10;  line_number: true&amp;#10;  auto_detect: false&amp;#10;  tab_replace:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样在”hexo new”创建文章的时候hexo会自动会在_posts文件夹下面生成一个与文章同名的文件夹存放图片资源,如下图所示&lt;br&gt;&lt;img src=&quot;/2016/02/20/Hexo在github上构建免费的博客/hexo-new.png&quot; alt=&quot;Hexo创建新的文章&quot; title=&quot;Hexo创建新的文章&quot;&gt;&lt;/p&gt;
&lt;p&gt;通过常规的 markdown 语法和相对路径来引用图片和其它资源可能会导致它们在存档页或者主页上显示不正确。在Hexo 2时代，社区创建了很多插件来解决这个问题。但是，随着Hexo 3 的发布，许多新的标签插件被加入到了核心代码中。这使得你可以更简单地在文章中引用你的资源。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% asset_path slug %&amp;#125;&amp;#10;&amp;#123;% asset_img slug [title] %&amp;#125;&amp;#10;&amp;#123;% asset_link slug [title] %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;比如说：当你打开文章资源文件夹功能后，你把一个 “example.jpg” 图片放在了你的资源文件夹中，如果通过使用相对路径的常规 markdown 语法 它将 不会 出现在页面上。正确的引用本地图片方式是使用下面的标签而不是 markdown ：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% asset_img example.jpg This is an example image %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;6-发布到github&quot;&gt;&lt;a href=&quot;#6-发布到github&quot; class=&quot;headerlink&quot; title=&quot;6.发布到github&quot;&gt;&lt;/a&gt;6.发布到github&lt;/h2&gt;&lt;h4 id=&quot;6-1-静态化处理&quot;&gt;&lt;a href=&quot;#6-1-静态化处理&quot; class=&quot;headerlink&quot; title=&quot;6.1 静态化处理&quot;&gt;&lt;/a&gt;6.1 静态化处理&lt;/h4&gt;&lt;p&gt;写完了文章，我们就可以发布了。要说明的一点是hexo的静态博客框架，那什么是静态博客呢？静态博客，是只包含html, javascript, css文件的网站，没有动态的脚本。虽然我们是用Node进行的开发，但博客的发布后就与Node无关了。在发布之前，我们要通过一条命令，把所有的文章都做静态化处理，就是生成对应的html, javascript, css，使得所有的文章都是由静态文件组成的。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt; 静态化命令 *&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;运行完命令后，在本地目录下，会生成一个public的目录，里面包括了所有静态化的文件。&lt;/p&gt;
&lt;h4 id=&quot;6-1-上传到github&quot;&gt;&lt;a href=&quot;#6-1-上传到github&quot; class=&quot;headerlink&quot; title=&quot;6.1 上传到github&quot;&gt;&lt;/a&gt;6.1 上传到github&lt;/h4&gt;&lt;p&gt;接下来，我们把这个博客发布到github。&lt;br&gt;首先在github上创建一个项目“你的用户名.github.io”,我创建的项目是&lt;a href=&quot;https://github.com/Jvaeyhcd/jvaeyhcd.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;jvaeyhcd.github.io&lt;/a&gt;&lt;br&gt;编辑全局配置文件：_config.yml，找到deploy的部分，设置github的项目地址。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Deployment &amp;#37096;&amp;#32626;&amp;#37197;&amp;#32622;&amp;#10;## Docs: https://hexo.io/docs/deployment.html&amp;#10;deploy: &amp;#10;  type: git #&amp;#36825;&amp;#37324;&amp;#24517;&amp;#39035;&amp;#26159;git&amp;#65292;&amp;#20197;&amp;#21069;&amp;#26159;github&amp;#10;  repo: https://github.com/Jvaeyhcd/jvaeyhcd.github.io.git&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后，通过命令进行部署。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo hexo d&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;部署完成后，打开你在github上创建的工程，你会看到&lt;br&gt;&lt;img src=&quot;/2016/02/20/Hexo在github上构建免费的博客/github.png&quot; alt=&quot;github&quot; title=&quot;github&quot;&gt;&lt;br&gt;然后访问&lt;a href=&quot;http://jvaeyhcd.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jvaeyhcd.github.io/&lt;/a&gt;就能看到你发布到github上的博客了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;很多次想搭建一个自己的博客，彻底从csdn上转移到自己的博客站点中，但是一直由于时间的原因耽搁了。之前也使用过Wordpress来搭建自己的博客，但是发现Wordpress使用起来不是太方便。后来再接触了markdown语法写文章后，喜欢上了markdown。再后来了解到了
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CocoaPods安装和使用教程</title>
    <link href="http://yoursite.com/2016/02/20/CocoaPods%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/02/20/CocoaPods安装和使用教程/</id>
    <published>2016-02-20T01:14:02.000Z</published>
    <updated>2016-02-20T01:27:56.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一、CocosPods是什么&quot;&gt;&lt;a href=&quot;#一、CocosPods是什么&quot; class=&quot;headerlink&quot; title=&quot;一、CocosPods是什么&quot;&gt;&lt;/a&gt;一、CocosPods是什么&lt;/h2&gt;&lt;p&gt;CocoaPods是iOS项目的依赖管理工具，该项目源码在Github上管理。开发iOS项目不可避免地要使用第三方开源库，CocoaPods的出现使得我们可以节省设置和第三方开源库的时间。&lt;br&gt;在使用CocoaPods之前，开发项目需要用到第三方开源库的时候，我们需要&lt;br&gt;1.把开源库的源代码复制到项目中&lt;br&gt;2.添加一些依赖框架和动态库&lt;br&gt;3.设置-ObjC，-fno-objc-arc等参数&lt;br&gt;4.管理他们的更新&lt;br&gt;在使用CocoaPods后，我们只需要把用到的开源库放到一个名为Podfile的文件中，然后执行pod install.Cocoapods就会自动将这些第三方开源库的源码下载下来，并且为我们的工程设置好响应的系统依赖和编译参数。&lt;/p&gt;
&lt;h2 id=&quot;二、CocoaPods的原理&quot;&gt;&lt;a href=&quot;#二、CocoaPods的原理&quot; class=&quot;headerlink&quot; title=&quot;二、CocoaPods的原理&quot;&gt;&lt;/a&gt;二、CocoaPods的原理&lt;/h2&gt;&lt;p&gt;CocoaPods的原理是将所有的依赖库都放到另一个名为Pods的项目中，然后让主项目依赖Pods项目，这样，源码管理工作都从主项目移到了Pods项目中。Pods项目最终会编译成一个名为libPods.a的文件，主项目只需要依赖这个.a文件即可。&lt;/p&gt;
&lt;h2 id=&quot;三、CocoaPods的安装&quot;&gt;&lt;a href=&quot;#三、CocoaPods的安装&quot; class=&quot;headerlink&quot; title=&quot;三、CocoaPods的安装&quot;&gt;&lt;/a&gt;三、CocoaPods的安装&lt;/h2&gt;&lt;p&gt;CocoaPods可以方便地通过Mac自带的RubyGems安装。&lt;br&gt;打开Terminal，然后键入以下命令：&lt;br&gt;$ sudo gem install cocoapods&lt;/p&gt;
&lt;p&gt;执行完这句如果报告以下错误：&lt;br&gt;ERROR: Could not find a valid gem ‘cocoapods’ (&amp;gt;= 0), here is why:&lt;br&gt;Unable to download data from &lt;a href=&quot;https://rubygems.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://rubygems.org/&lt;/a&gt; - Errno::ETIMEDOUT: Operation timed out - connect(2) (&lt;a href=&quot;https://rubygems.org/latest_specs.4.8.gz&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://rubygems.org/latest_specs.4.8.gz&lt;/a&gt;)&lt;br&gt;ERROR: Possible alternatives: cocoapods&lt;/p&gt;
&lt;p&gt;这是因为ruby的软件源rubygems.org因为使用亚马逊的云服务，被我天朝屏蔽了，需要更新一下ruby的源，过程如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ gem sources -l (&amp;#26597;&amp;#30475;&amp;#24403;&amp;#21069;ruby&amp;#30340;&amp;#28304;)&amp;#10;$ gem sources --remove https://rubygems.org/&amp;#10;$ gem sources -a https://ruby.taobao.org/&amp;#10;$ gem sources -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果gem太老，可以尝试用如下命令升级gem&lt;br&gt;$ sudo gem update –system&lt;br&gt;升级成功后会提示: RubyGems system software updated&lt;/p&gt;
&lt;p&gt;然后重新执行安装下载命令&lt;br&gt;$ sudo gem install cocoapods&lt;br&gt;这时候应该没什么问题了&lt;/p&gt;
&lt;p&gt;接下来进行安装，执行：&lt;br&gt;$ pod setup&lt;/p&gt;
&lt;p&gt;Terminal会停留在 Setting up CocoaPods master repo 这个状态一段时间,是因为要进行下载安装,而且目录比较大,需要耐心等待一下.如果想加快速度,可使用cocoapods的镜像索引.（文章末尾附使用镜像索引的方法）&lt;/p&gt;
&lt;h2 id=&quot;四、Cocoapods的使用&quot;&gt;&lt;a href=&quot;#四、Cocoapods的使用&quot; class=&quot;headerlink&quot; title=&quot;四、Cocoapods的使用&quot;&gt;&lt;/a&gt;四、Cocoapods的使用&lt;/h2&gt;&lt;p&gt;进入工程所在的目录（工程根目录）&lt;br&gt;执行命令 touch Podfile&lt;br&gt;这句是说新建一个名为Podfile的文件（不能写成别的名字，也可以自己在工程根目录里面直接新建）&lt;/p&gt;
&lt;p&gt;然后对改文件进行编辑，执行命令 open -e Podfile&lt;br&gt;第一次执行这个命令,会有一个空白文件打开，可以先放在一边，&lt;br&gt;Podfile文件的格式应该如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;platform :ios, &amp;#39;7.0&amp;#39;&amp;#10;pod &amp;#39;AMap2DMap&amp;#39;, &amp;#39;~&amp;#62; 2.5.0&amp;#39;&amp;#10;pod &amp;#39;AFNetworking&amp;#39;, &amp;#39;~&amp;#62; 2.5.3&amp;#39;&amp;#10;pod &amp;#39;SDWebImage&amp;#39;, &amp;#39;~&amp;#62; 3.7.2&amp;#39;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;需要注意的几点：platform那一行，ios三个字母都要小写，而且与前面的冒号之间不能有间隔，后面的版本号也可以不写，但是有些开源库对版本是有要求的，比如要在6.0以上才能运行，遇到这样的开源库就需要写上版本号。&lt;/p&gt;
&lt;p&gt;platform下面就是Cocoapods需要集成的开源库，根据你的需要确定集成那些库。&lt;/p&gt;
&lt;p&gt;举个例子：&lt;br&gt;我要集成AFNetworking这个库类，需要在Cocoapods里面先搜索是否有需要的库，可以在Terminal中输入：&lt;br&gt;pod search AFNetworking&lt;br&gt;回车之后就可以看到和你搜索的关键字相关的一些库类。&lt;/p&gt;
&lt;p&gt;其中第一个就是我们需要的，把pod ‘AFNetworking’， ‘~&amp;gt;2.5.3’&lt;br&gt;那一行复制到我们的Podfile文件中，保存修改。&lt;br&gt;然后在Terminal中执行 ：&lt;br&gt;pod install&lt;/p&gt;
&lt;p&gt;这样，AFNetworking就已经下载完成并且设置好了编译参数和依赖，以后使用的时候切记如下两点：&lt;br&gt;1.从此以后需要使用Cocoapods生成的 .xcworkspace文件来打开工程，而不是使用以前的.xcodeproj文件&lt;br&gt;2.每次更改了Podfile文件，都需要重新执行一次pod update命令&lt;/p&gt;
&lt;p&gt;ps:当执行pod install之后，除了Podfile，还会生成一个名为Podfile.lock的文件，它会锁定当前各依赖库的版本，之后即使多次执行pod install也不会更改版本，只有执行pod update才会改变Podfile.lock.在多人协作的时候，这样可以防止第三方库升级时候造成大家各自的第三方库版本不一致。所以在提交版本的时候不能把它落下，也不要添加到.gitignore中.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、CocosPods是什么&quot;&gt;&lt;a href=&quot;#一、CocosPods是什么&quot; class=&quot;headerlink&quot; title=&quot;一、CocosPods是什么&quot;&gt;&lt;/a&gt;一、CocosPods是什么&lt;/h2&gt;&lt;p&gt;CocoaPods是iOS项目的依赖管理工具
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>高效使用xcode</title>
    <link href="http://yoursite.com/2016/02/19/%E9%AB%98%E6%95%88%E4%BD%BF%E7%94%A8xcode/"/>
    <id>http://yoursite.com/2016/02/19/高效使用xcode/</id>
    <published>2016-02-19T08:23:01.000Z</published>
    <updated>2016-02-20T01:24:15.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="iOS开发" scheme="http://yoursite.com/tags/iOS%E5%BC%80%E5%8F%91/"/>
    
  </entry>
  
</feed>
